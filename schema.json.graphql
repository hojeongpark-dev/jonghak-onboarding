# This file was generated based on "schema.json". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

interface IndividualProxyShopEvent {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
    type: IndividualProxyShopEventType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

interface ProxyShopEvent {
    createdAt: Date!
    description: String
    id: ID!
    language: LanguageType!
    limitCount: Int
    manager: Member!
    managerId: ID!
    period: PeriodObject!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    status: ProxyShopEventStatus!
    type: ProxyShopEventType!
    updatedAt: Date!
}

union IntegratedReview = BlogReview | ProxyShopReview | SpotReview

type AddressOption {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    level: AddressOptionLevelType!
    name: String!
    priority: Int
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type AddressOptionPage {
    edges: [AddressOption!]!
    totalCount: Int!
}

type Advertisement {
    advertiserName: String!
    blog: Blog
    blogCode: Int
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    period: Period!
    spot: Spot
    spotCode: Int
    tags(types: [TagType!]): [Tag!]
    translations(language: LanguageType): [AdvertisementTrans!]
    type: AdvertisementType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type AdvertisementHasTag {
    advertisementCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    tagCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type AdvertisementPage {
    edges: [Advertisement!]!
    totalCount: Int!
}

type AdvertisementTrans {
    advertisementCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    desktopImageUrl: String
    id: ID!
    imageUrl: String
    isPublish: Boolean!
    language: LanguageType!
    linkUrl: String
    localizedPriceDescription(input: LocalizedPriceArgs!): Float
    mobileImageUrl: String
    optionalDescription: String @deprecated(reason: "삭제 될 예정")
    "가격 정보"
    priceDescription: Int
    proxyShop: ProxyShop
    proxyShopId: Int
    tabletImageUrl: String
    title: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Banner {
    advertiserName: String!
    bannerHasProxyShops: [BannerHasProxyShop!] @deprecated(reason: "proxyShops 로 변경")
    blogs: [Blog!]
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    creator: Member
    creatorCode: Float
    description: String
    desktopImageUrl: URL
    exposePosition: BannerExposePositionType!
    extraDescription: String @deprecated(reason: "image에 포함될 예정")
    id: ID!
    isPublish: Boolean!
    language: LanguageType!
    mobileImageUrl: URL
    modifier: Member
    modifierCode: Float
    name: String!
    "YYYY-MM-DD HH:mm:ss"
    periodFrom: Date!
    "YYYY-MM-DD HH:mm:ss"
    periodTo: Date!
    proxyShops: [ProxyShop!]
    spots: [Spot!]
    tabletImageUrl: URL
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BannerHasProxyShop {
    banner: Banner!
    bannerCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BannerPage {
    edges: [Banner!]!
    totalCount: Int!
}

type Blog {
    categories(types: [CategoryType!]): [Category!]
    code: Int!
    content: String
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    id: ID!
    images(isMain: Boolean): [Image!]
    isLiked: Boolean
    isUserBlog: Boolean!
    likeCount: Int!
    memberCode: Int!
    pointAdded: Boolean!
    proxyShops: [ProxyShop!]
    reviewCount: Int!
    reviews(input: BlogReviewPageArgs!): BlogReviewPage!
    shareCount: Int!
    spots(language: LanguageType): [Spot!]
    spotsForUser(language: LanguageType): [Spot!]!
    subtitle: String
    tags: [Tag!]
    title: String
    translations(language: LanguageType): [BlogTrans!]
    "블로그 타입"
    types: [BlogType!]!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    userBlogStatus: UserBlogStatusType!
    viewCount: Int!
    writer: Member!
}

type BlogHasProxyShop {
    blog: Blog!
    blogId: ID!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BlogHasSpot {
    blog: Blog!
    blogCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    spot: Spot!
    spotCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BlogPage {
    edges: [Blog!]!
    totalCount: Int!
}

type BlogReview {
    blog: Blog!
    blogCode: Float!
    children(order: BlogReviewOrder): [BlogReview!]
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    parentCode: Float
    translations(language: LanguageType!): [BlogReviewTrans!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    writer: Member!
}

type BlogReviewPage {
    edges: [BlogReview!]!
    totalCount: Int!
}

type BlogReviewTrans {
    blogReviewCode: Float!
    code: Int!
    content: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isDefault: Boolean!
    language: LanguageType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BlogTrans {
    blogCode: Float!
    code: Int!
    content: String
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    excerpt(length: Int!): String
    hashtags: [TripHashtag!]
    id: ID!
    isDefault: Boolean!
    isMain: Boolean! @deprecated(reason: "move main image to blog translations")
    isPublish: Boolean!
    isRecommend: Boolean!
    isTableOfContents: Boolean!
    language: LanguageType!
    mainImageFullUrl: String
    mainImageUrl: String
    renewalDate: Date!
    subtitle: String
    title: String
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BlogTransHasTripHashtag {
    blogTrans: BlogTrans!
    blogTransCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    hashtag: TripHashtag!
    hashtagCode: Int!
    id: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type BusinessHour {
    dayOfWeek: DayOfWeekType!
    isOpen: Boolean!
    timePeriods: [TimePeriod!]
}

type CartItem {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isActive: Boolean! @deprecated(reason: "proxyShopHasMerchandise의 isActive 이용바랍니다")
    isDeleted: Boolean! @deprecated(reason: "장바구니 하드삭제로 인한 필드 제거")
    isValid: Boolean! @deprecated(reason: "proxyShopHasMerchandise의 isActive 이용바랍니다")
    proxyShopHasMerchandise: ProxyShopHasMerchandise!
    proxyShopHasMerchandiseId: ID!
    quantity: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    user: Member!
    userId: ID!
}

type CartItemPage {
    edges: [CartItem!]!
    totalCount: Int!
}

type Category {
    children: [Category!]
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    parentCode: Int
    priority: Int!
    translations(language: LanguageType): [CategoryTrans!]
    type: CategoryType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type CategoryPage {
    edges: [Category!]!
    totalCount: Int!
}

type CategoryTrans {
    categoryCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Contract {
    code: Int!
    contractEndDate: Date
    contractStartDate: Date
    contractType: ContractType!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    files: [ContractFile!]
    id: ID!
    isAutomaticExtension: Boolean!
    isSettlement: Boolean!
    merchandises: [Merchandise!]
    partnershipCode: Int!
    settlementDates: [Int!]
    settlementType: SettlementType!
    specialNote: String
    spots: [Spot!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ContractFile {
    code: Int!
    contractCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    mimetype: String!
    originalName: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    url: String!
}

type Country {
    code: String!
    countryCode: String!
    id: ID!
    members: [Member!]!
    name: String!
}

type Coupon {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    "ONSITE coupon에서 사용"
    discountDescription: String
    "ONLINE 쿠폰은 RATIO/FIXED, ONSITE 쿠폰은 NONE"
    discountType: CouponDiscountType!
    "ONLINE coupon에서 사용"
    discountValue: Int
    expiredAt: Date!
    id: ID!
    imageUrl: String
    isActive: Boolean!
    manager: Member!
    managerCode: Int!
    name: String!
    partnership: Partnership
    partnershipCode: Int
    provideCount(period: PeriodArgs): Int!
    psdUrl: String
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    usableSpots: [Spot!]
    useType: CouponUseType!
    viewCount(period: PeriodArgs): Int!
    "기간 별 쿠폰 조회수"
    viewCountByPeriod(period: PeriodArgs): Int!
}

type CouponPage {
    edges: [Coupon!]!
    totalCount: Int!
}

type Currency {
    rates: Rates!
    timestamp: String!
}

type CurrencyExchangePrice {
    buyPrice: Float
    code: Int!
    currency: String!
    id: String
    sellPrice: Float
}

type DefaultIndividualProxyShopEvent implements IndividualProxyShopEvent {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
    type: IndividualProxyShopEventType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type DiscountIndividualProxyShopEvent implements IndividualProxyShopEvent {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    eventPrice: Float!
    id: ID!
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
    type: IndividualProxyShopEventType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type DiscountProxyShopEvent implements ProxyShopEvent {
    createdAt: Date!
    description: String
    id: ID!
    individuals: [DiscountIndividualProxyShopEvent!]!
    language: LanguageType!
    limitCount: Int
    manager: Member!
    managerId: ID!
    period: PeriodObject!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    status: ProxyShopEventStatus!
    type: ProxyShopEventType!
    updatedAt: Date!
}

type Division {
    code: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    name: String!
    type: DivisionType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type DivisionPage {
    edges: [Division!]!
    totalCount: Int!
}

type DivisionSet {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    creatripCode: String!
    customsCategory: String!
    firstDivision: Division!
    firstDivisionId: ID!
    fourthDivision: Division
    fourthDivisionId: ID
    hsCode: String!
    id: ID!
    secondDivision: Division
    secondDivisionId: ID
    thirdDivision: Division
    thirdDivisionId: ID
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type DivisionSetPage {
    edges: [DivisionSet!]!
    totalCount: Int!
}

type EventGiftObject {
    localName: String!
    merchandise: Merchandise!
    merchandiseId: Float!
}

type Exchange {
    address: String
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currencyExchangePrices: [CurrencyExchangePrice!]!
    id: ID!
    isPublish: Boolean!
    orderNumber: Int
    spot: Spot
    spotCode: Int
    translations(language: LanguageType): [ExchangeTrans!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ExchangePage {
    edges: [Exchange!]!
    totalCount: Int!
}

type ExchangeTrans {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    exchangeCode: Int!
    id: ID!
    language: LanguageType!
    name: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Faq {
    categories: [Category!]!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isActive: Boolean!
    mainCategoryId: Int!
    middleCategoryId: Int!
    priority: Int!
    translations(language: LanguageType): [FaqTrans!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type FaqPage {
    edges: [Faq!]!
    totalCount: Int!
}

type FaqTrans {
    answer: String
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    faqId: Int!
    id: ID!
    language: LanguageType!
    question: String
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type FcmTokenInfo {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    fcmToken: String!
    id: ID!
    ignoredPushMessageTypeList: [NotificationMessageType!]!
    "기기의 기본 언어 값"
    language: LanguageType!
    "로그아웃시 해당 relation연결을 제거한다"
    memberCode: Int
    udid: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type File {
    createdAt: Date!
    id: ID!
    name: String!
    updatedAt: Date!
    url: ImageUrl!
}

type FreeShippingPolicy {
    baseValues: [FreeShippingPolicyBase!]!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type FreeShippingPolicyBase {
    baseValue: Float!
    currency: CurrencyType!
}

type FreeShippingProxyShopEvent implements ProxyShopEvent {
    createdAt: Date!
    description: String
    id: ID!
    individuals: [DefaultIndividualProxyShopEvent!]!
    language: LanguageType!
    limitCount: Int
    manager: Member!
    managerId: ID!
    period: PeriodObject!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    status: ProxyShopEventStatus!
    type: ProxyShopEventType!
    updatedAt: Date!
}

type GetFreeObject {
    base: Float!
    free: Float!
}

type GetFreeProxyShopEvent implements ProxyShopEvent {
    createdAt: Date!
    description: String
    getFree: GetFreeObject!
    id: ID!
    individuals: [DefaultIndividualProxyShopEvent!]!
    language: LanguageType!
    limitCount: Int
    manager: Member!
    managerId: ID!
    period: PeriodObject!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    status: ProxyShopEventStatus!
    type: ProxyShopEventType!
    updatedAt: Date!
}

type GiftIndividualProxyShopEvent implements IndividualProxyShopEvent {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    minimumOrderQuantity: Int!
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
    type: IndividualProxyShopEventType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type GiftProxyShopEvent implements ProxyShopEvent {
    createdAt: Date!
    description: String
    eventGift: EventGiftObject!
    id: ID!
    individuals: [GiftIndividualProxyShopEvent!]!
    language: LanguageType!
    limitCount: Int
    manager: Member!
    managerId: ID!
    period: PeriodObject!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    status: ProxyShopEventStatus!
    type: ProxyShopEventType!
    updatedAt: Date!
}

type Hashtag {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Header {
    name: String!
    value: String!
}

type HealthCheck {
    status: String!
}

type Image {
    altText: String
    blogCode: Int
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isMain: Boolean!
    originPath: String!
    priority: Int!
    spotCode: Int
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    url: String!
}

type IncomingMerchandise {
    cancelMember: Member
    cancelMemberId: ID
    canceledAt: Date
    code: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    "수령일 - 생성일(구매일),수령일이 없을시에(아직 수령하지않았을시) null이다"
    deliveryTime: Int
    description: String
    id: ID!
    manager: Member
    managerId: ID
    merchandise: Merchandise!
    merchandiseId: ID!
    merchandiseInAndOutLinks: [MerchandiseInAndOutLink!]
    partnership: Partnership
    partnershipId: ID
    paymentMethodType: IncomingMerchandisePaymentMethodType!
    purchaseUrl: String
    quantity: Int!
    receivedAt: Date
    receivedQuantity: Int!
    remainQuantity: Int!
    status: IncomingMerchandiseStatusType!
    type: IncomingMerchandiseType!
    unitPrice: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    validity: Date
    warehouse: Warehouse!
    warehouseId: ID!
}

type IncomingMerchandisePage {
    edges: [IncomingMerchandise!]!
    totalCount: Int!
}

type IndividualShippingPolicy {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    division: String!
    height: Int
    id: ID!
    length: Int
    setPrice: Int!
    shippingPolicyId: ID!
    unitPrice: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    weight: Int!
    width: Int
}

type IndividualSpotEvent {
    "할인 이벤트의 경우 할인 가격"
    baseValue: Int
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    event: SpotEvent!
    id: ID!
    item: SpotItem!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type LanguageCourse {
    cityCategory: Category
    classType: LanguageCourseClassType!
    createdAt: Date!
    detailLocationCategory: Category
    dormitoryInfo: LanguageCourseDormitoryInfo!
    homepage: String
    id: ID!
    instituteType: LanguageCourseInstituteType!
    isFemaleCollege: Boolean!
    isLiked: Boolean!
    likeCount: Int!
    mainImageUrl: ImageUrl
    partnership: Partnership
    reviewCount: Float!
    reviewRatingAverage: Float
    reviews: [LanguageCourseReview!]!
    totalReviewRate: Int!
    translations(language: LanguageType): [LanguageCourseTranslation!]!
    updatedAt: Date!
    viewCount: Int!
}

type LanguageCourseAddressInfo {
    address: String
    zipcode: String
}

type LanguageCourseApplicationFee {
    isActive: Boolean!
    originalPrice(currency: CurrencyType!): Float
    sellPrice(currency: CurrencyType!): Float
}

type LanguageCourseClassFee {
    originalPrice(currency: CurrencyType!): Float
    sellPrice(currency: CurrencyType!): Float
}

type LanguageCourseDormitory {
    createdAt: Date!
    id: ID!
    translations(language: LanguageType): [LanguageCourseDormitoryTranslation!]!
    updatedAt: Date!
}

type LanguageCourseDormitoryFee {
    createdAt: Date!
    dormitory: LanguageCourseDormitory!
    id: ID!
    isActive: Boolean!
    originalPrice(currency: CurrencyType!): Float
    sellPrice(currency: CurrencyType!): Float
    semester: LanguageCourseSemester!
    "LanguageCourseSemester.id"
    semesterId: ID!
    updatedAt: Date!
}

type LanguageCourseDormitoryInfo {
    courseId: ID!
    createdAt: Date!
    dormitories(input: DormitoryPageArgs): LanguageCourseDormitoryPage!
    homepage: String
    id: ID!
    manager: LanguageCourseManager!
    updatedAt: Date!
}

type LanguageCourseDormitoryPage {
    edges: [LanguageCourseDormitory!]!
    totalCount: Int!
}

type LanguageCourseDormitoryTranslation {
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String!
    updatedAt: Date!
}

type LanguageCourseHasRequiredDocument {
    createdAt: Date!
    document: LanguageCourseRequiredDocument!
    "LanguageCourseRequiredDocument.id"
    documentId: ID!
    id: ID!
    "true: 온라인 접수 (default), false: 오프라인 접수"
    isOnlineAvailable: Boolean!
    templateFile: File
    updatedAt: Date!
}

type LanguageCourseHasRequiredInfo {
    createdAt: Date!
    id: ID!
    info: LanguageCourseRequiredInfo!
    "LanguageCourseRequiredInfo.id"
    infoId: ID!
    updatedAt: Date!
}

type LanguageCourseManager {
    email: String
    name: String
    telephone: String
}

type LanguageCoursePage {
    edges: [LanguageCourse!]!
    totalCount: Int!
}

type LanguageCourseRegistration {
    basicInfo: LanguageCourseRegistrationBasicInfo!
    createdAt: Date!
    currencyType: CurrencyType!
    "어드민에서 관리하기 위한 특이사항 적는 곳"
    description: String!
    documents: [LanguageCourseRegistrationRequiredDocument!]!
    groupedInfos: [LanguageCourseRegistrationGroupedRequiredInfo!]!
    id: ID!
    "현재 상태에 대한 메일 전송 여부 (상태 변경시 false 로 변경됨)"
    isMailSent: Boolean!
    "신청할때의 webpage language"
    language: LanguageType!
    "현재 상태에 대한 메일이 전송된 datetime"
    mailSentDate: Date
    "수정한 어드민"
    modifiedAdmin: Member
    "수정한 어드민의 pk"
    modifiedAdminId: ID!
    name: Name!
    "pc, mobile 등의 플랫폼 정보"
    platform: String!
    """

    합격 후 결제한 것에 대한 정보.
    ex) 수업료, 기숙사비
    """
    postPassPaymentInfo: LanguageCourseRegistrationPaymentInfo!
    """

    합격 전 결제한 것에 대한 정보.
    ex) 전형료
    """
    prePassPaymentInfo: LanguageCourseRegistrationPaymentInfo!
    "신청서 작성한 유저"
    registerer: Member
    "신청서 작성한 유저 pk"
    registererId: ID!
    "신청일"
    registrationDate: Date
    "내가 작성한 리뷰"
    review: LanguageCourseReview!
    "접수한 학기 리스트"
    semesters: [LanguageCourseRegistrationSemester!]!
    status: LanguageCourseRegistrationStatusType!
    updatedAt: Date!
}

type LanguageCourseRegistrationBasicInfo {
    "생년월일 (YYYY-MM-DD)"
    birth: Date!
    email: String!
    "성별"
    gender: GenderType!
    "이름"
    name: String!
    ownCountry: CountryType!
    "본국 주소"
    ownCountryAddress: String!
    "본국 전화번호"
    ownCountryTelephone: String!
    "ex) line - creatrip"
    sns: String!
    "본인 개인연락처"
    telephone: String!
}

type LanguageCourseRegistrationGroupedRequiredInfo {
    createdAt: Date!
    "LanguageCourseRequiredInfoGroup.id"
    groupId: ID!
    id: ID!
    infos: [LanguageCourseRegistrationRequiredInfo!]!
    layoutType: LanguageCourseRequiredInfoGroupLayoutType!
    name: Name!
    type: LanguageCourseRequiredInfoGroupType!
    updatedAt: Date!
    values: [[String!]!]!
}

type LanguageCourseRegistrationPage {
    edges: [LanguageCourseRegistration!]!
    totalCount: Int!
}

type LanguageCourseRegistrationPaymentInfo {
    actualPaymentPrice: PaymentPriceInfo!
    "어학당 서버에서 생성되는 랜덤 문자열 (PaymentTransaction.domainTransactionId)"
    id: String!
    items: [LanguageCourseRegistrationPaymentItem!]!
    paymentTransaction: PaymentTransaction
    totalPrice: PaymentPriceInfo!
    usedPoint: PaymentPriceInfo!
}

type LanguageCourseRegistrationPaymentItem {
    createdAt: Date!
    id: ID!
    name: Name!
    originalPrice: PaymentPriceInfo!
    sellPrice: PaymentPriceInfo!
    type: LanguageCourseRegistrationItemType!
    updatedAt: Date!
}

type LanguageCourseRegistrationRequiredDocument {
    createdAt: Date!
    "한 제출서류 항목에 여러 파일을 업로드 할 수 있음"
    files: [File!]!
    id: ID!
    isPass: Boolean!
    koreanName: String!
    localName: String!
    updatedAt: Date!
}

type LanguageCourseRegistrationRequiredInfo {
    "LanguageCourseRequiredInfo.id"
    infoId: ID!
    isRequired: Boolean!
    name: Name!
    type: LanguageCourseRequiredInfoType!
}

type LanguageCourseRegistrationSemester {
    coursePeriod: Period!
    createdAt: Date!
    id: ID!
    "학기명"
    name: Name!
    registrationPeriod: Period!
    "기숙사 신청 여부"
    requestDormitory: Boolean!
    updatedAt: Date!
}

type LanguageCourseRequiredDocument {
    createdAt: Date!
    id: ID!
    translations(language: LanguageType): [LanguageCourseRequiredDocumentTranslation!]!
    updatedAt: Date!
}

type LanguageCourseRequiredDocumentPage {
    edges: [LanguageCourseRequiredDocument!]!
    totalCount: Int!
}

type LanguageCourseRequiredDocumentTranslation {
    createdAt: Date!
    description: String
    id: ID!
    language: LanguageType!
    name: String!
    updatedAt: Date!
}

type LanguageCourseRequiredInfo {
    createdAt: Date!
    group: LanguageCourseRequiredInfoGroup!
    "LanguageCourseRequiredInfoGroup.id"
    groupId: ID!
    id: ID!
    isRequired: Boolean!
    priority: Int!
    translations(language: LanguageType): [LanguageCourseRequiredInfoTranslation!]!
    type: LanguageCourseRequiredInfoType!
    updatedAt: Date!
}

type LanguageCourseRequiredInfoGroup {
    createdAt: Date!
    id: ID!
    infos: [LanguageCourseRequiredInfo!]!
    layoutType: LanguageCourseRequiredInfoGroupLayoutType!
    "유저가 입력해야 하는 테이블 row 수"
    minimumTableRowCount: Int!
    priority: Int!
    translations(language: LanguageType): [LanguageCourseRequiredInfoGroupTranslation!]!
    type: LanguageCourseRequiredInfoGroupType!
    updatedAt: Date!
}

type LanguageCourseRequiredInfoGroupTranslation {
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String!
    updatedAt: Date!
}

type LanguageCourseRequiredInfoTranslation {
    createdAt: Date!
    description: String
    id: ID!
    language: LanguageType!
    name: String!
    options: [String!]
    placeholder: String
    placeholder2: String
    updatedAt: Date!
}

type LanguageCourseReview {
    createdAt: Date!
    id: ID!
    images: [LanguageCourseReviewImage!]!
    starRating: Int!
    updatedAt: Date!
    writer: Member
    writerId: ID!
}

type LanguageCourseReviewImage {
    createdAt: Date!
    id: ID!
    imageUrl: String!
    priority: Int!
    review: LanguageCourseReview!
    reviewId: ID!
    updatedAt: Date!
}

type LanguageCourseSemester {
    classFee: LanguageCourseClassFee!
    coursePeriod: Period!
    createdAt: Date!
    dormitoryFees: [LanguageCourseDormitoryFee!]!
    id: ID!
    name: Name!
    registrationPeriod: Period!
    status: LanguageCourseSemesterStatus!
    updatedAt: Date!
}

type LanguageCourseSemesterPage {
    edges: [LanguageCourseSemester!]!
    totalCount: Int!
}

type LanguageCourseTag {
    createdAt: Date!
    id: ID!
    translations(language: LanguageType): [LanguageCourseTagTranslation!]!
    updatedAt: Date!
}

type LanguageCourseTagPage {
    edges: [LanguageCourseTag!]!
    totalCount: Int!
}

type LanguageCourseTagTranslation {
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String!
    updatedAt: Date!
}

type LanguageCourseTranslation {
    addressInfo: LanguageCourseAddressInfo!
    "현재 등록 가능한 학기 수"
    applicableSemesterCount: Int!
    applicationFee: LanguageCourseApplicationFee!
    courseInfo: String!
    courseManager: LanguageCourseManager!
    createdAt: Date!
    creator: Member
    hashtags: [String!]! @deprecated(reason: "미사용")
    homepage: String
    id: ID!
    isPublish: Boolean!
    language: LanguageType!
    manager: Member
    "최소신청학기"
    minimumRegisterCourseCount: Int!
    modifier: Member
    name: String!
    renewalDate: Date!
    requiredDocuments: [LanguageCourseHasRequiredDocument!]!
    requiredInfos: [LanguageCourseHasRequiredInfo!]!
    semesters(input: LanguageCourseSemesterPageArgs): LanguageCourseSemesterPage!
    surroundingInfo: String!
    tags: [LanguageCourseTag!]!
    updatedAt: Date!
}

type LinePayRequestInfoPaymentUrl {
    """

    결제 화면 이동 App URL
    앱에서 결제 요청이 앱에서 이루어진 경우 사용
    가맹점 앱에서 LINE pay 앱으로 이동하기 위한 URL
    """
    app: String!
    """

    결제 화면 이동 Web URL
    결제 요청이 웹 환경에서 이루어진 경우 사용
    LINE Pay 결제 대기 화면으로 이동하기 위한 URL
    별도의 파라미터 없이 전달된 URL 그대로 이동
    Desktop에서 팝업 open시, 사이즈 Width: 700px, Height : 546px
    """
    web: String!
}

type LinePayRequestResult {
    info: LinePayRequestResultInfo
    "결과코드 (https://pay.line.me/documents/online_v3_ko.html#request-api)"
    returnCode: String!
    "결과메세지"
    returnMessage: String!
}

type LinePayRequestResultInfo {
    "LINE Pay app 에서 Scanner를 이용하는 대신 코드를 입력하는 경우 사용하는 코드 값"
    paymentAccessToken: String!
    paymentUrl: LinePayRequestInfoPaymentUrl!
    "거래번호"
    transactionId: ID!
}

type Member {
    cartItems(input: CartItemPageInput!): CartItemPage
    code: Int!
    country: Country @deprecated(reason: "countryType으로 이동")
    countryCode: String @deprecated(reason: "countryType으로 이동")
    countryType: CountryType
    coupons: [Coupon!]
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    email: String
    fcmTokenInfos: [FcmTokenInfo!]!
    id: ID!
    "YYYY-MM-DD HH:mm:ss"
    lastLogin: Date
    level: MemberRoleType!
    likeBlogs(input: MemberLikeBlogPageArgs!): BlogPage
    likeSpots(input: MemberLikeSpotPageArgs!): SpotPage
    memberLikedProxyShops(input: MemberLikedProxyShopPageInput!): MemberLikedProxyShopPage
    name: String
    nickname: String
    notifications(input: NotificationPageArgs!): NotificationPage!
    orders(input: OrderPageInput!): OrderPage
    partnerships: [Partnership!]
    picture: String @deprecated(reason: "Use profileUrl")
    point: Point!
    profileUrl: String
    proxyShopReviews(input: ProxyShopReviewPageInput!): ProxyShopReviewPage
    purchases(input: MemberPurchasePageArgs!): ReservationPage!
    requestMerchandiseQuotes(input: RequestMerchandiseQuotePageInput!): RequestMerchandiseQuotePage!
    reviews(input: IntegratedReviewArgs!): [IntegratedReview!]!
    shippingAddresses(
        "전체 배송 정책에서 해당 매대들의 예외 배송정책을 찾아서 제외시켜줌"
        proxyShopIds: [ID!]
    ): [ShippingAddress!]
    socialInfos: [SocialInfo!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type MemberLikedProxyShop {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    memberId: ID!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type MemberLikedProxyShopPage {
    edges: [MemberLikedProxyShop!]!
    totalCount: Int!
}

type MemberPage {
    edges: [Member!]!
    totalCount: Int!
}

type Merchandise {
    barcodeUrl: String
    brand: ProxyTag!
    brandId: ID!
    code: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    divisionSet: DivisionSet!
    divisionSetId: ID!
    enName: String!
    "출고 가능 재고(재고 수량 - 준비 완료 된 수량)"
    forwardableQuantity(warehouseId: ID): Int!
    id: ID!
    imageUrl: String
    incomingMerchandises: [IncomingMerchandise!]!
    "들어올 수량"
    incomingQuantity(warehouseId: ID): Int!
    isActive: Boolean!
    isDeleted: Boolean!
    koName: String!
    optionPairs: [OptionPair!]
    outgoingMerchandises: [OutgoingMerchandise!]!
    partnershipHasMerchandises: [PartnershipHasMerchandise!]
    "준비 완료 된 수량"
    preparedQuantity(warehouseId: ID): Int!
    purchaseBasePrice: Int!
    purchaseUrl: String
    salesBasePrice: Int!
    "재고 수량"
    stockQuantity(warehouseId: ID): Int!
    totalUnitPriceOfMerchandiseStock(warehouseId: ID): Int!
    type: MerchandiseType!
    "미처리 수량"
    unprocessedQuantity(warehouseId: ID): Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    "gram(g)"
    weight: Int!
}

type MerchandiseInAndOutLink {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    incomingMerchandise: IncomingMerchandise!
    incomingMerchandiseId: ID!
    merchandise: Merchandise! @deprecated(reason: "삭제 될 예정, incoming, outgoing에서 확인 가능")
    merchandiseId: ID! @deprecated(reason: "삭제 될 예정, incoming, outgoing에서 확인 가능")
    outgoingMerchandise: OutgoingMerchandise!
    outgoingMerchandiseId: ID!
    quantity: Int!
    type: MerchandiseInAndOutLinkType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type MerchandiseInAndOutLinkPage {
    edges: [MerchandiseInAndOutLink!]!
    totalCount: Int!
}

type MerchandisePage {
    edges: [Merchandise!]!
    totalCount: Int!
}

type MultiSearchResult {
    searchedBlogs: SearchedBlogPage!
    searchedCoupons: SearchedSpotPage!
    searchedNews: SearchedBlogPage!
    searchedProxyShops: SearchedProxyShopPage!
    searchedSpots: SearchedSpotPage!
}

type MultiSearchResultFederation {
    searchedBlogs: BlogPage!
    searchedCoupons: SpotPage!
    searchedNews: BlogPage!
    searchedProxyShops: ProxyShopPage!
    searchedSpots: SpotPage!
}

type Mutation {
    addBlogToAdvertisement(input: AddBlogToAdvertisementArgs!): Advertisement!
    addBlogToSpot(input: AddBlogToSpotArgs!): BlogHasSpot!
    addCategoryToProxyShop(input: ProxyShopCategoryCreateInput!): ProxyShopHasCategory!
    addCouponToMember(couponCode: Float!): Member!
    "매대에 제외할 배송정책 추가"
    addExcludedShippingPolicyToProxyShop(input: ProxyShopHasExcludedShippingPolicyCreateInput!): ProxyShop!
    addGiftToOrderShipping(input: AddGiftToOrderShippingInput!): OrderShipping!
    addHashtagToLanguageCourseTranslation(input: AddHashtagToLanguageCourseTranslationArgs!): LanguageCourseTranslation! @deprecated(reason: "미사용")
    addHashtagToProxyShop(input: ProxyShopHasHashtagCreateInput!): Hashtag!
    addImageToProxyShop(input: ProxyShopImageCreateInput!): ProxyShopImage!
    addImageToProxyShopReview(input: ProxyShopReviewImageAddInput!): ProxyShopReviewImage!
    addImageToSpotReview(input: SpotReviewImageAddArgs!): SpotReviewImage!
    addMerchandiseToProxyShop(input: ProxyShopHasMerchandiseCreateInput!): ProxyShopHasMerchandise!
    addPaymentInformationToOrder(input: AddPaymentInput!): Order!
    addPercentRefundPolicy(input: AddPercentRefundPolicyArgs!): ReservationPolicy!
    addProxyShopToAdvertisement(input: AddProxyShopToAdvertisementArgs!): AdvertisementTrans!
    addPushMessageTypeToIgnoredList(input: AddIgnoredPushMessageTypeArgs!): FcmTokenInfo!
    addRemarkToReservationPolicy(input: AddRemarkToReservationArgs!): ReservationPolicy!
    addRequiredInfoToReservationPolicy(input: AddRequiredInfoToReservationPolicyArgs!): ReservationPolicy!
    addShippingInfoToOrderShipping(input: AddShippingInfoToOrderShippingInput!): OrderShipping!
    addSpotToAdvertisement(input: AddSpotToAdvertisementArgs!): Advertisement!
    addSpotToContract(input: AddSpotToContractArgs!): Contract!
    addSpotToCoupon(input: AddSpotToCouponArgs!): Coupon! @deprecated(reason: "linkSpotToCoupon 으로 변경")
    addSpotToVoucherTemplate(input: AddSpotToVoucherTemplateArgs!): SpotHasVoucherTemplate!
    addTagToAdvertisement(input: AddTagToAdvertisementArgs!): AdvertisementHasTag!
    addTagToLanguageCourseTranslation(input: AddTagToLanguageCourseTranslationInput!): LanguageCourseTranslation!
    addTripHashtagToBlog(input: AddTripHashtagToBlogTransArgs!): BlogTrans!
    addTripHashtagToSpot(input: AddTripHashtagToSpotTransArgs!): SpotTrans!
    addTypeToBlog(input: AddTypeToBlogArgs!): Blog!
    addVoucherToReservation(input: AddVoucherToReservationArgs!): Reservation!
    applyPointToLanguageCourseRegistrationPostPayment(input: ApplyPointToLanguageCourseRegistrationPaymentInput!): LanguageCourseRegistration!
    applyPointToLanguageCourseRegistrationPrePayment(input: ApplyPointToLanguageCourseRegistrationPaymentInput!): LanguageCourseRegistration!
    applyPointToOrder(input: ApplyOrderPointInput!): Order!
    "결제금액의 일부를 포인트로 지불"
    applyPointToReservation(input: ApplyPointToReservationArgs!): Reservation!
    bulkCreateCartItem(input: BulkCreateCartItemArgs!): [CartItem!]!
    bulkCreateIncomingMerchandise(input: [IncomingMerchandiseCreateInput!]!): [IncomingMerchandise!]!
    bulkCreateVoucher(input: BulkCreateVoucherArgs!): [Voucher!]!
    bulkMoveMerchandiseToOtherWarehouse(input: [MoveMerchandiseToOtherWarehouseInput!]!): [MerchandiseInAndOutLink!]!
    bulkReceiveMovedMerchandises(outgoingMerchandiseIds: [ID!]!): [OutgoingMerchandise!]!
    "group 클릭시 여러개를 한번에 연결하기 위한 용도"
    bulkSetRequiredInfoToLanguageCourseTranslation(input: BulkSetRequiredInfoToLanguageCourseTranslationArgs!): LanguageCourseTranslation!
    bulkUpdateShippingInfoToOrderShipping(input: [AddShippingInfoToOrderShippingForBulkInput!]!): [OrderShipping!]!
    bulkUpdateSpotItemTrans(inputs: [UpsertSpotItemTransArgs!]!): [SpotItemTrans!]!
    bulkUpdateSpotItems(inputs: [UpdateSpotItemArgs!]!): [SpotItem!]!
    cancelIncomingMerchandise(input: IncomingMerchandiseCancelInput!): IncomingMerchandise!
    cancelOrderShipping(id: ID!): OrderShipping!
    cancelOrderShippingItem(input: CancelOrderShippingItemInput!): OrderShipping!
    cancelPaymentReadyOrderShipping(id: ID!): OrderShipping!
    cancelRequestMerchandiseQuote(id: ID!): RequestMerchandiseQuote!
    cancelReservation(code: Int!): Reservation!
    cancelReservationForUser(code: Int!): Reservation!
    changeAllNotificationsToReadStatus: Boolean!
    changeCartItemQuantity(input: ChangeCartItemQuantityInput!): CartItem!
    changeMemberLevel(input: ChangeMemberLevelArgs!): Member!
    changeMemberThumbnail(input: ChangeMemberThumbnailArgs!): Member!
    changeNotificationToReadStatus(code: Int!): Notification!
    changePartnerPassword(input: ChangePartnerPassword!): Member!
    changePassword(input: ChangePasswordArgs!): Boolean!
    changeProxyShopHasMerchandisePriority(input: ProxyShopHasMerchandiseChangePriorityInput!): [ProxyShopHasMerchandise!]!
    changeProxyShopImagePriority(input: ProxyShopImageChangePriorityInput!): [ProxyShopImage!]!
    changeProxyShopReviewImagePriority(input: ProxyShopReviewImageChangePriorityInput!): [ProxyShopReviewImage!]!
    changeProxyTagPriority(input: ProxyTagChangePriorityInput!): [ProxyTag!]!
    changeReservationDate(input: ChangeReservationDateArgs!): Reservation!
    changeWarehouseFromOrderShipping(input: ChangeWarehouseInput!): OrderShipping!
    closeEvent(code: Int!): SpotEvent!
    closeEventTest(date: String!): [ProxyShopEvent!]!
    completeOrder(id: ID!): Order!
    completeOrderShipping(id: ID!): OrderShipping!
    completePreparingMerchandise(input: CompleteMerchandisePreparationInput!): OrderShipping!
    confirmLinePayForProxy(input: ConfirmLinePayInput!): Order! @deprecated(reason: "Payment webhook에서 처리하는 방식으로 변경")
    confirmLinePayForTrip(args: ConfirmLinePayArgs!): Reservation! @deprecated(reason: "결제서버의 rest api를 사용해주세요")
    confirmReservation(code: Int!): Reservation!
    confirmUserBlog(input: ConfirmUserBlogArgs!): Blog!
    copyLanguageCourseTranslation(input: CopyLanguageCourseTranslationArgs!): LanguageCourse!
    createAddressOption(input: AddressOptionCreateInput!): AddressOption!
    createAdvertisement(input: CreateAdvertisementArgs!): Advertisement!
    createBanner(input: CreateBannerArgs!): Banner!
    createBlog(input: CreateBlogArgs!): Blog!
    createBlogDraftForUser(input: CreateUserBlogArgs!): Blog!
    createBlogReview(input: BlogReviewCreateArgs!): BlogReview!
    createCartItem(input: CartItemCreateInput!): CartItem!
    createCategory(input: CreateCategoryArgs!): Category!
    createContractToPartnership(input: CreateContractToPartnershipArgs!): Contract!
    createDiscountIndividualProxyShopEvent(input: CreateDiscountIndividualProxyShopEventArgs!): DiscountProxyShopEvent!
    createDiscountIndividualSpotEvent(input: CreateDiscountIndividualSpotEventArgs!): IndividualSpotEvent!
    createDiscountProxyShopEvent(input: CreateDiscountProxyShopEventArgs!): DiscountProxyShopEvent!
    createDiscountSpotEvent(input: CreateDiscountSpotEventArgs!): SpotEvent!
    createDivision(input: DivisionCreateInput!): Division!
    createDivisionSet(input: DivisionSetCreateInput!): DivisionSet!
    createExchangeWithTrans(input: CreateExchangeWithTransArgs!): Exchange!
    createFaq(input: CreateFaqArgs!): Faq!
    createFileToContract(input: CreateFileToContractArgs!): ContractFile!
    createFreeShippingIndividualProxyShopEvent(input: CreateIndividualProxyShopEventArgs!): FreeShippingProxyShopEvent!
    createFreeShippingProxyShopEvent(input: CreateFreeShippingProxyShopEventArgs!): FreeShippingProxyShopEvent!
    createGetFreeIndividualProxyShopEvent(input: CreateIndividualProxyShopEventArgs!): GetFreeProxyShopEvent!
    createGetFreeIndividualSpotEvent(input: CreateGetFreeIndividualSpotEventArgs!): IndividualSpotEvent!
    createGetFreeProxyShopEvent(input: CreateGetFreeProxyShopEventArgs!): GetFreeProxyShopEvent!
    createGetFreeSpotEvent(input: CreateGetFreeSpotEventArgs!): SpotEvent!
    createGiftIndividualProxyShopEvent(input: CreateGiftIndividualProxyShopEventArgs!): GiftProxyShopEvent!
    createGiftProxyShopEvent(input: CreateGiftProxyShopEventArgs!): GiftProxyShopEvent!
    createImageToBlog(input: CreateImageToBlogArgs!): Image!
    createImageToSpot(input: CreateImageToSpotArgs!): Image!
    createImageToSpotItem(input: CreateImageToSpotItemArgs!): SpotItemImage!
    createIncomingMerchandise(input: IncomingMerchandiseCreateInput!): IncomingMerchandise!
    createIndividualToShippingPolicy(input: IndividualShippingPolicyCreateInput!): IndividualShippingPolicy!
    createItemToSpot(input: CreateItemToSpotArgs!): SpotItem!
    createLanguageCourse(input: CreateLanguageCourseArgs!): LanguageCourse!
    createLanguageCourseDormitory(input: CreateLanguageCourseDormitoryArgs!): LanguageCourse!
    createLanguageCourseRegistration(input: CreateLanguageCourseRegistrationArgs!): LanguageCourseRegistration!
    createLanguageCourseRequiredDocument(input: CreateLanguageCourseRequiredDocumentArgs!): LanguageCourseRequiredDocument!
    createLanguageCourseRequiredInfo(input: CreateLanguageCourseRequiredInfoArgs!): LanguageCourseRequiredInfo!
    createLanguageCourseRequiredInfoGroup(input: CreateLanguageCourseRequiredInfoGroupArgs!): LanguageCourseRequiredInfoGroup!
    createLanguageCourseSemester(input: CreateLanguageCourseSemesterArgs!): LanguageCourseTranslation!
    createLanguageCourseTag(input: CreateLanguageCourseTagInput!): LanguageCourseTag!
    createMerchandise(input: MerchandiseCreateInput!): Merchandise!
    createNonSaleOutgoingMerchandise(input: NonSaleOutgoingMerchandiseCreateInput!): OutgoingMerchandise!
    createOnlineCoupon(input: CreateOnlineCouponArgs!): Coupon!
    createOnsiteCoupon(input: CreateOnsiteCouponArgs!): Coupon!
    createOrder(input: OrderCreateInput!): Order!
    createOrderForNonUser(input: OrderCreateInput!): Order!
    createPartner(input: CreatePartnerArgs!): Member!
    createPartnership(input: CreatePartnershipArgs!): Partnership!
    createProxyShop(input: ProxyShopCreateInput!): ProxyShop!
    createProxyShopReview(input: ProxyShopReviewCreateInput!): ProxyShopReview!
    createProxyTagCategoryRelation(input: ProxyTagRelationCreateInput!): ProxyTag!
    createProxyTagOptionRelation(input: ProxyTagRelationCreateInput!): ProxyTag!
    "This mutation, You should input all Language in ProxyTagCreateInput"
    createProxyTagWithTranslations(input: ProxyTagCreateInput!): ProxyTag!
    createRequestMerchandiseQuote(input: RequestMerchandiseQuoteCreateInput!): RequestMerchandiseQuote!
    createRequiredInfoWithTrans(input: CreateRequiredInfoWithTransArgs!): RequiredInfo!
    createReservation(input: CreateReservationArgs!): Reservation!
    createReservationForNonUser(input: CreateReservationArgs!): Reservation!
    "예약한 스팟에 대한 리뷰 생성"
    createReservationReview(input: ReservationReviewCreateArgs!): SpotReview!
    createShippingAddress(input: ShippingAddressCreateInput!): ShippingAddress!
    createShippingAddressAboutShippingSite(shippingSiteId: ID!): ShippingAddress!
    createShippingPolicy(input: ShippingPolicyCreateInput!): ShippingPolicy!
    createShippingSite(input: ShippingSiteCreateInput!): ShippingSite!
    createSpecialReservableTimeToReservationPolicy(input: CreateSpecialReservableTimeToReservationPolicyArgs!): SpecialReservableTime!
    createSpot(input: CreateSpotArgs!): Spot!
    createSpotReview(input: SpotReviewCreateArgs!): SpotReview!
    createTip(input: CreateTipArgs!): Tip!
    createTransToAdvertisement(input: CreateTransToAdvertisementArgs!): AdvertisementTrans!
    createVoucher(input: CreateVoucherInput!): Voucher!
    createVoucherTemplate(input: CreateVoucherTemplateArgs!): VoucherTemplate!
    createWarehouse(input: WarehouseCreateInput!): Warehouse!
    declineUserBlog(code: Int!): Blog!
    deleteAddressOption(id: ID!): ID!
    deleteAdvertisement(code: Int!): Boolean!
    deleteAdvertisementTrans(input: DeleteAdvertisementTransArgs!): Boolean!
    deleteBanner(code: Int!): Boolean!
    deleteBlog(code: Int!): Boolean!
    deleteBlogReview(code: Int!): Boolean!
    deleteBlogTrans(input: DeleteBlogTransArgs!): Boolean!
    deleteCartItem(id: ID!): ID!
    deleteCategory(code: Int!): Boolean!
    deleteContractFromPartnership(input: DeleteContractFromPartnershipArgs!): Boolean!
    deleteCoupon(code: Float!): Boolean!
    deleteDivision(id: ID!): ID!
    deleteDivisionSet(id: ID!): ID!
    deleteDraftBlogForUser(code: Int!): Boolean!
    deleteExchange(code: Int!): Boolean!
    deleteFaq(id: ID!): Boolean!
    deleteFileFromContract(contractFileCode: Int!): Boolean!
    deleteImageFromBlog(input: DeleteImageFromBlogArgs!): Boolean!
    deleteImageFromCoupon(code: Float!): Coupon!
    deleteImageFromRequiredInfo(code: Int!): RequiredInfo!
    deleteImageFromSpot(input: DeleteImageFromSpotArgs!): Boolean!
    deleteImageFromSpotItem(input: DeleteImageFromSpotItemArgs!): Boolean!
    deleteIndividualFromShippingPolicy(id: ID!): ID!
    deleteIndividualProxyShopEvent(input: DeleteIndividualProxyShopEventArgs!): ProxyShopEvent!
    deleteIndividualSpotEvent(input: DeleteIndividualSpotEventArgs!): SpotEvent!
    deleteItemFromSpot(input: DeleteItemFromSpotArgs!): Boolean!
    deleteLanguageCourse(id: ID!): Boolean!
    deleteLanguageCourseDormitory(
        "LanguageCourseDormitory.id"
        id: ID!
    ): Boolean!
    deleteLanguageCourseRequiredDocument(id: ID!): Boolean!
    deleteLanguageCourseRequiredInfo(id: ID!): Boolean!
    deleteLanguageCourseRequiredInfoGroup(id: ID!): Boolean!
    deleteLanguageCourseSemester(semesterId: ID!): LanguageCourseTranslation!
    deleteLanguageCourseTag(
        "LanguageCourseTag.id"
        id: ID!
    ): Boolean!
    deleteLanguageCourseTranslation(
        "LanguageCourseTranslation.id"
        id: ID!
    ): Boolean!
    deleteMember(code: Int!): Boolean!
    deleteMerchandise(id: ID!): ID!
    deleteNotification(code: Int!): Boolean!
    deleteOptionPair(id: ID!): ID!
    deletePartnership(code: Int!): Boolean!
    deleteProxyShop(id: ID!): ID!
    deleteProxyShopEvent(id: ID!): Boolean!
    deleteProxyShopReview(id: ID!): ID!
    deleteProxyTag(id: ID!): ID!
    deleteProxyTagRelation(input: ProxyTagRelationDeleteInput!): Boolean!
    deletePsdFromCoupon(code: Float!): Coupon!
    deleteRequiredInfo(code: Int!): Boolean!
    deleteSearchHistory(keyword: String!): [String!]!
    deleteShippingAddress(id: ID!): Boolean!
    deleteShippingPolicy(id: ID!): ID!
    deleteShippingSite(id: ID!): ID!
    deleteSpecialReservableTimeFromReservationPolicy(input: DeleteSpecialReservableTimeFromReservationPolicyArgs!): Boolean!
    deleteSpot(code: Int!): Boolean!
    deleteSpotEvent(code: Int!): Boolean!
    deleteSpotReview(code: Int!): Boolean!
    deleteTip(code: Int!): Boolean!
    deleteVoucher(code: Int!): VoucherTemplate!
    deleteVoucherTemplate(code: Int!): Boolean!
    deleteWarehouse(id: ID!): ID!
    expireMemberFromFcmTokenInfo(udid: String!): FcmTokenInfo!
    forceCloseProxyShopEvent(id: ID!): ProxyShopEvent!
    "유저에게 각종 보상 포인트로 지급"
    givePointCompensation(input: GivePointCompensationArgs!): Point!
    integrateSocialAccount(input: SocialInfoArgs!): Member!
    "예약 내역에 바우처 지급"
    issueVouchersToReservation(input: IssueVouchersToReservationArgs!): [Voucher!]!
    linkBannerAndBlog(input: LinkBannerAndBlogArgs!): Banner!
    linkBannerAndProxyShop(input: LinkBannerAndProxyShopArgs!): Banner!
    linkBannerAndSpot(input: LinkBannerAndSpotArgs!): Banner!
    linkCategoryToBlog(input: LinkCategoryToBlogArgs!): Blog!
    linkCategoryToSpot(input: LinkCategoryToSpotArgs!): Spot!
    linkChildCategoryToParent(input: LinkChildCategoryToParentArgs!): Category!
    linkMerchandiseAndPartnerShip(input: LinkMerchandiseAndPartnerShipInput!): PartnershipHasMerchandise!
    linkProxyShopAndBlog(input: LinkProxyShopAndBlogInput!): BlogHasProxyShop!
    linkSpotToCoupon(input: AddSpotToCouponArgs!): SpotHasCoupon!
    login(input: SignInArgs!): SignInResult! @deprecated(reason: "use signIn")
    "바우처 개별 사용 description 입력 필수"
    manualUseVoucher(input: UseVoucherArgs!): Voucher!
    moveMerchandiseToOtherWarehouse(input: MoveMerchandiseToOtherWarehouseInput!): [MerchandiseInAndOutLink!]!
    overwriteDesktopImageToAdvertisementTrans(input: OverwriteDesktopImageToAdvertisementTransArgs!): AdvertisementTrans!
    overwriteImageToAdvertisementTrans(input: OverwriteImageToAdvertisementTransArgs!): AdvertisementTrans!
    overwriteMobileImageToAdvertisementTrans(input: OverwriteMobileImageToAdvertisementTransArgs!): AdvertisementTrans!
    overwriteTabletImageToAdvertisementTrans(input: OverwriteTabletImageToAdvertisementTransArgs!): AdvertisementTrans!
    purchaseCompleteOrderShipping(id: ID!): OrderShipping!
    receiveIncomingMerchandise(input: IncomingMerchandiseReceiveInput!): IncomingMerchandise!
    receiveMovedMerchandises(input: ReceiveMovedMerchandisesInput!): OutgoingMerchandise!
    refundOrCancelForNonUser(input: RefundReservationForNonUserArgs!): Reservation!
    refundReservation(input: RefundReservationArgs!): Reservation!
    registerFcmTokenInfo(input: RegisterFcmTokenInfoArgs!): FcmTokenInfo!
    rejectOrderShippingCancelRequest(id: ID!): OrderShipping!
    removeBlogFromAdvertisement(advertisementCode: Int!): Advertisement!
    removeBlogFromSpot(input: RemoveBlogFromSpotArgs!): Boolean!
    removeCategoryFromProxyShop(input: ProxyShopCategoryDeleteInput!): Boolean!
    removeCouponFromMember(couponCode: Float!): Boolean!
    removeCurrencyExchangePriceFromExchange(input: RemoveCurrencyExchangePriceArgs!): Exchange!
    "매대에 제외할 배송정책 삭제"
    removeExcludedShippingPolicyFromProxyShop(input: ProxyShopHasExcludedShippingPolicyDeleteInput!): Boolean!
    removeHashtagFromLanguageCourseTranslation(input: RemoveHashtagFromLanguageCourseTranslationArgs!): LanguageCourseTranslation! @deprecated(reason: "미사용")
    removeHashtagFromProxyShop(input: ProxyShopHasHashtagDeleteInput!): Boolean!
    removeImageFromProxyShop(input: ProxyShopImageDeleteInput!): [ProxyShopImage!]!
    removeImageFromProxyShopReview(input: ProxyShopReviewImageDeleteInput!): [ProxyShopReviewImage!]!
    removeImageFromSpotReview(input: SpotReviewImageDeleteArgs!): [SpotReviewImage!]!
    removeLanguageCourseRegistrationRequiredDocumentFile(input: RemoveFileToLanguageCourseRegistrationRequiredDocumentArgs!): LanguageCourseRegistrationRequiredDocument!
    removeMerchandiseFromProxyShop(input: ProxyShopHasMerchandiseDeleteInput!): [ProxyShopHasMerchandise!]!
    removePercentRefundPolicy(input: RemovePercentRefundPolicyArgs!): ReservationPolicy!
    removeProxyShopFromAdvertisement(input: RemoveProxyShopFromAdvertisementArgs!): AdvertisementTrans!
    removePushMessageTypeToIgnoredList(input: RemoveIgnoredPushMessageTypeArgs!): FcmTokenInfo!
    removeRemarkFromReservationPolicy(input: RemoveRemarkFromReservationPolicyArgs!): Boolean!
    removeRequiredInfoFromReservationPolicy(input: RemoveRequiredInfoToReservationPolicyArgs!): ReservationPolicy!
    removeSpotFromAdvertisement(advertisementCode: Int!): Advertisement!
    removeSpotFromContract(input: RemoveSpotFromContractArgs!): Boolean!
    removeSpotFromCoupon(input: RemoveSpotFromCouponArgs!): Boolean! @deprecated(reason: "Move to unlinkSpotFromCoupon")
    removeSpotFromVoucherTemplate(input: RemoveSpotFromVoucherTemplateArgs!): Boolean!
    removeTagFromAdvertisement(input: RemoveTagFromAdvertisementArgs!): Boolean!
    removeTagToLanguageCourseTranslation(input: RemoveTagToLanguageCourseTranslationInput!): LanguageCourseTranslation!
    removeTripHashtagFromBlog(input: RemoveTripHashtagFromBlogTransArgs!): Boolean!
    removeTripHashtagFromSpot(input: RemoveTripHashtagFromSpotTransArgs!): Boolean!
    removeTypeFromBlog(input: RemoveTypeFromBlogArgs!): Blog!
    requestConfirmBlogForUser(code: Int!): Blog!
    requestOrderShippingCancellation(id: ID!): OrderShipping!
    requestOrderShippingCancellationForNonUser(input: CancelOrderShippingRequestForNonUserInput!): OrderShipping!
    requestResetPassword(input: RequestResetPasswordArgs!): Boolean!
    resetOrderShipping(input: ResetOrderShippingInput!): Order!
    resetPassword(input: ResetPasswordArgs!): Boolean!
    sendRequestMerchandiseQuote(id: ID!): RequestMerchandiseQuote!
    sendReservationStatusMail(code: Int!): Boolean!
    sendSupportMail(input: SendSupportMailArgs!): Boolean!
    sendTestNotification(input: SendTestNotificationArgs!): Boolean!
    setAsUsedReservation(code: Int!): Reservation!
    setBlogTransToTip(input: SetBlogTransToTipArgs!): Tip!
    setBrandImage(input: SetBrandImageInput!): ProxyTag!
    setCityCategoryToLanguageCourse(input: SetCityCategoryToLanguageCourseArgs!): LanguageCourse!
    setDetailLocationCategoryToLanguageCourse(input: SetDetailLocationCategoryToLanguageCourseArgs!): LanguageCourse!
    setFaqActiveStatus(input: SetFaqActiveStatusArgs!): Faq!
    setGroupToLanguageCourseRequiredInfo(input: SetGroupToLanguageCourseRequiredInfoArgs!): LanguageCourseRequiredInfo!
    setImageToCoupon(input: SetImageToCouponArgs!): Coupon!
    setLanguageCourseIsFemaleCollegeStatus(input: SetLanguageCourseIsFemaleCollegeStatus!): LanguageCourse!
    setLanguageCourseLikeStatus(input: SetLanguageCourseLikeStatusArgs!): LanguageCourse!
    setLanguageCourseRequiredInfoRequiredStatus(input: SetLanguageCourseRequiredInfoRequiredStatusInput!): LanguageCourseRequiredInfo!
    setLanguageCourseTranslationPublishStatus(input: SetLanguageCoursePublishStatusArgs!): LanguageCourseTranslation!
    setMainImageToBlogTrans(input: SetMainImageToBlogTransArgs!): BlogTrans!
    setMainImageToLanguageCourse(input: SetMainImageToLanguageCourseArgs!): LanguageCourse!
    setMainLinkedMerchandise(input: SetMainLinkedMerchandiseInput!): [ProxyShopHasMerchandise!]!
    setMainProxyShopImage(input: SetMainProxyShopImageInput!): [ProxyShopImage!]!
    setMainSpotImage(input: SetMainSpotImageArgs!): [Image!]!
    setMainSpotItem(input: SetMainSpotItemArgs!): [SpotItem!]!
    setMainSpotItemImage(input: SetMainSpotItemImageArgs!): [SpotItemImage!]!
    setManagerToCoupon(input: SetManagerToCouponArgs!): Coupon!
    setManagerToLanguageCourseTranslation(input: SetManagerToLanguageCourseTranslationArgs!): LanguageCourseTranslation!
    setManagerToPartnership(input: SetManagerToPartnershipArgs!): Partnership!
    setManagerToTip(input: SetManagerToTipArgs!): Tip!
    setOpeningHours(input: SetOpeningHoursArgs!): Spot!
    setPartnerToPartnership(input: SetPartnerToPartnershipArgs!): Partnership!
    setPartnershipToCoupon(input: SetPartnershipToCouponArgs!): Coupon!
    setPartnershipToLanguageCourse(input: SetPartnershipToLanguageCourseArgs!): LanguageCourse!
    setPrecautionToReservation(input: SetPrecautionToReservationArgs!): Reservation!
    setProxyShopRocketStatus(input: SetProxyShopRocketStatusInput!): ProxyShop!
    setPsdToCoupon(input: SetPsdToCouponArgs!): Coupon!
    setRequiredDocumentToLanguageCourseTranslation(input: SetRequiredDocumentToLanguageCourseTranslationArgs!): LanguageCourseTranslation!
    setRequiredInfoToLanguageCourseTranslation(input: SetRequiredInfoToLanguageCourseTranslationArgs!): LanguageCourseTranslation!
    setReservableTimes(input: SetReservableTimesArgs!): ReservationPolicy!
    setTipImage(input: SetTipImageArgs!): Tip!
    setVoucherTemplateManager(input: SetVoucherTemplateManagerArgs!): VoucherTemplate!
    setWarehouseActiveStatus(input: SetWarehouseActiveStatusInput!): Warehouse!
    signIn(input: SignInArgs!): SignInResult!
    signInWithSocial(input: SocialInfoArgs!): SignInResult!
    signUp(input: SignUpArgs!): SignInResult!
    skipPaymentForOrder(id: ID!): Order!
    "포인트 등의 이유로 결제해야 할 금액이 0원인 경우 결제 된 것으로 처리"
    skipPaymentForReservation(code: Int!): Reservation!
    splitOrderShipping(input: SplitOrderShippingInput!): Order!
    startEventTest(date: String!): [ProxyShopEvent!]!
    toggleAdvertisementTransPublishStatus(input: ToggleAdvertisementTransStatusArgs!): AdvertisementTrans!
    toggleAdvertisementTransStatus(input: ToggleAdvertisementTransStatusArgs!): AdvertisementTrans! @deprecated(reason: "toggleAdvertisementTransPublishStatus으로 변경")
    toggleBannerPublishStatus(code: Float!): Banner!
    toggleBlogTransStatus(input: ToggleBlogTransStatusArgs!): BlogTrans!
    toggleContractStatus(input: ToggleContactStatusArgs!): Contract!
    toggleCouponActiveStatus(code: Int!): Coupon!
    toggleExchangeStatus(input: ToggleExchangeStatusArgs!): Exchange! @deprecated(reason: "toggleExchangePublishStatus로 변경")
    toggleLikeBlog(blogCode: Int!): Boolean!
    toggleLikeProxyShop(id: ID!): Boolean!
    toggleLikeSpot(spotCode: Int!): Boolean!
    toggleMerchandiseActiveStatus(id: ID!): Merchandise!
    togglePartnershipStatus(input: TogglePartnershipStatusArgs!): Partnership! @deprecated(reason: "togglePartnershipActiveStatus로 변경")
    toggleProxyShopDisplayDiscountStatus(id: ID!): ProxyShop!
    toggleProxyShopHasMerchandiseActiveStatus(id: ID!): ProxyShopHasMerchandise!
    toggleProxyShopPublishStatus(id: ID!): ProxyShop!
    toggleProxyShopRecommendStatus(id: ID!): ProxyShop!
    toggleProxyTagRecommendStatus(id: ID!): ProxyTag!
    toggleRequiredInfoStatus(input: ToggleRequiredInfoStatusArgs!): RequiredInfo! @deprecated(reason: "toggleRequiredInfoFixStatus로 변경")
    toggleReservationPolicyStatus(input: ToggleReservationPolicyStatusArgs!): ReservationPolicy!
    toggleShippingPolicyActiveStatus(id: ID!): ShippingPolicy!
    toggleSpotItemStatus(input: ToggleSpotItemStatusArgs!): SpotItem!
    toggleSpotStatus(input: ToggleSpotStatusArgs!): Spot!
    toggleSpotTransStatus(input: ToggleSpotTransStatusArgs!): SpotTrans!
    toggleTipActiveStatus(code: Int!): Tip!
    toggleTripHashtagRecommendStatus(code: Int!): TripHashtag!
    unlinkBannerAndBlog(input: UnlinkBannerAndBlogArgs!): Boolean!
    unlinkBannerAndProxyShop(input: UnlinkBannerAndProxyShopArgs!): Boolean!
    unlinkBannerAndSpot(input: UnlinkBannerAndSpotArgs!): Boolean!
    unlinkCategoryFromBlog(input: UnlinkCategoryFromBlogArgs!): Boolean!
    unlinkCategoryFromSpot(input: UnlinkCategoryFromSpotArgs!): Boolean!
    unlinkChildCategoryFromParent(input: UnlinkChildCategoryFromParentArgs!): Category!
    unlinkMerchandiseAndPartnerShip(input: UnlinkMerchandiseAndPartnerShipInput!): Boolean!
    unlinkProxyShopAndBlog(input: UnlinkProxyShopAndBlogInput!): Boolean!
    unlinkSpotFromCoupon(input: RemoveSpotFromCouponArgs!): Boolean!
    unsetBrandImage(id: ID!): ProxyTag!
    unsetManagerFromPartnership(input: UnsetManagerFromPartnershipArgs!): Partnership!
    unsetPartnerFromPartnership(input: UnsetPartnerFromPartnershipArgs!): Partnership!
    updateAddressOption(input: AddressOptionUpdateInput!): AddressOption!
    updateAdvertisement(input: UpdateAdvertisementArgs!): Advertisement!
    updateAdvertisementTrans(input: UpdateAdvertisementTransArgs!): AdvertisementTrans!
    updateBanner(input: UpdateBannerArgs!): Banner!
    updateBlogForUser(input: UpdateUserBlogArgs!): Blog!
    updateBlogReview(input: BlogReviewUpdateArgs!): BlogReview!
    updateBlogTransRenewalDate(code: Int!): BlogTrans!
    updateCategory(input: UpdateCategoryArgs!): Category!
    updateCategoryPriority(input: UpdateCategoryPriorityArgs!): [Category!]!
    updateContract(input: UpdateContractArgs!): Contract!
    updateCurrencyExchangePrices(input: UpdateCurrencyExchangePricesArgs!): Exchange!
    updateDiscountIndividualProxyShopEvent(input: UpdateDiscountIndividualProxyShopEventArgs!): ProxyShopEvent!
    updateDiscountIndividualSpotEvent(input: UpdateDiscountIndividualSpotEventArgs!): IndividualSpotEvent!
    updateDiscountProxyShopEvent(input: UpdateProxyShopEventArgs!): DiscountProxyShopEvent!
    updateDiscountSpotEvent(input: UpdateDiscountSpotEventArgs!): SpotEvent!
    updateDivision(input: DivisionUpdateInput!): Division!
    updateDivisionSet(input: DivisionSetUpdateInput!): DivisionSet!
    updateExchangeWithTrans(input: UpdateExchangeWithTransArgs!): Exchange!
    updateExpectedArrivalToOrderShipping(input: UpdateExpectedArrivalToOrderShippingInput!): OrderShipping!
    updateFaq(input: UpdateFaqArgs!): Faq!
    updateFaqPriority(input: UpdateFaqPriorityArgs!): [Faq!]!
    updateFreeShippingPolicy(input: FreeShippingPolicyUpdateInput!): FreeShippingPolicy!
    updateFreeShippingProxyShopEvent(input: UpdateProxyShopEventArgs!): FreeShippingProxyShopEvent!
    updateGetFreeProxyShopEvent(input: UpdateGetFreeProxyShopEventArgs!): GetFreeProxyShopEvent!
    updateGetFreeSpotEvent(input: UpdateGetFreeSpotEventArgs!): SpotEvent!
    updateGiftIndividualProxyShopEvent(input: UpdateGiftIndividualProxyShopEventArgs!): ProxyShopEvent!
    updateGiftProxyShopEvent(input: UpdateGiftProxyShopEventArgs!): GiftProxyShopEvent!
    updateImageToProxyShop(input: ProxyShopImageUpdateInput!): ProxyShopImage!
    updateIncomingMerchandise(input: IncomingMerchandiseUpdateInput!): IncomingMerchandise!
    updateIndividualShippingPolicy(input: IndividualShippingPolicyUpdateInput!): IndividualShippingPolicy!
    updateLanguageCourse(input: UpdateLanguageCourseArgs!): LanguageCourse!
    updateLanguageCourseDormitoryTranslation(input: UpdateLanguageCourseDormitoryTranslationArgs!): LanguageCourseDormitoryTranslation! @deprecated(reason: "upsertLanguageCourseDormitoryTranslation 으로 이동")
    updateLanguageCourseHasRequiredDocument(input: UpdateLanguageCourseHasRequiredDocumentArgs!): LanguageCourseTranslation!
    updateLanguageCoursePriceInfo(input: UpdateLanguageCoursePriceInfoArgs!): LanguageCourseTranslation!
    updateLanguageCourseRequiredDocument(input: UpdateLanguageCourseRequiredDocumentArgs!): LanguageCourseRequiredDocument!
    updateLanguageCourseRequiredInfo(input: UpdateLanguageCourseRequiredInfoArgs!): LanguageCourseRequiredInfo!
    updateLanguageCourseRequiredInfoGroup(input: UpdateLanguageCourseRequiredInfoGroupArgs!): LanguageCourseRequiredInfoGroup!
    updateLanguageCourseRequiredInfoGroupPriority(input: UpdateLanguageCourseRequiredInfoGroupPriorityArgs!): [LanguageCourseRequiredInfoGroup!]!
    updateLanguageCourseRequiredInfoPriority(input: UpdateLanguageCourseRequiredInfoPriorityArgs!): [LanguageCourseRequiredInfo!]!
    updateLanguageCourseTag(input: UpdateLanguageCourseTagInput!): LanguageCourseTag!
    updateLanguageCourseTranslation(input: UpdateLanguageCourseTranslationArgs!): LanguageCourseTranslation!
    updateLanguageCourseTranslationName(input: UpdateLanguageCourseTranslationNameArgs!): LanguageCourseTranslation!
    updateLanguageCourseTranslationRenewalDate(
        "LanguageCourseTranslation.id"
        id: ID!
    ): LanguageCourseTranslation!
    updateLinkedMerchandise(input: ProxyShopHasMerchandiseUpdateInput!): ProxyShopHasMerchandise!
    updateMerchandise(input: MerchandiseUpdateInput!): Merchandise!
    updateOnlineCoupon(input: UpdateOnlineCouponArgs!): Coupon!
    updateOnsiteCoupon(input: UpdateOnsiteCouponArgs!): Coupon!
    updateOrder(input: OrderUpdateInput!): Order!
    updateOrderBusinessUserInfoForInvoice(input: UpdateOrderBusinessUserInfoInput!): Order!
    updateOrderRecipientInfo(input: OrderRecipientInfoUpdateInput!): Order!
    updateOrderRecipientInfoForNonUser(input: OrderRecipientInfoUpdateForNonUserInput!): Order!
    updateOrderUserInfoForInvoice(id: ID!): Order!
    updatePartner(input: UpdatePartnerArgs!): Member!
    updatePartnership(input: UpdatePartnershipArgs!): Partnership!
    updatePercentRefundPolicy(input: UpdatePercentRefundPolicyArgs!): ReservationPolicy!
    updateProxyShop(input: ProxyShopUpdateInput!): ProxyShop!
    updateProxyShopRenewalDate(id: ID!): ProxyShop!
    updateProxyShopReview(input: ProxyShopReviewUpdateInput!): ProxyShopReview!
    updateProxyTag(input: ProxyTagUpdateInput!): ProxyTag!
    updateRequestMerchandiseQuote(input: RequestMerchandiseQuoteUpdateInput!): RequestMerchandiseQuote!
    updateRequiredInfoWithTrans(input: UpdateRequiredInfoWithTransArgs!): RequiredInfo!
    updateShippingPolicy(input: ShippingPolicyUpdateInput!): ShippingPolicy!
    updateShippingSite(input: ShippingSiteUpdateInput!): ShippingSite!
    updateSpecialReservableTime(input: UpdateSpecialReservableTimeArgs!): SpecialReservableTime!
    updateSpot(input: UpdateSpotArgs!): Spot!
    updateSpotImagePriority(input: UpdateSpotImagePriorityArgs!): [Image!]!
    updateSpotItemImagePriority(input: UpdateSpotItemImagePriorityArgs!): [SpotItemImage!]!
    updateSpotItemPriority(input: UpdateSpotItemPriorityArgs!): [SpotItem!]!
    updateSpotReview(input: SpotReviewUpdateArgs!): SpotReview!
    updateSpotTransRenewalDate(code: Int!): SpotTrans!
    updateTip(input: UpdateTipArgs!): Tip!
    updateTipPriority(input: UpdateTipPriorityArgs!): [Tip!]!
    updateUser(input: UpdateUserArgs!): Member!
    updateVoucher(input: UpdateVoucherArgs!): Voucher!
    updateVoucherTemplate(input: UpdateVoucherTemplateArgs!): VoucherTemplate!
    updateWarehouse(input: WarehouseUpdateInput!): Warehouse!
    uploadDesktopImageToBanner(input: UploadImageToBannerArgs!): Banner!
    uploadImageToRequiredInfo(input: UploadImageToRequiredInfoArgs!): RequiredInfo!
    uploadLanguageCourseRegistrationRequiredDocumentFile(input: UploadFileToLanguageCourseRegistrationRequiredDocumentArgs!): LanguageCourseRegistrationRequiredDocument!
    uploadMobileImageToBanner(input: UploadImageToBannerArgs!): Banner!
    uploadTabletImageToBanner(input: UploadImageToBannerArgs!): Banner!
    uploadTemplateFileToLanguageCourseHasRequiredDocument(input: UploadTemplateFileToLanguageCourseHasRequiredDocumentArgs!): LanguageCourseHasRequiredDocument!
    upsertBlogTrans(input: UpsertBlogTransArgs!): BlogTrans!
    upsertCurrencyExchangePriceToExchange(input: AddCurrencyExchangePriceArgs!): Exchange!
    upsertLanguageCourseDormitoryTranslation(input: UpsertLanguageCourseDormitoryTranslationInput!): LanguageCourseDormitoryTranslation!
    upsertReservationPolicy(input: UpsertReservationPolicyArgs!): ReservationPolicy!
    upsertSpotTrans(input: UpsertSpotTransArgs!): SpotTrans!
}

type Name {
    korean: String!
    local: String!
}

type Notification {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isRead: Boolean!
    "Topic 타입일 경우 null이다"
    language: LanguageType
    "Topic 타입일 경우 null이다"
    memberCode: Int
    message: String!
    messageType: NotificationMessageType!
    "연관된 ID, Ex) 예약타입일시에 reservationId 등등"
    relationId: Int
    title: String!
    type: NotificationType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type NotificationPage {
    edges: [Notification!]!
    totalCount: Int!
}

type OptionPair {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    merchandiseId: ID!
    name: ProxyTag!
    nameId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    value: ProxyTag!
    valueId: ID!
}

type Order {
    cancelableAmount: Float!
    canceledLocalizedPaymentAmount: Float!
    canceledLocalizedShippingFee: Float!
    code: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currency: CurrencyType!
    currencyRate: Float!
    currencyTimestamp: String!
    description: String
    expirationDate: Date
    id: ID!
    invoiceNumber: String @deprecated(reason: "OrderShipping으로 이동")
    isPaymentReady: Boolean!
    language: LanguageType!
    "실제 PG사에 요청하는 금액 (실제 결제할 금액)"
    localizedActualPaymentAmount: Float!
    "주문의 총 금액"
    localizedPaymentAmount: Float!
    localizedShippingFee: Float!
    orderShippings: [OrderShipping!]!
    orderedMerchandises(
        "merchandise type"
        type: MerchandiseType
    ): [OrderedMerchandise!]!
    ordererEmail: String!
    ordererName: String!
    ordererPhoneNumber: String!
    ordererSNS: String!
    paidDate: Date
    paidId: String
    paymentAmount: Int!
    paymentType: PaymentType
    paymentUrl: String
    platform: String!
    recipientEmail: String!
    recipientEnName: String!
    recipientLocalName: String!
    recipientPhoneNumber: String!
    "반환된 포인트"
    restoredPoint: Float!
    shippingAddress: String!
    shippingCompany: String @deprecated(reason: "OrderShipping으로 이동")
    "배송 비고 입력"
    shippingDescription: String @deprecated(reason: "OrderShipping으로 이동")
    shippingFee: Int!
    "ex) 편의점 코드"
    shippingOptionalInfo: String
    shippingPolicy: ShippingPolicy!
    shippingPolicyId: ID!
    shippingRequest: String
    "배송 정보를 확인할 수 있는 url"
    shippingUrl: String @deprecated(reason: "OrderShipping으로 이동")
    shippingZipcode: String!
    status: OrderStatusType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    "사용한 포인트"
    usedPoint: Float!
    user: Member
    userBusinessAddress: String
    userBusinessName: String
    userBusinessNumber: String
    "비회원 구매의 경우 userId가 없음"
    userId: ID
    userType: OrderUserType
}

type OrderPage {
    edges: [Order!]!
    totalCount: Int!
}

type OrderShipping {
    code: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    expectedArrival: Date
    id: ID!
    invoiceNumber: String
    order: Order!
    orderId: ID!
    orderedMerchandises: [OrderedMerchandise!]!
    shippingCompany: String
    "배송 시작일"
    shippingDate: Date
    "배송 비고 입력"
    shippingDescription: String
    "배송 정보를 확인할 수 있는 url"
    shippingUrl: String
    status: OrderShippingStatusType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    warehouse: Warehouse!
    warehouseId: ID!
}

type OrderShippingPage {
    edges: [OrderShipping!]!
    totalCount: Int!
}

type OrderedMerchandise {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    eventId: ID
    id: ID!
    isFreeShipping: Boolean!
    isRocket: Boolean!
    "매대의 한글 이름"
    koProxyShopTitle: String
    "매대에서 판매되는 상품 이름"
    localName: String
    "매대의 이름"
    localProxyShopTitle: String
    localizedSaleAmount: Float!
    localizedSalePrice: Float!
    manager: Member
    managerId: ID
    merchandise: Merchandise!
    merchandiseId: ID!
    order: Order!
    orderId: ID!
    orderShippingId: ID!
    outgoingMerchandise: OutgoingMerchandise
    outgoingMerchandiseId: ID
    proxyShop: ProxyShop
    proxyShopHasMerchandise: ProxyShopHasMerchandise
    proxyShopHasMerchandiseId: ID
    proxyShopId: ID
    quantity: Int!
    "실제 가격 계산에 적용된 수량"
    quantityForCalculate: Float!
    saleAmount: Int!
    status: OrderedMerchandiseStatusType!
    type: OrderedMerchandiseType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type OutgoingMerchandise {
    canceledAt: Date
    code: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    id: ID!
    manager: Member
    managerId: ID
    merchandise: Merchandise!
    merchandiseId: ID!
    merchandiseInAndOutLinks(type: MerchandiseInAndOutLinkType): [MerchandiseInAndOutLink!]
    orderedMerchandise: OrderedMerchandise
    quantity: Int!
    saleAmount: Int!
    status: OutgoingMerchandiseStatusType!
    type: OutgoingMerchandiseType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    warehouse: Warehouse!
    warehouseId: ID!
}

type OutgoingMerchandisePage {
    edges: [OutgoingMerchandise!]!
    totalCount: Int!
}

type Partnership {
    accountHolder: String
    "업체 주소"
    address: String
    bank: String
    bankAccount: String
    "사업자 등록증상 업종"
    businessItem: String
    businessRegistrationNumber: String
    "업태"
    businessType: PartnershipBusinessType
    code: Int!
    companyName: String
    contracts: [Contract!]
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    "업체 이메일"
    email: String
    id: ID!
    isActive: Boolean!
    mainCategory: PartnershipMainCategoryType
    manager: Member
    managerCode: Float
    merchandises: [Merchandise!]
    partner: Member
    partnerCode: Float
    "업체 담당자들 이름"
    partnerName: String
    partnershipCode: String
    "업체 연락처"
    phone: String
    representativeName: String
    "업체 정산 담당자 이메일"
    settlementPartnerEmail: String
    "업체 정산 담당자 이름"
    settlementPartnerName: String
    "업체 정산 담당자 연락처"
    settlementPartnerPhone: String
    specialNote: String
    spots: [Spot!]
    subCategory: PartnershipSubCategoryType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    voucherTemplates: [VoucherTemplate!]
}

type PartnershipHasMerchandise {
    contract: Contract!
    contractId: ID!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    merchandiseId: ID!
    partnership: Partnership!
    partnershipId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type PartnershipPage {
    edges: [Partnership!]!
    totalCount: Int!
}

type PaymentHistory {
    amount: Float!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    paymentTransactionId: Float!
    status: PaymentHistoryStatus!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type PaymentInfo {
    amount: Float!
    date: Date!
    id: String!
}

type PaymentInvoice {
    amount: Float!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    invoiceNumber: String!
    issuedDate: Date!
    paymentTransactionId: Float!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type PaymentPriceInfo {
    "한화"
    krw: Int!
    "현지통화"
    local: Float!
}

type PaymentTransaction {
    canceledAmount: Float
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currency: CurrencyType!
    domainTransactionId: String!
    domainType: PaymentDomainType!
    expirationDate: Date
    id: ID!
    paidAmount: Float!
    paidDate: Date
    paidPgId: String!
    paymentHistories: [PaymentHistory!]!
    paymentInvoice: PaymentInvoice
    paymentType: PaymentType!
    paymentUrl: String
    status: PaymentStatus!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type PaymentTransactionPage {
    edges: [PaymentTransaction!]!
    totalCount: Int!
}

type PercentRefundPolicy {
    baseDate: Int!
    percent: Int!
}

type Period {
    end: Date!
    start: Date!
}

type PeriodObject {
    end: Date!
    start: Date!
}

type Point {
    CNY: Float!
    HKD: Float!
    JPY: Float!
    THB: Float!
    TWD: Float!
    USD: Float!
    VND: Float!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    histories(input: PointHistoryPageArgs!): PointHistoryPage!
    id: ID!
    memberCode: Int
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type PointHistory {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currency: CurrencyType!
    id: ID!
    pointCode: Int!
    type: PointHistoryType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    value: Float!
}

type PointHistoryPage {
    edges: [PointHistory!]!
    totalCount: Int!
}

type PreSignedUrl {
    headers: [Header!]
    url: String!
}

type ProxyShop {
    "요청 상품일 경우 brand가 null 이다"
    brand: ProxyTag
    "요청 상품일 경우 brandId가 null 이다"
    brandId: ID
    categories: [ProxyTag!]
    content: String
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currentEvent: ProxyShopEvent
    currentEventId: Int
    "이벤트 할인율등 이벤트 관련 text 표현 필드"
    currentEventMainString: String
    currentEventPrice: Int
    currentEventStart: Date
    currentEventType: ProxyShopEventType
    deleteMember: Member
    deleteMemberId: ID
    deletedAt: Date
    excludedShippingPolicies: [ShippingPolicy!]
    hashtags: [Hashtag!]
    id: ID!
    identicalProxyShops: [ProxyShop!]
    images(isMain: Boolean): [ProxyShopImage!]
    isDeleted: Boolean!
    isDisplayDiscount: Boolean! @deprecated(reason: "더 이상 사용하지 않는 필드")
    isLiked: Boolean!
    isPublish: Boolean!
    isRecommend: Boolean!
    isRocket: Boolean!
    koTitle: String!
    language: LanguageType!
    likeCount: Int!
    linkedMerchandises: [ProxyShopHasMerchandise!] @deprecated(reason: "연결 상품을 user와 admin이 볼 수 있는 내역을 다르게 함 -> ForUser, ForAdmin")
    "Admin용 매대 연결 상품"
    linkedMerchandisesForAdmin: [ProxyShopHasMerchandise!]
    "User용 매대 연결 상품"
    linkedMerchandisesForUser: [ProxyShopHasMerchandise!]
    localTitle: String!
    localizedOriginalPrice(currency: CurrencyType!): Float
    localizedSalePrice(currency: CurrencyType!): Float!
    mainImageUrl: String
    "메인 아이템에 따라 설정되는 원가(할인전 가격)"
    originalPrice: Int
    precaution: String
    renewalDate: Date!
    "요청으로 만들어진 매대만 존재"
    requestMerchandiseQuote: RequestMerchandiseQuote
    reviewCount: Int!
    reviewPage(input: ProxyShopReviewPageInput!): ProxyShopReviewPage
    reviews: [ProxyShopReview!]
    "메인 아이템에 따라 설정되는 실제 판매가(할인가)"
    salePrice: Int!
    starRatingAverage: Float!
    totalReviewRate: Int!
    type: ProxyShopType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    videoUrl: String
    viewCount: Int!
    writeMember: Member
    writeMemberId: ID
}

type ProxyShopEventPage {
    edges: [ProxyShopEvent!]!
    totalCount: Int!
}

type ProxyShopHasCategory {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    proxyShopId: ID!
    proxyTagId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ProxyShopHasMerchandise {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    individualProxyShopEvent: IndividualProxyShopEvent
    isActive: Boolean!
    isMain: Boolean!
    limitCount: Int
    localName: String!
    localizedOriginalPrice(currency: CurrencyType!): Float
    localizedSalePrice(currency: CurrencyType!): Float!
    merchandise: Merchandise!
    merchandiseId: ID!
    "원가(할인전 가격)"
    originalPrice: Int
    priority: Int!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    "판매가(할인가)"
    salePrice: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ProxyShopImage {
    altText: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isMain: Boolean!
    priority: Int!
    proxyShop: ProxyShop!
    proxyShopId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    url: String!
}

type ProxyShopPage {
    edges: [ProxyShop!]!
    totalCount: Int!
}

type ProxyShopReview {
    content: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    images: [ProxyShopReviewImage!]
    merchandise: Merchandise!
    merchandiseId: ID!
    orderShipping: OrderShipping
    orderShippingId: ID!
    proxyShop: ProxyShop!
    proxyShopHasMerchandise: ProxyShopHasMerchandise!
    proxyShopId: ID!
    starRating: Float!
    translations(language: LanguageType): [ProxyShopReviewTrans!]!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    user: Member!
    userId: ID!
}

type ProxyShopReviewImage {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    imageUrl: String!
    priority: Int!
    proxyShopReviewId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ProxyShopReviewPage {
    edges: [ProxyShopReview!]!
    starRatingAverage: Float
    totalCount: Int!
}

type ProxyShopReviewTrans {
    content: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    language: LanguageType!
    proxyShopReview: ProxyShopReview!
    proxyShopReviewId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ProxyTag {
    children: [ProxyTag!]
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    imageUrl: String
    "이미지가 등록되어있는 브랜드는 isManaged가 true이다"
    isManaged: Boolean!
    isRecommend: Boolean!
    parents: [ProxyTag!]
    priority: Int!
    translations(language: LanguageType): [ProxyTagTranslation!]!
    type: ProxyTagType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ProxyTagPage {
    edges: [ProxyTag!]!
    totalCount: Int!
}

type ProxyTagTranslation {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Query {
    addressOption(id: ID!): AddressOption!
    addressOptions(input: AddressOptionPageInput!): AddressOptionPage!
    advertisement(code: Int!): Advertisement!
    advertisements(input: AdvertisementPageArgs!): AdvertisementPage!
    banner(code: Int!): Banner!
    banners(input: BannerPageArgs!): BannerPage!
    blog(code: Int!): Blog!
    "대댓글은 children을 통해서만 접근이 가능함"
    blogReviews(input: BlogReviewPageArgs!): BlogReviewPage! @deprecated(reason: "blog.reviews로 접근 가능")
    blogs(input: BlogPageArgs!): BlogPage!
    cartItem(id: ID!): CartItem!
    "admin 전용으로 변경될 예정입니다"
    cartItems(input: CartItemPageInput!): CartItemPage!
    categories(input: CategoryPageArgs!): CategoryPage!
    category(code: Int!): Category!
    checkCanPurchaseMerchandise(input: [CheckCanPurchaseMerchandiseInput!]!): Boolean!
    contractExcelDownloadUrl: String!
    contractFileDownloadUrl(contractFileCode: Int!): String!
    coupon(code: Int!): Coupon!
    couponExcelDownloadUrl(input: CouponPageArgs!): String!
    coupons(input: CouponPageArgs!): CouponPage!
    currency: Currency!
    division(id: ID!): Division!
    divisionSet(id: ID!): DivisionSet!
    divisionSets(input: DivisionSetPageInput!): DivisionSetPage!
    divisions(input: DivisionPageInput!): DivisionPage!
    drafts(language: LanguageType): [Blog!]!
    exchange(code: Int!): Exchange!
    exchanges(input: ExchangePageArgs!): ExchangePage!
    faq(id: ID!): Faq!
    faqs(input: FaqPageArgs!): FaqPage!
    freeShippingPolicy: FreeShippingPolicy!
    healthCheck: HealthCheck!
    incomingMerchandise(id: ID!): IncomingMerchandise!
    incomingMerchandiseExcelDownloadUrl(input: IncomingMerchandisePageInput!): String!
    incomingMerchandises(input: IncomingMerchandisePageInput!): IncomingMerchandisePage!
    individualOrderShippingTemplateExcelDownloadUrl(id: ID!): String!
    languageCourse(id: ID!): LanguageCourse!
    languageCourseRegistration(id: ID!): LanguageCourseRegistration!
    languageCourseRegistrations(input: LanguageCourseRegistrationPageInput!): LanguageCourseRegistrationPage!
    languageCourseRequiredDocument(id: ID!): LanguageCourseRequiredDocument!
    languageCourseRequiredDocuments(input: LanguageCourseRequiredDocumentPageArgs!): LanguageCourseRequiredDocumentPage!
    languageCourseRequiredInfo(id: ID!): LanguageCourseRequiredInfo!
    languageCourseRequiredInfoGroup(id: ID!): LanguageCourseRequiredInfoGroup!
    languageCourseRequiredInfoGroups(input: LanguageCourseRequiredInfoGroupListFilterArgs!): [LanguageCourseRequiredInfoGroup!]!
    languageCourseTag(
        "LanguageCourseTag.id"
        id: ID!
    ): LanguageCourseTag!
    languageCourseTags(input: LanguageCourseTagPageInput!): LanguageCourseTagPage!
    languageCourses(input: LanguageCoursePageArgs!): LanguageCoursePage!
    linePayRequestUrlForProxy(input: LinePayRequestUrlInput!): LinePayRequestResult!
    linePayRequestUrlForReservation(args: LinePayRequestUrlInput!): LinePayRequestResult!
    linePayRequestUrlForTrip(args: LinePayRequestUrlArgs!): LinePayRequestResult! @deprecated(reason: "linePayRequestUrlForReservation을 사용해주세요")
    linkedAddressOptions(input: LinkedAddressOptionInput!): [AddressOption!]!
    member(code: Int!): Member!
    memberExcelDownloadUrl(input: MemberPageArgs!): String!
    memberLikedProxyShops(input: MemberLikedProxyShopPageInput!): MemberLikedProxyShopPage!
    members(input: MemberPageArgs!): MemberPage!
    merchandise(id: ID!): Merchandise!
    merchandiseExcelDownloadUrl(input: MerchandisePageInput!): String!
    merchandiseInAndOutLink(id: ID!): MerchandiseInAndOutLink!
    merchandiseInAndOutLinks(input: MerchandiseInAndOutLinkPageInput!): MerchandiseInAndOutLinkPage!
    merchandiseStockExcelDownloadUrl(input: MerchandisePageInput!): String!
    merchandises(input: MerchandisePageInput!): MerchandisePage!
    mostViewedBlogs(input: BlogMostViewedArgs!): BlogPage!
    mostViewedProxyShops(input: MostViewedProxyShopsArgs!): ProxyShopPage!
    mostViewedSpots(input: SpotMostViewedArgs!): SpotPage!
    "통합 검색"
    multiSearch(input: MultiSearchArgs!): MultiSearchResult!
    "모든 검색 history, searchHistories query가 존재해서 이름을 변경 못함"
    multiSearchHistories: [String!]!
    "통합 검색"
    multiSearchWithFederation(input: MultiSearchArgs!): MultiSearchResultFederation!
    myInfo: Member!
    notifications(input: NotificationPageArgs!): NotificationPage!
    optionPair(id: ID!): OptionPair!
    order(id: ID!): Order!
    orderExcelDownloadUrl(input: OrderExcelInput!): String!
    orderForNonUser(input: OrderForNonUserInput!): Order!
    orderShipping(id: ID!): OrderShipping!
    orderShippingExcelDownloadUrl(input: OrderShippingPageArgs!): String!
    orderShippingForNonUser(input: OrderShippingForNonUserInput!): OrderShipping!
    orderShippingTemplateExcelDownloadUrl(input: OrderShippingPageArgs!): String!
    orderShippings(input: OrderShippingPageArgs!): OrderShippingPage!
    orders(input: OrderPageInput!): OrderPage!
    outgoingMerchandise(id: ID!): OutgoingMerchandise!
    outgoingMerchandiseExcelDownloadUrl(input: OutgoingMerchandisePageInput!): String!
    outgoingMerchandiseMovementExcelDownloadUrl(input: OutgoingMerchandisePageInput!): String!
    outgoingMerchandises(input: OutgoingMerchandisePageInput!): OutgoingMerchandisePage!
    partnership(code: Int!): Partnership!
    partnerships(input: PartnershipPageArgs!): PartnershipPage!
    paymentTransaction(domainTransactionId: String!): PaymentTransaction!
    paymentTransactions(input: PaymentTransactionPageInput!): PaymentTransactionPage!
    "어드민용 쿼리입니다. 유저는 myInfo.point 를 사용해주세요"
    point(memberCode: Int!): Point!
    possibleDates(input: PossibleDatesArgs!): [String!]!
    possibleTimes(input: PossibleTimesArgs!): [String!]!
    preSignedUrlForBrand(input: PreSignedUrlBrandInput!): PreSignedUrl!
    preSignedUrlForLanguageCourseHasRequiredDocumentTemplateFile(input: PreSignedUrlForLanguageCourseHasRequiredDocumentTemplateFileArgs!): PreSignedUrl!
    preSignedUrlForLanguageCourseMainImage(input: PreSignedUrlForLanguageCourseMainImageArgs!): PreSignedUrl!
    preSignedUrlForLanguageCourseRegistrationRequiredDocument(input: PreSignedUrlForLanguageCourseRegistrationRequiredDocumentArgs!): PreSignedUrl!
    preSignedUrlForMerchandise(input: PreSignedUrlForMerchandiseInput!): PreSignedUrl!
    preSignedUrlForProxyShop(input: PreSignedUrlProxyShopInput!): PreSignedUrl!
    preSignedUrlForProxyShopReview(input: PreSignedUrlProxyShopInput!): PreSignedUrl!
    "해당 쿼리는 캐시 컨트롤을 적용할 필요가 없어서 header를 null로 주도록 설정"
    preSignedUrlForRequestMerchandise(input: PreSignedUrlForRequestMerchandiseQuoteInput!): PreSignedUrl!
    preSignedUrlForUpload(input: PreSignedUrlArgs!): PreSignedUrl!
    proxyShop(id: ID!): ProxyShop!
    proxyShopBrands(input: BrandListArgs!): [ProxyTag!]!
    proxyShopEvent(id: ID!): ProxyShopEvent!
    proxyShopEvents(input: ProxyShopEventPageArgs!): ProxyShopEventPage!
    proxyShopMiddleCategories(input: MiddleCategoryListArg!): [ProxyTag!]!
    proxyShopReview(id: ID!): ProxyShopReview!
    proxyShopReviews(input: ProxyShopReviewPageInput!): ProxyShopReviewPage!
    proxyShops(input: ProxyShopPageInput!): ProxyShopPage!
    proxyTag(id: ID!): ProxyTag!
    proxyTags(input: ProxyTagPageInput!): ProxyTagPage!
    "추천 블로그과 최근 renewal된 블로그 <limitSize>개 중 <size>개 만큼 랜덤으로 받아옵니다"
    recommendedBlogs(input: RecommendedBlogsArgs!): [Blog!]!
    recommendedProxyShops(input: RecommendedProxyShopInput!): ProxyShopPage! @deprecated(reason: "해당 부분은 연관성 없는 데이터가 나오기때문에 recommendedRelatedProxyShops로 교체될 예정")
    "해당 상품을 구매한 유저들 데이터에서 통계를 얻은 상품들과 관련된 매대들"
    recommendedRelatedProxyShops(input: RecommendedRelatedProxyShopInput!): [ProxyShop!]!
    "추천 스팟과 최근 renewal된 스팟 <limitSize>개 중 <size>개 만큼 랜덤으로 받아옵니다"
    recommendedSpots(input: RecommendedSpotsArgs!): [Spot!]!
    remarks: [Remark!]!
    requestMerchandiseQuote(id: ID!): RequestMerchandiseQuote!
    requestMerchandiseQuoteExcelDownloadUrl(input: RequestMerchandiseQuotePageInput!): String!
    requestMerchandiseQuotes(input: RequestMerchandiseQuotePageInput!): RequestMerchandiseQuotePage!
    requiredInfo(code: Int!): RequiredInfo!
    requiredInfos(input: RequiredInfoPageArgs!): RequiredInfoPage!
    reservation(code: Int!): Reservation!
    reservationExcelDownloadUrl(input: ReservationPageArgs!): String!
    reservationForNonUser(input: ReservationForNonUserArgs!): Reservation!
    reservations(input: ReservationPageArgs!): ReservationPage!
    sameNameProxyShops(input: SameNameProxyShopInput!): [ProxyShop!]!
    searchBlogNew(input: SearchBlogArgs!): SearchedBlogPage!
    searchBlogWithFederation(input: SearchBlogArgs!): BlogPage!
    searchProxyShop(input: SearchProxyShopArgs!): SearchedProxyShopPage!
    searchProxyShopWithFederation(input: SearchProxyShopArgs!): ProxyShopPage!
    searchSpotNew(input: SearchSpotArgs!): SearchedSpotPage!
    searchSpotWithFederation(input: SearchSpotArgs!): SpotPage!
    searchSuggestions(input: SearchSuggestArgs!): [String!]!
    shippingAddress(id: ID!): ShippingAddress!
    shippingAddresses(
        "전체 배송 정책에서 해당 매대들의 예외 배송정책을 찾아서 제외시켜줌"
        proxyShopIds: [ID!]
    ): [ShippingAddress!]!
    shippingPolicies(input: ShippingPolicyPageInput!): ShippingPolicyPage!
    shippingPolicy(id: ID!): ShippingPolicy!
    shippingSite(id: ID!): ShippingSite!
    shippingSites(input: ShippingSitePageInput!): ShippingSitePage!
    signedUpSocialTypesByEmail(email: String!): [SocialType!]!
    spot(code: Int!): Spot!
    spotEvent(code: Int!): SpotEvent!
    spotEvents(input: SpotEventPageArgs!): SpotEventPage!
    "대댓글은 children을 통해서만 접근이 가능함"
    spotReviews(input: SpotReviewPageArgs!): SpotReviewPage! @deprecated(reason: "spot.reviews로 접근 가능")
    spots(input: SpotPageArgs!): SpotPage!
    tip(code: Int!): Tip!
    tips(input: TipPageArgs!): TipPage!
    tripHashtags(input: TripHashtagPageArgs!): TripHashtagPage!
    voucher(code: Int!): Voucher!
    voucherExcelDownloadUrl: String!
    voucherTemplate(code: Int!): VoucherTemplate!
    voucherTemplates(input: VoucherTemplatePageArgs!): VoucherTemplatePage!
    vouchers(input: VoucherPageArgs!): VoucherPage!
    warehouse(id: ID!): Warehouse!
    warehouses(input: WarehousePageInput!): WarehousePage!
    watchTogetherBlogs(input: WatchTogetherBlogsArgs!): [Blog!]!
    watchTogetherSpots(input: WatchTogetherSpotsArgs!): [Spot!]!
}

type Rates {
    CNY: Float!
    HKD: Float!
    JPY: Float!
    KRW: Float!
    THB: Float!
    TWD: Float!
    USD: Float!
    VND: Float!
}

type RefundInfo {
    amount: Float!
    date: Date!
    id: String!
}

type Remark {
    code: Int!
    translations(language: LanguageType): [RemarkTrans!]!
}

type RemarkTrans {
    language: LanguageType!
    name: String!
    remarkCode: Int!
}

type RequestMerchandiseQuote {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    id: ID!
    language: LanguageType!
    manager: Member
    managerId: ID
    proxyShop: ProxyShop!
    proxyShopId: ID!
    requestUser: Member!
    requestUserId: ID!
    requestedMerchandises: [RequestedMerchandise!]!
    sentAt: Date
    status: RequestMerchandiseQuoteStatusType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    userCountry: CountryType!
    userEmail: String!
    userName: String!
    userPhone: String!
    userSNS: String!
}

type RequestMerchandiseQuotePage {
    edges: [RequestMerchandiseQuote!]!
    totalCount: Int!
}

type RequestedMerchandise {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    images: [RequestedMerchandiseImage!]!
    merchandiseName: String!
    merchandiseOption: String!
    quantity: Int!
    relatedUrl: String!
    requestMerchandiseQuoteId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type RequestedMerchandiseImage {
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    imageUrl: String!
    requestedMerchandiseId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type RequiredInfo {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    imageUrl: URL
    isDefault: Boolean!
    isFix: Boolean!
    option: [String!]
    translations(languages: [LanguageType!]): [RequiredInfoTrans!]
    type: RequiredInfoType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type RequiredInfoPage {
    edges: [RequiredInfo!]!
    totalCount: Int!
}

type RequiredInfoTrans {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    id: ID!
    language: LanguageType!
    name: String!
    requiredInfoCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Reservation {
    "실제 결제 금액 (총 금액 - 사용한 포인트 - 환불금액)"
    actualPaymentAmount: Float
    code: Int!
    country: String @deprecated(reason: "countryType으로 이동")
    countryType: CountryType
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currencyTimestamp: String
    deliveryFee: Float
    discountAmount: Float
    email: String!
    "가상 계좌 결제 만료일"
    expirationDate: Date
    id: ID!
    infos: [ReservationInfo!]
    isPaymentReady: Boolean!
    isReviewed: Boolean!
    "실제 결제 금액에 해당하는 한화 (실제 결제 금액은 actualPaymentAmount)"
    koreanActualPaymentAmount: Int
    language: LanguageType!
    localizedDeliveryFee: Float
    localizedDiscountAmount: Float
    localizedOriginalAmount: Float
    localizedRefundAmount: Float
    "환불 가능 금액"
    localizedRefundableAmount: Float!
    member: Member
    memberCode: Int
    name: String!
    originalAmount: Float
    password: String
    paymentCurrency: CurrencyType!
    paymentInfo: PaymentInfo
    "YYYY-MM-DD HH:mm:ss"
    paymentLimitDate: Date
    paymentType: PaymentType
    paymentUrl: String
    platform: String
    precaution: String
    refundAmount: Float
    refundInfo: RefundInfo
    refundPaymentAmount: Float! @deprecated(reason: "refundAmount로 이동")
    reservationCode: String!
    "YYYY-MM-DD HH:mm:ss"
    reservationDate: Date
    reservedItems: [ReservedItem!]!
    restoredPoint: Float!
    social: String!
    spot: Spot!
    spotCode: Int!
    status: ReservationStatusType!
    telephone: String
    totalOrderQuantity: Int
    totalPaymentAmount: Float @deprecated(reason: "discountAmount로 이동")
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    usableVoucherTemplates: [VoucherTemplate!]!
    used: Boolean @deprecated(reason: "삭제 될 예정")
    usedPoint: Float!
    voucherCode: String
    vouchers: [Voucher!]
}

type ReservationInfo {
    code: Float!
    koreanName: String
    localName: String
    type: RequiredInfoType
    value: String!
}

type ReservationPage {
    edges: [Reservation!]!
    totalCount: Int!
}

type ReservationPolicy {
    "몇 일 후까지 예약 가능한지"
    availableDaysAfterNow: Float
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    deliveryFee: Int
    duration: Int!
    id: ID!
    isConfirmRequired: Boolean!
    isDateRequired: Boolean!
    isPaymentRequired: Boolean!
    isTimeRequired: Boolean!
    localizedDeliveryFee(input: LocalizedPriceArgs!): Float
    localizedMinOrderAmount(input: LocalizedPriceArgs!): Float
    maxOrderCount: Int!
    minOrderAmount: Int
    minOrderCount: Int! @deprecated(reason: "미사용")
    noticeEmail: String
    outsideUrl: String
    paymentTimeOutSecond: Int
    refundPolicies: [PercentRefundPolicy!]!
    remarkList: [Int!]!
    requiredInfos: [RequiredInfo!]
    reservableTimes: [BusinessHour!]!
    specialReservableTimes: [SpecialReservableTime!]
    spotCode: Int!
    type: ReservationType!
    "몇 일 전까지 예약 해야 하는지"
    unableDaysBeforeNow: Float
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ReservedItem {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    "할인 가격 (한화)"
    discountPrice: Float
    fee: Float
    id: ID!
    koreanName: String
    localName: String
    "할인 가격 (현지통화)"
    localizedDiscountPrice: Float
    "할인 전 가격 (현지통화)"
    localizedOriginalPrice: Float
    "한화 (할인 전 가격)"
    originalPrice: Float
    quantity: Int
    reservationCode: Int!
    salePrice: Float @deprecated(reason: "discountPrice로 이동")
    "정산가 (한화)"
    settlementPrice: Float
    showName: String
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SearchedBlog {
    createdAt: Date!
    excerpt: String!
    id: ID!
    isLiked: Boolean!
    mainCategory: String
    mainImageUrl: String
    renewalDate: Date!
    subCategory: String
    title: String
    updatedAt: Date!
    viewCount: Float!
}

type SearchedBlogPage {
    edges: [SearchedBlog!]!
    totalCount: Int!
}

type SearchedProxyShop {
    brand: String
    createdAt: Date!
    currentEventMainString: String
    currentEventType: ProxyShopEventType
    id: ID!
    isDisplayDiscount: Boolean!
    isLiked: Boolean!
    isRocket: Boolean!
    localizedDiscountPrice: Float!
    localizedOriginalPrice: Float!
    mainImageUrl: String
    name: String!
    updatedAt: Date!
    viewCount: Float!
}

type SearchedProxyShopPage {
    edges: [SearchedProxyShop!]!
    totalCount: Int!
}

type SearchedSpot {
    cityCategory: String
    createdAt: Date!
    currentEventType: SpotEventType
    id: ID!
    isLiked: Boolean!
    isReservable: Boolean!
    latitude: Float
    localizedDiscountPrice: Float!
    localizedOriginalPrice: Float!
    locationCategory: String
    longitude: Float
    mainImageUrl: String
    name: String!
    renewalDate: Date!
    subTitle: String
    updatedAt: Date!
    viewCount: Float!
}

type SearchedSpotPage {
    edges: [SearchedSpot!]!
    totalCount: Int!
}

type ShippingAddress {
    address: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    detailAddress: String
    id: ID!
    memberId: ID!
    name: String!
    postalCode: String!
    shippingPolicy: ShippingPolicy!
    shippingPolicyId: ID!
    shippingSite: ShippingSite
    shippingSiteId: ID
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ShippingPolicy {
    cnName: String!
    country: CountryType!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    defaultWarehouse: Warehouse!
    defaultWarehouseId: ID!
    enName: String!
    hkName: String!
    id: ID!
    individualPolicies: [IndividualShippingPolicy!]
    isActive: Boolean!
    jpName: String!
    koName: String!
    name(language: LanguageType!): String!
    thName: String!
    twName: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    viName: String!
    writer: Member!
    writerId: ID
}

type ShippingPolicyPage {
    edges: [ShippingPolicy!]!
    totalCount: Int!
}

type ShippingSite {
    "대만 편의점 번호로 사용"
    code: String
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    "특이사항"
    description: String
    firstAddress: AddressOption!
    firstAddressId: ID!
    "대만 편의점 전체 주소로 사용"
    fullAddress: String
    id: ID!
    "대만 편의점 이름으로 사용"
    name: String
    "대만 편의점 전화번호로 사용"
    phone: String
    secondAddress: AddressOption!
    secondAddressId: ID!
    shippingPolicy: ShippingPolicy!
    shippingPolicyId: ID!
    thirdAddress: AddressOption!
    thirdAddressId: ID!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type ShippingSitePage {
    edges: [ShippingSite!]!
    totalCount: Int!
}

type SignInResult {
    accessToken: String!
    """

    기존 사용자 로그인인지 또는 회원가입 로직인지 구분하는 값.
    true: 해당 API를 통해 계정이 생성됨.
    false: 이미 계정이 존재함.
    ✔️ true인 경우, 해당 이메일로 중복된 계정이 있는지 체크하기 위한 로직을 이어서 수행해야함
    """
    isCreated: Boolean!
}

type SocialInfo {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    email: String
    id: ID!
    memberCode: Int!
    picture: String @deprecated(reason: "Use profileUrl")
    socialId: String!
    type: SocialType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpecialReservableTime {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    period: Period!
    reservableTimes: [BusinessHour!]!
    reservationPolicyCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Spot {
    address: String!
    blogs(language: LanguageType): [Blog!]
    categories(types: [CategoryType!]): [Category!]
    code: Int!
    contracts: [Contract!]
    coupons: [Coupon!]
    couponsForAdmin: [Coupon!]!
    couponsForUser: [Coupon!]!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    currentEvent: SpotEvent
    discountPrice: Int!
    eventCode: Int
    eventType: SpotEventType
    id: ID!
    images(isMain: Boolean): [Image!]
    isLiked: Boolean
    isReservable: Boolean!
    items(input: SelectSpotItemArgs): [SpotItem!]
    latitude: Float
    likeCount: Int!
    localizedDiscountPrice(input: LocalizedPriceArgs!): Float!
    localizedOriginalPrice(input: LocalizedPriceArgs!): Float
    longitude: Float
    mainImageUrl: String
    openingHours: [BusinessHour!]
    originalPrice: Int
    partnership: Partnership
    partnershipCode: Float
    register: Member
    reservationPolicy: ReservationPolicy
    reviewRatingAverage: Float
    reviews(input: SpotReviewPageArgs!): SpotReviewPage!
    salePrice: Int!
    score: Float!
    shareCount: Int!
    telephone: String!
    translations(language: LanguageType): [SpotTrans!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    viewCount: Int!
    voucherTemplates: [VoucherTemplate!]
}

type SpotEvent {
    "추가 증정의 기준 수량"
    baseValue: Int
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    "YYYY-MM-DD HH:mm:ss"
    end: Date!
    id: ID!
    "개별 이벤트 상세"
    individuals: [IndividualSpotEvent!]!
    "이벤트 생성자"
    manager: Member!
    spot: Spot!
    "YYYY-MM-DD HH:mm:ss"
    start: Date!
    status: SpotEventStatusType!
    "추가 증정의 추가 수량"
    subValue: Int
    "이벤트 종류"
    type: SpotEventType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpotEventPage {
    edges: [SpotEvent!]!
    totalCount: Int!
}

type SpotHasCoupon {
    code: Int!
    coupon: Coupon!
    couponCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    spot: Spot!
    spotCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpotHasVoucherTemplate {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    spot: Spot!
    spotCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    voucherTemplate: VoucherTemplate!
    voucherTemplateCode: Int!
}

type SpotItem {
    children: [SpotItem!]
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    discountPrice: Int
    fee: Float
    id: ID!
    images: [SpotItemImage!]
    isMain: Boolean!
    isReservable: Boolean!
    localizedDiscountPrice(input: LocalizedPriceArgs!): Float
    localizedOriginalPrice(input: LocalizedPriceArgs!): Float
    originalPrice: Float
    parentCode: Int!
    priority: Int
    settlementPrice: Float
    spot: Spot!
    spotCode: Int!
    translations(language: LanguageType): [SpotItemTrans!]!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpotItemImage {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isMain: Boolean!
    originPath: String!
    priority: Int!
    spotItemCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    url: String!
}

type SpotItemTrans {
    description: String
    language: LanguageType!
    name: String
    spotItemCode: Int!
}

type SpotPage {
    edges: [Spot!]!
    totalCount: Int!
}

type SpotReview {
    children(order: SpotReviewOrder): [SpotReview!]
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    images: [SpotReviewImage!]
    parentCode: Float
    reservationCode: Float
    spot: Spot!
    spotCode: Float!
    starRating: Float!
    translations(language: LanguageType!): [SpotReviewTrans!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    writer: Member!
}

type SpotReviewImage {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    imageUrl: URL!
    spotReviewCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpotReviewPage {
    edges: [SpotReview!]!
    totalCount: Int!
}

type SpotReviewTrans {
    code: Int!
    content: String!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isDefault: Boolean!
    language: LanguageType!
    spotReviewCode: Float!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpotTrans {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    hashtags: [TripHashtag!]
    id: ID!
    isDefault: Boolean!
    isPublish: Boolean!
    isRecommend: Boolean!
    language: LanguageType!
    moreInformation: String
    name: String!
    precautions: String
    renewalDate: Date!
    searchTitle: String
    spotCode: Int!
    subTitle: String
    titlePricePolicy: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type SpotTransHasTripHashtag {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    hashtag: TripHashtag!
    hashtagCode: Int!
    id: ID!
    spotTrans: SpotTrans!
    spotTransCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type Tag {
    children: [Tag!]
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isRecommend: Boolean!
    priority: Int!
    translations: [TagTrans!]
    type: TagType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type TagTrans {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    language: LanguageType!
    name: String
    tagCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type TimePeriod {
    "HH:mm:ss"
    end: String!
    "array index"
    index: Int
    "HH:mm:ss"
    start: String!
}

type Tip {
    blogTrans: BlogTrans!
    blogTransCode: Int!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    imageUrl: String!
    isActive: Boolean!
    language: LanguageType!
    manager: Member
    managerCode: Int
    priority: Int!
    title: String!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type TipPage {
    edges: [Tip!]!
    totalCount: Int!
}

type TripHashtag {
    blogTransHasHashtags: [BlogTransHasTripHashtag!]!
    blogTranslations: [BlogTrans!]!
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    isRecommend: Boolean!
    language: LanguageType!
    name: String!
    spotTransHasHashtags: [SpotTransHasTripHashtag!]!
    spotTranslations: [SpotTrans!]!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
}

type TripHashtagPage {
    edges: [TripHashtag!]!
    totalCount: Int!
}

type Voucher {
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    description: String
    expiredAt: Date!
    id: ID!
    isUsed: Boolean!
    pin: String
    reservation: Reservation
    reservationCode: Int
    type: VoucherType!
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    url: String
    usedAt: Date
    voucherTemplate: VoucherTemplate!
    voucherTemplateCode: Int!
}

type VoucherPage {
    edges: [Voucher!]!
    totalCount: Int!
}

type VoucherTemplate {
    "바우처 중 가장 빠른 만료일"
    closestExpirationDate: Date
    code: Int!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    "발급 가능한 바우처 수량"
    issuableVoucherQuantity(
        "예약 ID"
        reservationCode: Int
    ): Int!
    manager: Member!
    managerCode: Int!
    name: String!
    partnership: Partnership!
    partnershipCode: Int!
    spots: [Spot!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    voucherQuantity: Int!
    vouchers: [Voucher!]
}

type VoucherTemplatePage {
    edges: [VoucherTemplate!]!
    totalCount: Int!
}

type Warehouse {
    address: String!
    country: CountryType!
    "YYYY-MM-DD HH:mm:ss"
    createdAt: Date!
    id: ID!
    incomingMerchandises: [IncomingMerchandise!]
    isActive: Boolean!
    manager: Member!
    managerEmail: String!
    managerId: ID!
    managerPhoneNumber: String!
    name: String!
    outgoingMerchandises: [OutgoingMerchandise!]
    "YYYY-MM-DD HH:mm:ss"
    updatedAt: Date!
    zipcode: String!
}

type WarehousePage {
    edges: [Warehouse!]!
    totalCount: Int!
}

enum AddressOptionLevelType {
    FIRST
    SECOND
    THIRD
}

enum AddressOptionOrderType {
    createdAt
    priority
}

enum AdvertisementOrderFieldType {
    CREATED_AT
    RANDOM
}

enum AdvertisementTransStatusType {
    PUBLISH
}

enum AdvertisementType {
    BLOG
    COUPON
    COUPON_BANNER
    NEWS
    PROXY_BANNER
    PROXY_SHOPPING
    SPOT
    TRIP_BANNER
}

enum BannerExposePositionType {
    COUPON
    PROXY_SHOP
    RESERVATION
}

enum BannerOrderType {
    CREATED_AT
    RANDOM
}

enum BaseOrderType {
    CREATED_AT
}

enum BlogLikeOrderType {
    CREATED_AT
}

enum BlogOrderType {
    CREATED_AT
    LIKE_COUNT
    RENEWAL_DATE
}

enum BlogReviewOrderType {
    CREATED_AT
}

enum BlogTransStatusType {
    DEFAULT
    MAIN
    PUBLISH
    RECOMMEND
    TABLE_OF_CONTENTS
}

enum BlogType {
    NEWS
    PROXY
    TRAVEL
}

enum CartItemOrderType {
    createdAt
}

enum CategoryOrderFieldType {
    CREATED_AT
    PRIORITY
}

enum CategoryType {
    BLOG
    CITY
    DETAIL_LOCATION
    MAIN_COUPON
    MAIN_CULTURE_AND_NEWS
    MAIN_FAQ
    MAIN_PROXY_SHOPPING
    MAIN_RESERVATION
    MAIN_REVIEW
    MIDDLE_COUPON
    MIDDLE_CULTURE_AND_NEWS
    MIDDLE_FAQ
    MIDDLE_PROXY_SHOPPING
    MIDDLE_RESERVATION
    MIDDLE_REVIEW
}

enum ContractStatusType {
    AUTOMATIC_EXTENSION
    SETTLEMENT
}

enum ContractType {
    ADVERTISEMENT
    NOT_SELECTED
    ONSITE_DISCOUNT
    PROXY_SHOPPING
    RESERVATION
}

enum CountryType {
    Afghanistan
    AlandIslands
    Albania
    Algeria
    AmericanSamoa
    Andorra
    Angola
    Anguilla
    Antarctica
    AntiguaAndBarbuda
    Argentina
    Armenia
    Aruba
    Australia
    Austria
    Azerbaijan
    Bahamas
    Bahrain
    Bangladesh
    Barbados
    Belarus
    Belgium
    Belize
    Benin
    Bermuda
    Bhutan
    Bolivia
    BonaireSintEustatiusSaba
    BosniaAndHerzegovina
    Botswana
    BouvetIsland
    Brazil
    BritishIndianOceanTerritory
    BruneiDarussalam
    Bulgaria
    BurkinaFaso
    Burundi
    Cambodia
    Cameroon
    Canada
    CapeVerde
    CaymanIslands
    CentralAfricanRepublic
    Chad
    Chile
    China
    ChristmasIsland
    CocosKeelingIslands
    Colombia
    Comoros
    Congo
    CongoDemocraticRepublic
    CookIslands
    CostaRica
    CoteDIvoire
    Croatia
    Cuba
    Cyprus
    CzechRepublic
    Denmark
    Djibouti
    Dominica
    DominicanRepublic
    ETC
    Ecuador
    Egypt
    ElSalvador
    EquatorialGuinea
    Eritrea
    Estonia
    Ethiopia
    FalklandIslands
    FaroeIslands
    Fiji
    Finland
    France
    FrenchGuiana
    FrenchPolynesia
    FrenchSouthernTerritories
    Gabon
    Gambia
    Georgia
    Germany
    Ghana
    Gibraltar
    Greece
    Greenland
    Grenada
    Guadeloupe
    Guam
    Guatemala
    Guernsey
    Guinea
    GuineaBissau
    Guyana
    Haiti
    HeardIslandMcdonaldIslands
    HolySeeVaticanCityState
    Honduras
    HongKong
    Hungary
    Iceland
    India
    Indonesia
    Iran
    Iraq
    Ireland
    IsleOfMan
    Israel
    Italy
    Jamaica
    Japan
    Jersey
    Jordan
    Kazakhstan
    Kenya
    Kiribati
    Korea
    KoreaDemocraticPeoplesRepublic
    Kuwait
    Kyrgyzstan
    LaoPeoplesDemocraticRepublic
    Latvia
    Lebanon
    Lesotho
    Liberia
    LibyanArabJamahiriya
    Liechtenstein
    Lithuania
    Luxembourg
    Macao
    Macedonia
    Madagascar
    Malawi
    Malaysia
    Maldives
    Mali
    Malta
    MarshallIslands
    Martinique
    Mauritania
    Mauritius
    Mayotte
    Mexico
    Micronesia
    Moldova
    Monaco
    Mongolia
    Montenegro
    Montserrat
    Morocco
    Mozambique
    Myanmar
    Namibia
    Nauru
    Nepal
    Netherlands
    NewCaledonia
    NewZealand
    Nicaragua
    Niger
    Nigeria
    Niue
    NorfolkIsland
    NorthernMarianaIslands
    Norway
    Oman
    Pakistan
    Palau
    PalestinianTerritory
    Panama
    PapuaNewGuinea
    Paraguay
    Peru
    Philippines
    Pitcairn
    Poland
    Portugal
    PuertoRico
    Qatar
    Reunion
    Romania
    RussianFederation
    Rwanda
    SaintBarthelemy
    SaintHelena
    SaintKittsAndNevis
    SaintLucia
    SaintMartin
    SaintPierreAndMiquelon
    SaintVincentAndGrenadines
    Samoa
    SanMarino
    SaoTomeAndPrincipe
    SaudiArabia
    Senegal
    Serbia
    Seychelles
    SierraLeone
    Singapore
    SintMaarten
    Slovakia
    Slovenia
    SolomonIslands
    Somalia
    SouthAfrica
    SouthGeorgiaAndSandwichIsl
    SouthSudan
    Spain
    SriLanka
    Sudan
    Suriname
    SvalbardAndJanMayen
    Swaziland
    Sweden
    Switzerland
    SyrianArabRepublic
    Taiwan
    Tajikistan
    Tanzania
    Thailand
    TimorLeste
    Togo
    Tokelau
    Tonga
    TrinidadAndTobago
    Tunisia
    Turkey
    Turkmenistan
    TurksAndCaicosIslands
    Tuvalu
    Uganda
    Ukraine
    UnitedArabEmirates
    UnitedKingdom
    UnitedStates
    UnitedStatesOutlyingIslands
    Uruguay
    Uzbekistan
    Vanuatu
    Venezuela
    VietNam
    VirginIslandsBritish
    VirginIslandsUS
    WallisAndFutuna
    WesternSahara
    Yemen
    Zambia
    Zimbabwe
}

enum CouponDiscountType {
    FIXED
    NONE
    RATIO
}

enum CouponOrderType {
    CREATED_AT
    EXPIRED_AT
}

enum CouponUseType {
    ONLINE
    ONSITE
}

enum CurrencyType {
    CNY
    HKD
    JPY
    KRW
    THB
    TWD
    USD
    VND
}

enum DayOfWeekType {
    FRIDAY
    MONDAY
    SATURDAY
    SUNDAY
    THURSDAY
    TUESDAY
    WEDNESDAY
}

enum DivisionOrderType {
    createdAt
}

enum DivisionSetOrderType {
    createdAt
}

enum DivisionType {
    FIRST
    FOURTH
    SECOND
    THIRD
}

enum DormitoryListOrderType {
    CREATED_AT
    TRANSLATION_NAME
    UPDATED_AT
}

enum ExchangeOrderFieldType {
    CREATED_AT
    ORDER_NUMBER
}

enum ExchangeStatusType {
    PUBLISH
}

enum FaqOrderType {
    CREATED_AT
    PRIORITY
}

enum FileDomainType {
    ADVERTISEMENT
    BANNER
    BLOG
    CONTRACT
    COUPON
    MEMBER
    PROXY_SHOP
    RESERVATION
    RESERVATION_REQUIRED_INFO_ADMIN
    RESERVATION_REQUIRED_INFO_USER
    SPOT
    SPOT_ITEM
    SPOT_REVIEW
    TEMP
    TIP
    VOUCHER
}

enum GenderType {
    FEMALE
    MALE
}

enum IncomingMerchandiseOrderType {
    createdAt
    validity
}

"상품 구매를 어떤 방법으로 했는지를 나타내는 type"
enum IncomingMerchandisePaymentMethodType {
    CARD
    DRAFT
    NONE
}

enum IncomingMerchandiseStatusType {
    CANCELED
    COMPLETED
    IN_PROGRESS
    PARTIAL_RECEIVE
}

enum IncomingMerchandiseType {
    MOVEMENT
    PURCHASE
}

enum IndividualProxyShopEventType {
    DEFAULT
    DISCOUNT
    GIFT
}

enum LanguageCourseClassType {
    ONLINE
    REGULAR
    SHORT
    VACATION
}

enum LanguageCourseDocumentOrderType {
    CREATED_AT
    UPDATE_AT
}

enum LanguageCourseInstituteType {
    PRIVATE
    UNIVERSITY
}

enum LanguageCoursePageOrderType {
    CREATED_AT
    LIKE_COUNT
    RENEWAL_DATE
    UPDATED_AT
    VIEW_COUNT
}

enum LanguageCourseRegistrationItemType {
    APPLICATION
    COURSE
    DORMITORY
}

enum LanguageCourseRegistrationPageOrderType {
    CREATED_AT
}

enum LanguageCourseRegistrationStatusType {
    CANCELED
    CANCEL_REQUESTED
    COMPLETED
    EVALUATING
    PREPARING_PAYMENT
    REJECTED
    WAITING_COMPLETE
    WAITING_FOR_PROCESS_REGISTRATION
    WAITING_PAYMENT
    WRITING
}

enum LanguageCourseRequiredInfoGroupLayoutType {
    BASIC
    TABLE
}

enum LanguageCourseRequiredInfoGroupType {
    ACADEMIC_ABILITY
    EXTRA
    FINANCIAL
    PERSONAL
    VISA
}

enum LanguageCourseRequiredInfoType {
    CONDITIONAL
    DATE_DAY
    DATE_MONTH
    LIST
    MULTI_LINE_TEXT
    PERIOD_DATE_DAY
    PERIOD_DATE_MONTH
    SINGLE_LINE_TEXT
}

"어학당 과정 학기 정렬 기준"
enum LanguageCourseSemesterOrderType {
    COURSE_END
    COURSE_START
    REGISTRATION_END
    REGISTRATION_START
}

"어학당 과정 학기 상태"
enum LanguageCourseSemesterStatus {
    APPLICABLE
    APPLICABLE_TOGETHER
    EXPIRED
}

enum LanguageCourseTagOrderType {
    CREATED_AT
    UPDATED_AT
}

enum LanguageType {
    CHINESE
    ENGLISH
    HONGKONG
    JAPANESE
    KOREAN
    TAIWAN
    THAI
    VIETNAMESE
}

enum MemberLikeProxyShopOrderType {
    createdAt
}

enum MemberLikeSpotOrderType {
    CREATED_AT
}

enum MemberRoleType {
    ADMIN
    BLOCKED
    PARTNER
    SUPER_ADMIN
    USER
}

enum MerchandiseInAndOutLinkOrderType {
    createdAt
}

"FIFO: 상품 선입 선출로 생김, MOVEMENT: 창고 간 이동 과정에서 생김"
enum MerchandiseInAndOutLinkType {
    FIFO
    MOVEMENT
}

enum MerchandiseOrderType {
    createdAt
}

enum MerchandiseType {
    COMMON
    GIFT
    MD
}

enum NotificationMessageType {
    ORDER_CANCELED
    ORDER_COMPLETE
    ORDER_PAYMENT_COMPLETE
    ORDER_REQUEST_CONFIRM
    ORDER_SHIPPING
    QUOTE_CANCELED
    QUOTE_CREATED
    QUOTE_SENT
    RESERVATION_CANCEL
    RESERVATION_COMPLETE
    RESERVATION_CONFIRM_REQUIRED
    RESERVATION_USED
}

enum NotificationOrderType {
    CREATED_AT
}

"TARGET : 예약, 주문 등등 대상이 정해져 있는 알람, TOPIC : 이벤트, 공지 등등 전역 알람"
enum NotificationType {
    TARGET
    TOPIC
}

enum OrderByDirectionType {
    ASC
    DESC
}

enum OrderOrderType {
    createdAt
    id
    paidDate
}

enum OrderShippingOrderFieldType {
    createdAt
}

enum OrderShippingStatusType {
    CANCELED
    CANCEL_REQUESTED
    COMPLETED
    PREPARING_DELIVERY
    PREPARING_MERCHANDISE
    PURCHASE_COMPLETED
    SHIPPING_TO_END_POINT
    UNPAID
}

enum OrderStatusType {
    CANCELED
    CANCEL_REQUESTED
    CAN_BE_COMPLETED
    COMPLETED
    PREPARING_DELIVERY
    PREPARING_MERCHANDISE
    UNPAID
}

enum OrderUserType {
    BUSINESS
    GENERAL
}

"UNPAID: 주문 시, UNPROCESSED: 결제 완료, PREPARED: 상품 준비 완료, COMPLETE: 배송 완료, CANCELED: 취소"
enum OrderedMerchandiseStatusType {
    CANCELED
    COMPLETED
    PREPARED
    UNPAID
    UNPROCESSED
}

"REPROCESSING: 주문 재처리시 생성되는 상품의 타입, NORMAL: 일반 상태의 타입"
enum OrderedMerchandiseType {
    NORMAL
    REPROCESSING
}

enum OutgoingMerchandiseOrderType {
    createdAt
}

"CANCELED는 재고 출고 안된 상태에서 취소, REFUNDED는 재고 출고 후 취소"
enum OutgoingMerchandiseStatusType {
    CANCELED
    COMPLETED
    PREPARED
    REFUNDED
    UNPROCESSED
}

enum OutgoingMerchandiseType {
    ETC
    MOVEMENT
    REPROCESSING
    SALE
}

enum PartnershipBusinessType {
    EDUCATION
    HEALTH
    NPO
    RENTAL
    RESTAURANT
    SERVICE
    TRANSPORT
    WHOLESALE_OR_RETAIL
}

enum PartnershipMainCategoryType {
    LANGUAGE_SCHOOL
    PROXY_SHOP
    TRIP
}

enum PartnershipOrderType {
    CREATED_AT
}

enum PartnershipStatusType {
    ACTIVE
}

enum PartnershipSubCategoryType {
    ACCOMMODATION
    ACTIVITY
    ATTRACTION
    B2B
    BEAUTY
    CAFE
    CONVENIENCE
    DELIVERY
    DIRECT_MANAGEMENT
    EDUCATION
    ETC
    HANBOK
    MEDICAL
    PHOTO
    REAL_ESTATE
    RESTAURANT
    SHOPPING
    TOUR
    TRANSPORTATION
}

enum PaymentDomainType {
    LANGUAGE_COURSE
    RESERVATION
    SHOPPING_ORDER
}

enum PaymentHistoryStatus {
    CANCELLED
    FAILED
    PAID
    READY
    REFUNDED
}

enum PaymentStatus {
    CANCELLED
    FAILED
    PAID
    PARTIAL_REFUNDED
    READY
}

"IAMPORT type will be deprecated"
enum PaymentType {
    EC_PAY_ATM
    EC_PAY_BARCODE
    EC_PAY_CREDIT_CARD
    EC_PAY_CVS
    EC_PAY_WEBATM
    EXIMBAY
    IAMPORT
    IAMPORT_CARD
    IAMPORT_VBANK
    LINEPAY
    POINT
}

enum PointHistoryOrderType {
    CREATED_AT
}

enum PointHistoryType {
    EVENT_PARTICIPATE
    EXPIRED
    LANGUAGE_COURSE_USE
    PROXY_IMAGE_REVIEW
    PROXY_PURCHASE
    PROXY_REVIEW
    PROXY_UNUSE
    PROXY_USE
    RESERVATION_IMAGE_REVIEW
    RESERVATION_PURCHASE
    RESERVATION_REVIEW
    RESERVATION_UNUSE
    RESERVATION_USE
    SHIPPING_DELAY
    SYSTEM_ERROR
    USER_BLOG
}

enum PointRewardType {
    EVENT_PARTICIPATE
    SHIPPING_DELAY
    SYSTEM_ERROR
}

enum ProxyShopEventOrderType {
    createdAt
}

enum ProxyShopEventStatus {
    CLOSED
    ON_GOING
    READY
}

"GET_FREE:  n+m 이벤트 (ex: 1+1) / DISCOUNT: 가격 할인 / GIFT: 사은품 / SHIPPING_FREE: 배송비 무료"
enum ProxyShopEventType {
    DISCOUNT
    FREE_SHIPPING
    GET_FREE
    GIFT
}

enum ProxyShopOrderType {
    createdAt
    currentEventStart
    likeCount
    salePrice
    viewCount
}

enum ProxyShopReviewOrderType {
    createdAt
}

enum ProxyShopType {
    GENERAL
    REQUEST
}

enum ProxyTagOrderType {
    createdAt
    priority
    type
}

enum ProxyTagType {
    BRAND
    MAIN_PROXY_SHOPPING_CATEGORY
    MIDDLE_PROXY_SHOPPING_CATEGORY
    OPTION_NAME
    OPTION_VALUE
}

enum RequestMerchandiseQuoteOrderType {
    createdAt
}

enum RequestMerchandiseQuoteStatusType {
    CANCELED
    COMPLETED
    UNPROCESSED
}

enum RequiredInfoStatusType {
    FIX
}

enum RequiredInfoType {
    ADDRESS
    DATE
    EMAIL
    IMAGE
    LIST
    PHONE
    TEXT
}

enum ReservationOrderType {
    CREATED_AT
    PAYMENT_DATE
    RESERVATION_DATE
}

enum ReservationPolicyStatusType {
    CONFIRM_REQUIRED
    DATE_REQUIRED
    PAYMENT_REQUIRED
    TIME_REQUIRED
}

enum ReservationStatusType {
    CANCEL
    COMPLETE
    CONFIRM_REQUIRED
    PARTIAL_REFUND
    PAYMENT_REQUIRED
    USED
}

enum ReservationType {
    COUPON
    GENERAL
    MEMBER
    PROXY_SHOPPING
    URL
}

enum ReviewDomainType {
    BLOG_REVIEW
    PROXY_SHOP_REVIEW
    SPOT_REVIEW
}

enum SearchBlogOrderFieldType {
    CREATED_AT
    LIKE_COUNT
    RENEWAL_DATE
}

enum SearchCharacterType {
    A
    B
    C
    D
    E
    ETC
    F
    G
    H
    I
    J
    K
    L
    M
    N
    O
    P
    Q
    R
    S
    T
    U
    V
    W
    X
    Y
    Z
}

enum SearchProxyShopOrderFieldType {
    CREATED_AT
    LIKE_COUNT
}

enum SearchSpotOrderFieldType {
    CREATED_AT
    LIKE_COUNT
    RENEWAL_DATE
}

enum SearchSuggestType {
    PROXY_HASH_TAG
    PROXY_SHOP
    PROXY_TAG
    SPOT
    TRIP_CATEGORY
    TRIP_HASHTAG
}

enum SettlementType {
    DEDUCT_FEE
    DEPOSIT
    FIXED_COST
    NOT_SELECTED
    NO_SETTLEMENT
    PRE_PURCHASE
    RECEIVE_FEE
    SETTLEMENT
}

enum ShippingPolicyOrderType {
    createdAt
}

enum ShippingSiteOrderType {
    createdAt
}

enum SocialType {
    APPLE
    CREATRIP
    FACEBOOK
    GOOGLE
    LINE
}

enum SpotEventOrderFieldType {
    CREATED_AT
}

enum SpotEventStatusType {
    CLOSED
    ON_GOING
    READY
}

enum SpotEventType {
    DISCOUNT
    GET_FREE
}

enum SpotItemStatusType {
    RESERVABLE
}

enum SpotOrderType {
    CREATED_AT
    DISCOUNT_PRICE
    LIKE_COUNT
    RENEWAL_DATE
}

enum SpotReviewOrderType {
    CREATED_AT
}

enum SpotStatusType {
    RESERVABLE
}

enum SpotTransStatusType {
    DEFAULT
    PUBLISH
    RECOMMEND
}

enum TagType {
    ARCHIVE
    BLOG_CATEGORY
    CITY
    DETAIL_LOCATION
    HASH_TAG
    MAIN_GENERAL_CATEGORY
    MAIN_PROXY_SHOPPING_CATEGORY
    MAIN_RESERVATION_CATEGORY
    MIDDLE_GENERAL_CATEGORY
    MIDDLE_PROXY_SHOPPING_CATEGORY
    MIDDLE_RESERVATION_CATEGORY
}

enum TipOrderFieldType {
    CREATED_AT
    PRIORITY
    RANDOM
}

enum TripHashtagOrderField {
    CREATED_AT
}

enum UserBlogStatusType {
    CONFIRMED
    CONFIRM_REQUIRED
    DECLINED
    WRITING
}

enum ViewedCountOrderType {
    VIEWED_COUNT
}

enum VoucherOrderType {
    CREATED_AT
    EXPIRED_AT
}

enum VoucherTemplateOrderType {
    CLOSEST_EXPIRATION_DATE
    CREATED_AT
}

enum VoucherType {
    IMAGE
    PIN
}

enum WarehouseOrderType {
    createdAt
}

"Date custom scalar type"
scalar Date

"url to key, key to url"
scalar ImageUrl

"url scalar"
scalar URL

input AddBlogToAdvertisementArgs {
    advertisementCode: Int!
    blogCode: Int!
}

input AddBlogToSpotArgs {
    blogCode: Int!
    spotCode: Int!
}

input AddCurrencyExchangePriceArgs {
    currencyExchangePrice: CurrencyExchangePriceArgs!
    exchangeCode: Int!
}

input AddGiftToOrderShippingInput {
    localName: String!
    merchandiseId: ID!
    orderShippingId: ID!
    quantity: Int!
}

input AddHashtagToLanguageCourseTranslationArgs {
    name: String!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input AddIgnoredPushMessageTypeArgs {
    types: [NotificationMessageType!]!
    "user device id"
    udid: String!
}

input AddPaymentInput {
    amount: Float!
    currency: CurrencyType!
    orderCode: String!
    paymentId: String!
}

input AddPercentRefundPolicyArgs {
    percentRefundPolicy: PercentRefundPolicyArgs!
    reservationPolicyCode: Int!
}

input AddProxyShopToAdvertisementArgs {
    advertisementCode: Int!
    language: LanguageType!
    proxyShopId: ID!
}

input AddRemarkToReservationArgs {
    remarkCode: Int!
    reservationPolicyCode: Int!
}

input AddRequiredInfoToReservationPolicyArgs {
    requiredInfoCode: Int!
    reservationPolicyCode: Int!
}

input AddShippingInfoToOrderShippingForBulkInput {
    invoiceNumber: String!
    orderShippingCode: String!
    shippingCompany: String!
    shippingDescription: String
    shippingUrl: String
}

input AddShippingInfoToOrderShippingInput {
    id: ID!
    invoiceNumber: String!
    shippingCompany: String!
    shippingDescription: String
    shippingUrl: String
}

input AddSpotToAdvertisementArgs {
    advertisementCode: Int!
    spotCode: Int!
}

input AddSpotToContractArgs {
    contractCode: Int!
    spotCode: Int!
}

input AddSpotToCouponArgs {
    couponCode: Int!
    spotCode: Int!
}

input AddSpotToVoucherTemplateArgs {
    spotCode: Int!
    voucherTemplateCode: Int!
}

input AddTagToAdvertisementArgs {
    advertisementCode: Int!
    tagCode: Int!
}

input AddTagToLanguageCourseTranslationInput {
    "LanguageCourseTag.id"
    tagId: ID!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input AddTripHashtagToBlogTransArgs {
    blogTransCode: Int!
    name: String!
}

input AddTripHashtagToSpotTransArgs {
    name: String!
    spotTransCode: Int!
}

input AddTypeToBlogArgs {
    blogCode: Int!
    type: BlogType!
}

input AddVoucherToReservationArgs {
    reservationCode: Int!
    voucherCode: String!
}

input AddressOptionCreateInput {
    level: AddressOptionLevelType!
    name: String!
    "level FIRST 일떄만 필요"
    priority: Int
}

input AddressOptionFilter {
    level: AddressOptionLevelType
    name: String
}

input AddressOptionOrder {
    direction: OrderByDirectionType!
    field: AddressOptionOrderType!
}

input AddressOptionPageInput {
    filter: AddressOptionFilter
    limit: Int!
    order: AddressOptionOrder
    page: Int!
}

input AddressOptionUpdateInput {
    id: ID!
    name: String
    "level FIRST 일떄만 필요"
    priority: Int
}

input AdvertisementFilter {
    isExistsInPeriod: Boolean
    isPublish: Boolean
    language: LanguageType
    search: String
    type: AdvertisementType
}

input AdvertisementOrder {
    direction: OrderByDirectionType
    field: AdvertisementOrderFieldType!
}

input AdvertisementPageArgs {
    filter: AdvertisementFilter
    limit: Int!
    order: AdvertisementOrder
    page: Int!
}

input ApplyOrderPointInput {
    orderId: ID!
    point: Float!
}

input ApplyPointToLanguageCourseRegistrationPaymentInput {
    "LanguageCourseRegistration.id"
    registrationId: ID!
    "적용할 포인트"
    value: Float!
}

input ApplyPointToReservationArgs {
    "reservation의 pk값"
    code: Int!
    "적용할 포인트"
    value: Float!
}

input BannerFilter {
    bannerExposePosition: BannerExposePositionType
    isPublish: Boolean
    language: LanguageType
    period: PeriodArgs
    search: String
}

input BannerOrder {
    direction: OrderByDirectionType
    field: BannerOrderType!
}

input BannerPageArgs {
    filter: BannerFilter
    limit: Int!
    order: BannerOrder
    page: Int!
}

input BlogFilter {
    "OR 조건으로 동작합니다"
    categories: [Int!]
    cityCategory: Int
    "초안이 작성된 언어를 구분하기 위함 - 어권 별 분리"
    isDefault: Boolean
    "시리즈로 연재되는 게시글 중 가장 첫번째를 표시하기 위함 - 어권 별 분리"
    isMain: Boolean
    "어권 별 분리"
    isPublish: Boolean
    "어권 별 분리"
    isRecommend: Boolean
    "mandatory"
    language: LanguageType!
    title: String
    types: [BlogType!]
}

input BlogMostViewedArgs {
    filter: BlogMostViewedFilter!
    limit: Int!
    order: ViewedCountOrder
    page: Int!
}

input BlogMostViewedFilter {
    categoryCodes: [Int!]
    cityCategoryCode: Int
    language: LanguageType!
    period: PeriodArgs!
    size: Int
    types: [BlogType!]!
}

input BlogOrder {
    direction: OrderByDirectionType
    field: BlogOrderType!
}

input BlogPageArgs {
    filter: BlogFilter!
    limit: Int!
    order: BlogOrder
    page: Int!
}

input BlogReviewCreateArgs {
    blogCode: Int!
    "댓글 내용"
    content: String!
    language: LanguageType!
    "대댓글 작성시, 부모댓글의 code"
    parentCode: Int
}

input BlogReviewFilter {
    blogCode: Int!
}

input BlogReviewOrder {
    direction: OrderByDirectionType!
    field: BlogReviewOrderType!
}

input BlogReviewPageArgs {
    filter: BlogReviewFilter
    limit: Int!
    order: BlogReviewOrder
    page: Int!
}

input BlogReviewUpdateArgs {
    "댓글 내용"
    content: String!
    language: LanguageType!
    reviewCode: Int!
}

input BrandListArgs {
    "모든 브랜드"
    categoryIds: [ID!]
    "default 전체기간"
    createdAt: PeriodInput
    "현재 이벤트가 진행중인 매대를 출력하는 필터, null일떄에는 모든 매대에 대해 브랜드를 가져온다"
    hasEvent: Boolean
    language: LanguageType!
    "default 전체 리스트"
    limit: Int
}

input BulkCreateCartItemArgs {
    data: [CartItemCreateInput!]!
}

input BulkCreateVoucherArgs {
    vouchers: [CreateVoucherInput!]!
}

input BulkSetRequiredInfoToLanguageCourseTranslationArgs {
    "LanguageCourseRequiredInfo.id"
    infoIds: [ID!]!
    status: Boolean!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input BusinessHourArgs {
    dayOfWeek: DayOfWeekType!
    isOpen: Boolean!
    timePeriods: [TimePeriodArgs!]
}

input CancelOrderShippingItemInput {
    orderShippingId: ID!
    orderedMerchandiseId: ID!
}

input CancelOrderShippingRequestForNonUserInput {
    orderCode: String!
    orderShippingId: ID!
}

input CartItemCreateInput {
    proxyShopHasMerchandiseId: ID!
    quantity: Int!
}

input CartItemFilter {
    search: String
}

input CartItemOrder {
    direction: OrderByDirectionType!
    field: CartItemOrderType!
}

input CartItemPageInput {
    filter: CartItemFilter
    limit: Int!
    order: CartItemOrder
    page: Int!
}

input CategoryFilter {
    language: LanguageType
    name: String
    type: CategoryType
    types: [CategoryType!]
}

input CategoryOrder {
    direction: OrderByDirectionType
    field: CategoryOrderFieldType!
}

input CategoryPageArgs {
    filter: CategoryFilter
    limit: Int!
    order: CategoryOrder
    page: Int!
}

input CategoryTransArgs {
    language: LanguageType!
    name: String!
}

input ChangeCartItemQuantityInput {
    id: ID!
    quantity: Int!
}

input ChangeMemberLevelArgs {
    code: Int!
    level: MemberRoleType!
}

input ChangeMemberThumbnailArgs {
    code: Int!
    url: URL!
}

input ChangePartnerPassword {
    code: Int!
    password: String!
}

input ChangePasswordArgs {
    changePassword: String!
    currentPassword: String!
}

input ChangeReservationDateArgs {
    reservationCode: Int!
    "YYYY-MM-DD HH:mm:ss"
    reservationDate: Date!
}

input ChangeWarehouseInput {
    orderShippingId: ID!
    willBeChangedWarehouseId: ID!
}

input CheckCanPurchaseMerchandiseInput {
    proxyShopHasMerchandiseId: ID!
    purchaseQuantity: Int!
}

input CompleteMerchandisePreparationInput {
    orderShippingId: ID!
    orderedMerchandiseId: ID!
}

input ConfirmLinePayArgs {
    "결제 요청시 전달한 가맹점 Unique 주문번호 (reservation.reservationCode)"
    orderId: String!
    "결제 요청 결과로 전달받은 거래 번호(19자리)"
    transactionId: ID!
}

"deprecated"
input ConfirmLinePayInput {
    "결제 요청시 전달한 가맹점 Unique 주문번호 (order.Code)"
    orderCode: String!
    "결제 요청 결과로 전달받은 거래 번호(19자리)"
    transactionId: String!
}

input ConfirmUserBlogArgs {
    blogCode: Int!
    currency: CurrencyType!
    "포인트 값"
    value: Float!
}

input CopyLanguageCourseTranslationArgs {
    "LanguageCourse.id"
    courseId: ID!
    "어학당 과정 이름"
    name: String!
    "기존에 있는 언어"
    sourceLanguage: LanguageType!
    "새로 번역할 언어"
    targetLanguage: LanguageType!
}

input CouponFilter {
    discountType: CouponDiscountType
    isActive: Boolean
    period: PeriodArgs
    search: String
    useType: CouponUseType
}

input CouponOrder {
    direction: OrderByDirectionType
    field: CouponOrderType!
}

input CouponPageArgs {
    filter: CouponFilter
    limit: Int!
    order: CouponOrder
    page: Int!
}

input CreateAdvertisementArgs {
    advertiserName: String!
    period: PeriodArgs!
    type: AdvertisementType!
}

input CreateBannerArgs {
    advertiserName: String!
    exposePosition: BannerExposePositionType!
    extraDescription: String
    language: LanguageType!
    name: String!
    period: PeriodArgs!
}

input CreateBlogArgs {
    cityCategoryCode: Int
    language: LanguageType!
    mainCategoryCodes: [Int!] = []
    middleCategoryCodes: [Int!] = []
    title: String!
    "BLOG타입은 deprecation입니다. 나머지 타입만 사용해주세요"
    types: [BlogType!]!
}

input CreateCategoryArgs {
    translations: [CategoryTransArgs!]!
    type: CategoryType!
}

input CreateContractToPartnershipArgs {
    "YYYY-MM-DD"
    contractEndDate: Date!
    "YYYY-MM-DD"
    contractStartDate: Date!
    contractType: ContractType!
    "default false"
    isAutomaticExtension: Boolean
    "default false"
    isSettlement: Boolean
    partnershipCode: Int!
    "list of day"
    settlementDates: [Int!]
    settlementType: SettlementType!
    specialNote: String
}

input CreateDiscountIndividualProxyShopEventArgs {
    eventPrice: Int!
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
}

input CreateDiscountIndividualSpotEventArgs {
    "할인 가격"
    baseValue: Int!
    eventCode: Int!
    itemCode: Int!
}

input CreateDiscountProxyShopEventArgs {
    description: String
    language: LanguageType!
    limitCount: Int
    period: PeriodInput!
    proxyShopId: ID!
}

input CreateDiscountSpotEventArgs {
    description: String
    period: PeriodArgs!
    spotCode: Int!
}

input CreateExchangeWithTransArgs {
    address: String!
    translations: [ExchangeTransInput!]!
}

input CreateFaqArgs {
    mainCategoryId: Int!
    middleCategoryId: Int!
    translations: [FaqTransArgs!]!
}

input CreateFileToContractArgs {
    contractCode: Int!
    mimetype: String!
    originalName: String!
    url: URL!
}

input CreateFreeShippingProxyShopEventArgs {
    description: String
    language: LanguageType!
    limitCount: Int
    period: PeriodInput!
    proxyShopId: ID!
}

input CreateGetFreeIndividualSpotEventArgs {
    eventCode: Int!
    itemCode: Int!
}

input CreateGetFreeProxyShopEventArgs {
    description: String
    getFree: GetFreeInput!
    language: LanguageType!
    limitCount: Int
    period: PeriodInput!
    proxyShopId: ID!
}

input CreateGetFreeSpotEventArgs {
    baseValue: Int!
    description: String
    period: PeriodArgs!
    spotCode: Int!
    subValue: Int!
}

input CreateGiftIndividualProxyShopEventArgs {
    minimumOrderQuantity: Int!
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
}

input CreateGiftProxyShopEventArgs {
    description: String
    eventGift: EventGiftInput!
    language: LanguageType!
    limitCount: Int
    period: PeriodInput!
    proxyShopId: ID!
}

input CreateImageToBlogArgs {
    blogCode: Int!
    url: URL!
}

input CreateImageToSpotArgs {
    altText: String
    spotCode: Int!
    url: URL!
}

input CreateImageToSpotItemArgs {
    isMain: Boolean!
    spotItemCode: Int!
    url: URL!
}

input CreateIndividualProxyShopEventArgs {
    proxyShopEventId: ID!
    proxyShopHasMerchandiseId: ID!
}

input CreateItemToSpotArgs {
    discountPrice: Float
    fee: Float
    isReservable: Boolean
    originalPrice: Float
    parentCode: Int
    settlementPrice: Float
    spotCode: Int!
    translation: CreateItemTransArgs!
}

input CreateItemTransArgs {
    description: String
    language: LanguageType!
    name: String!
}

input CreateLanguageCourseArgs {
    "과정 구분"
    classType: LanguageCourseClassType!
    "교육 기관"
    instituteType: LanguageCourseInstituteType!
    translation: CreateLanguageCourseTranslationArgs!
}

input CreateLanguageCourseDocumentTransArgs {
    description: String
    language: LanguageType!
    name: String!
}

input CreateLanguageCourseDormitoryArgs {
    "LanguageCourse.id"
    courseId: ID!
    language: LanguageType!
    name: String!
}

input CreateLanguageCourseRegistrationArgs {
    "입력한 기본정보"
    basicInfo: CreateLanguageCourseRegistrationBasicInfoArgs!
    "LanguageCourse.id"
    courseId: ID!
    currencyType: CurrencyType!
    "입력한 요구정보 (그룹단위)"
    groupedRequiredInfos: [CreateLanguageCourseRegistrationGroupedRequiredInfoArgs!]!
    language: LanguageType!
    "pc, mobile 등의 사용기기 정보"
    platform: String!
    "수강신청할 학기 리스트"
    semesters: [CreateLanguageCourseRegistrationSemesterArgs!]!
}

input CreateLanguageCourseRegistrationBasicInfoArgs {
    "생년월일 (YYYY-MM-DD)"
    birth: Date!
    "EMAIL"
    email: String!
    "성별"
    gender: GenderType!
    "이름"
    name: String!
    "본국"
    ownCountry: CountryType!
    "본국 주소"
    ownCountryAddress: String!
    "본국 전화번호"
    ownCountryTelephone: String!
    "SNS ID 'type: id'"
    sns: String!
    "본인 개인연락처"
    telephone: String!
}

input CreateLanguageCourseRegistrationGroupedRequiredInfoArgs {
    "LanguageCourseRequiredInfoGroup.id"
    groupId: ID!
    "LanguageCourseRequiredInfo.id"
    infoIds: [ID!]!
    values: [[String!]!]!
}

input CreateLanguageCourseRegistrationSemesterArgs {
    "LanguageCourseSemester.id"
    id: ID!
    "해당 학기 기숙사 신청 여부 (default: false)"
    requestDormitory: Boolean = false
}

input CreateLanguageCourseRequiredDocumentArgs {
    translations: [CreateLanguageCourseDocumentTransArgs!]!
}

input CreateLanguageCourseRequiredInfoArgs {
    "중분류 설정"
    groupId: ID!
    "필수 여부"
    isRequired: Boolean
    translations: [CreateLanguageCourseRequiredInfoTransArgs!]!
    "대분류 설정"
    type: LanguageCourseRequiredInfoType!
}

input CreateLanguageCourseRequiredInfoGroupArgs {
    layoutType: LanguageCourseRequiredInfoGroupLayoutType!
    "[표 타입] 최소 입력 개수"
    minimumTableRowCount: Int
    translations: [CreateLanguageCourseRequiredInfoGroupTransArgs!]!
    type: LanguageCourseRequiredInfoGroupType!
}

input CreateLanguageCourseRequiredInfoGroupTransArgs {
    language: LanguageType!
    name: String!
}

input CreateLanguageCourseRequiredInfoTransArgs {
    "설명"
    description: String
    language: LanguageType!
    "질문이름 또는 여부질문"
    name: String!
    """

    리스트 선택 타입일때 선택할 값들을 담고있음
    (ex. ["매우 그렇지 않음", "그렇지 않음", "보통", "그렇다", "매우 그렇다"])
    """
    options: [String!]
    "도움말 혹은 분류도움말(표타입). 리스트 빼고 다 사용"
    placeholder: String
    "도움말2. 기간선택에서만 사용"
    placeholder2: String
}

input CreateLanguageCourseSemesterArgs {
    coursePeriod: CreatePeriodArgs!
    name: NameInput!
    registrationPeriod: CreatePeriodArgs!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input CreateLanguageCourseTagInput {
    translations: [CreateLanguageCourseTagTranslationInput!]!
}

input CreateLanguageCourseTagTranslationInput {
    language: LanguageType!
    name: String!
}

input CreateLanguageCourseTranslationArgs {
    language: LanguageType!
    "어학당 과정 제목"
    name: String!
}

input CreateOnlineCouponArgs {
    description: String
    discountType: CouponDiscountType!
    discountValue: Int!
    expiredAt: Date!
    name: String!
    partnershipCode: Int
}

input CreateOnsiteCouponArgs {
    description: String
    discountDescription: String!
    expiredAt: Date!
    name: String!
    partnershipCode: Int
}

input CreatePartnerArgs {
    email: String
    id: String!
    name: String
    password: String!
}

input CreatePartnershipArgs {
    accountHolder: String
    bank: String
    bankAccount: String
    businessItem: String
    businessRegistrationNumber: String!
    businessType: PartnershipBusinessType
    companyName: String!
    email: String
    "변경 불가"
    mainCategory: PartnershipMainCategoryType!
    partnerCode: Float
    partnerName: String
    phone: String
    representativeName: String!
    "업체 정산 담당자 이메일"
    settlementPartnerEmail: String
    "업체 정산 담당자 이름"
    settlementPartnerName: String
    "업체 정산 담당자 연락처"
    settlementPartnerPhone: String
    specialNote: String
    "변경 불가"
    subCategory: PartnershipSubCategoryType!
}

input CreatePeriodArgs {
    end: Date!
    start: Date!
}

input CreateRequiredInfoTransArgs {
    description: String
    language: LanguageType!
    name: String!
}

input CreateRequiredInfoWithTransArgs {
    imageUrl: URL
    isDefault: Boolean
    isFix: Boolean
    option: [String!]
    translations: [CreateRequiredInfoTransArgs!]!
    type: RequiredInfoType!
}

input CreateReservationArgs {
    country: String
    countryType: CountryType
    email: String!
    "추후 필수 항목이 될 예정, nullable한 상태에서 default 값은 en"
    language: LanguageType
    name: String!
    paymentCurrency: CurrencyType!
    platform: String = "pc-web"
    "YYYY-MM-DD HH:mm:ss"
    reservationDate: Date!
    reservationInfos: [ReservationInfoCreateInput!] = []
    reservationItems: [ReservedItemCreateInput!]!
    social: String!
    spotCode: Int!
    telephone: String!
    version: String
}

input CreateSpecialReservableTimeToReservationPolicyArgs {
    reservationPolicyCode: Int!
    specialReservableTime: SpecialReservableTimeArgs!
}

input CreateSpotArgs {
    address: String!
    cityCategoryCode: Int!
    latitude: Float!
    longitude: Float!
    mainCategoryCodes: [Int!]!
    middleCategoryCodes: [Int!]
    telephone: String
    translation: CreateSpotTransArgs!
}

input CreateSpotTransArgs {
    language: LanguageType!
    moreInformation: String!
    name: String!
}

input CreateTipArgs {
    blogTransCode: Int!
    imageUrl: URL!
    language: LanguageType!
    title: String!
}

input CreateTransToAdvertisementArgs {
    advertisementCode: Int!
    description: String
    language: LanguageType!
    linkUrl: String
    optionalDescription: String
    "가격 정보 입력"
    priceDescription: Int
    title: String!
}

input CreateUserBlogArgs {
    cityCategoryCode: Int!
    content: String!
    language: LanguageType!
    mainImageUrl: URL!
    title: String!
}

input CreateVoucherInput {
    expiredAt: Date!
    "Pin voucher is required pin code"
    pin: String
    type: VoucherType!
    "Image voucher is required image url"
    url: URL
    voucherTemplateCode: Int!
}

input CreateVoucherTemplateArgs {
    name: String!
    partnershipCode: Int!
}

input CurrencyExchangePriceArgs {
    buyPrice: Float!
    currency: String!
    sellPrice: Float!
}

input DeleteAdvertisementTransArgs {
    advertisementCode: Int!
    language: LanguageType!
}

input DeleteBlogTransArgs {
    blogCode: Int!
    language: LanguageType!
}

input DeleteContractFromPartnershipArgs {
    contractCode: Int!
    partnershipCode: Int!
}

input DeleteImageFromBlogArgs {
    blogCode: Int!
    imageCode: Int!
}

input DeleteImageFromSpotArgs {
    imageCode: Int!
    spotCode: Int!
}

input DeleteImageFromSpotItemArgs {
    imageCode: Int!
    spotItemCode: Int!
}

input DeleteIndividualProxyShopEventArgs {
    individualProxyShopEventId: ID!
    proxyShopEventId: ID!
}

input DeleteIndividualSpotEventArgs {
    eventCode: Int!
    individualEventCode: Int!
}

input DeleteItemFromSpotArgs {
    itemCode: Int!
    parentCode: Int!
    spotCode: Int!
}

input DeleteSpecialReservableTimeFromReservationPolicyArgs {
    reservationPolicyCode: Int!
    specialReservableTimeCode: Int!
}

input DivisionCreateInput {
    code: String!
    name: String!
    type: DivisionType!
}

input DivisionFilter {
    name: String
    type: DivisionType
}

input DivisionOrder {
    direction: OrderByDirectionType!
    field: DivisionOrderType!
}

input DivisionPageInput {
    filter: DivisionFilter
    limit: Int!
    order: DivisionOrder
    page: Int!
}

input DivisionSetCreateInput {
    customsCategory: String!
    firstDivisionId: ID!
    fourthDivisionId: ID
    hsCode: String!
    secondDivisionId: ID
    thirdDivisionId: ID
}

input DivisionSetFilter {
    search: String
}

input DivisionSetOrder {
    direction: OrderByDirectionType!
    field: DivisionSetOrderType!
}

input DivisionSetPageInput {
    filter: DivisionSetFilter
    limit: Int!
    order: DivisionSetOrder
    page: Int!
}

input DivisionSetUpdateInput {
    customsCategory: String
    firstDivisionId: ID
    fourthDivisionId: ID
    hsCode: String
    id: ID!
    secondDivisionId: ID
    thirdDivisionId: ID
}

input DivisionUpdateInput {
    id: ID!
    name: String
}

input DormitoryPageArgs {
    filter: DormitoryPageFilter
    order: DormitoryPageOrder
}

input DormitoryPageFilter {
    language: LanguageType
}

input DormitoryPageOrder {
    direction: OrderByDirectionType = ASC
    field: DormitoryListOrderType = TRANSLATION_NAME
}

input EventGiftInput {
    localName: String!
    merchandiseId: ID!
}

input ExchangeFilter {
    isPublish: Boolean
    language: LanguageType
}

input ExchangeOrder {
    direction: OrderByDirectionType
    field: ExchangeOrderFieldType!
}

input ExchangePageArgs {
    filter: ExchangeFilter
    limit: Int!
    order: ExchangeOrder
    page: Int!
}

input ExchangeTransInput {
    language: LanguageType!
    name: String!
}

input FaqFilter {
    isActive: Boolean
    language: LanguageType!
    mainCategoryId: Int
    middleCategoryId: Int
    search: String
}

input FaqOrder {
    direction: OrderByDirectionType!
    field: FaqOrderType!
}

input FaqPageArgs {
    filter: FaqFilter
    limit: Int!
    order: FaqOrder
    page: Int!
}

input FaqTransArgs {
    answer: String
    language: LanguageType!
    question: String!
}

input FreeShippingPolicyBaseInput {
    baseValue: Float!
    currency: CurrencyType!
}

input FreeShippingPolicyUpdateInput {
    baseValues: [FreeShippingPolicyBaseInput!]!
}

input GeoBoundingBox {
    bottomRight: LatLon!
    topLeft: LatLon!
}

input GetFreeInput {
    base: Float!
    free: Float!
}

input GivePointCompensationArgs {
    currency: CurrencyType!
    "보상받을 멤버의 pk값"
    memberCode: Int!
    "보상 타입"
    type: PointRewardType!
    "보상 액수"
    value: Float!
}

input IncomingMerchandiseCancelInput {
    description: String
    id: ID!
}

input IncomingMerchandiseCreateInput {
    description: String
    merchandiseId: ID!
    partnershipId: ID
    paymentMethodType: IncomingMerchandisePaymentMethodType!
    purchaseUrl: String
    quantity: Int!
    unitPrice: Int!
    warehouseId: ID!
}

input IncomingMerchandiseFilter {
    createdAt: PeriodInput
    merchandiseType: MerchandiseType
    paymentMethodType: IncomingMerchandisePaymentMethodType
    search: String
    status: IncomingMerchandiseStatusType
    type: IncomingMerchandiseType
    warehouseId: ID
}

input IncomingMerchandiseOrder {
    direction: OrderByDirectionType!
    field: IncomingMerchandiseOrderType!
}

input IncomingMerchandisePageInput {
    filter: IncomingMerchandiseFilter
    limit: Int!
    order: IncomingMerchandiseOrder
    page: Int!
}

input IncomingMerchandiseReceiveInput {
    id: ID!
    quantity: Int
    validity: Date
}

input IncomingMerchandiseUpdateInput {
    description: String
    id: ID!
}

input IndividualShippingPolicyCreateInput {
    division: String
    height: Int
    length: Int
    setPrice: Int!
    shippingPolicyId: ID!
    unitPrice: Int!
    weight: Int!
    width: Int
}

input IndividualShippingPolicyUpdateInput {
    division: String
    height: Int
    id: ID!
    length: Int
    setPrice: Int
    unitPrice: Int
    weight: Int
    width: Int
}

input IntegratedReviewArgs {
    domain: ReviewDomainType
    limit: Int!
    page: Int!
}

input IssueVouchersToReservationArgs {
    quantity: Int!
    reservationCode: Int!
    voucherTemplateCode: Int!
}

input LanguageCoursePageArgs {
    filter: LanguageCoursePageFilter!
    limit: Int!
    order: LanguageCoursePageOrder
    page: Int!
}

input LanguageCoursePageFilter {
    """

    true: 오늘이 접수기간에 포함되는 학기가 하나라도 있다면, 해당 학기를 포함하여 미래의 학기들까지 가져옴
    false: 오늘이 접수기간에 포함되는 학기가 하나도 없거나, 학기가 하나도 존재하지 않는 경우
    """
    applicable: Boolean
    cityCategoryId: ID
    classTypes: [LanguageCourseClassType!]
    instituteTypes: [LanguageCourseInstituteType!]
    isPublish: Boolean
    language: LanguageType!
    search: String
}

input LanguageCoursePageOrder {
    direction: OrderByDirectionType = DESC
    field: LanguageCoursePageOrderType = UPDATED_AT
}

input LanguageCourseRegistrationFilter {
    registrationDatePeriod: PeriodArgs
    search: String
    status: LanguageCourseRegistrationStatusType
}

input LanguageCourseRegistrationOrder {
    direction: OrderByDirectionType!
    field: LanguageCourseRegistrationPageOrderType!
}

input LanguageCourseRegistrationPageInput {
    filter: LanguageCourseRegistrationFilter
    limit: Int!
    order: LanguageCourseRegistrationOrder
    page: Int!
}

input LanguageCourseRequiredDocumentFilter {
    language: LanguageType!
    search: String
}

input LanguageCourseRequiredDocumentOrder {
    direction: OrderByDirectionType = DESC
    field: LanguageCourseDocumentOrderType = CREATED_AT
}

input LanguageCourseRequiredDocumentPageArgs {
    filter: LanguageCourseRequiredDocumentFilter!
    limit: Int!
    order: LanguageCourseRequiredDocumentOrder
    page: Int!
}

input LanguageCourseRequiredInfoGroupListFilterArgs {
    language: LanguageType!
    layoutType: LanguageCourseRequiredInfoGroupLayoutType
    search: String
    type: LanguageCourseRequiredInfoGroupType
}

input LanguageCourseSemesterPageArgs {
    filter: LanguageCourseSemesterPageFilter
    order: LanguageCourseSemesterPageOrder
}

input LanguageCourseSemesterPageFilter {
    """

    true: 오늘이 접수기간에 포함되는 학기가 하나라도 있다면, 해당 학기를 포함하여 미래의 학기들까지 가져옴
    false: 오늘이 접수기간에 포함되는 학기가 하나도 없거나, 학기가 하나도 존재하지 않는 경우
    """
    applicable: Boolean
}

"어학당 과정 학기 정렬"
input LanguageCourseSemesterPageOrder {
    direction: OrderByDirectionType = ASC
    field: LanguageCourseSemesterOrderType = COURSE_END
}

input LanguageCourseTagPageFilterInput {
    language: LanguageType!
    search: String
}

input LanguageCourseTagPageInput {
    filter: LanguageCourseTagPageFilterInput
    limit: Int!
    order: LanguageCourseTagPageOrderInput
    page: Int!
}

input LanguageCourseTagPageOrderInput {
    direction: OrderByDirectionType = ASC
    field: LanguageCourseTagOrderType = CREATED_AT
}

input LatLon {
    latitude: Float!
    longitude: Float!
}

"deprecated"
input LinePayRequestUrlArgs {
    "LINE 앱 결제 화면에서 LINE Pay회원이 결제를 취소하면 이동하는 URL"
    cancelRedirectUrl: String!
    "reservation.code"
    code: Int!
    "사용자가 결제요청의 인증 후에 이동하는 가맹점 url"
    confirmRedirectUrl: String!
}

input LinePayRequestUrlInput {
    "LINE 앱 결제 화면에서 LINE Pay회원이 결제를 취소하면 이동하는 URL"
    cancelRedirectUrl: String!
    "사용자가 결제요청의 인증 후에 이동하는 가맹점 url"
    confirmRedirectUrl: String!
    "order.code, 필수값으로 바뀔예정"
    domainTransactionId: String
    "order.id, To be deprecated"
    id: ID
}

input LinkBannerAndBlogArgs {
    bannerCode: Int!
    blogCode: Int!
}

input LinkBannerAndProxyShopArgs {
    bannerCode: Int!
    proxyShopId: ID!
}

input LinkBannerAndSpotArgs {
    bannerCode: Int!
    spotCode: Int!
}

input LinkCategoryToBlogArgs {
    blogCode: Int!
    categoryCode: Int!
}

input LinkCategoryToSpotArgs {
    categoryCode: Int!
    spotCode: Int!
}

input LinkChildCategoryToParentArgs {
    childCode: Int!
    parentCode: Int!
}

input LinkMerchandiseAndPartnerShipInput {
    contractId: ID!
    merchandiseId: ID!
    partnershipId: ID!
}

input LinkProxyShopAndBlogInput {
    blogId: ID!
    proxyShopId: ID!
}

input LinkedAddressOptionInput {
    firstAddressId: ID!
    secondAddressId: ID
}

input LinkedIncomingFilter {
    status: IncomingMerchandiseStatusType
    warehouseId: ID
}

input LinkedPartnershipInput {
    contractId: ID!
    partnershipId: ID!
}

input LocalizedPriceArgs {
    currency: CurrencyType!
}

input MemberFilter {
    code: ID
    level: MemberRoleType
    "level과 levels 둘다 넣으면 levels로 동작합니다"
    levels: [MemberRoleType!]
    searchWord: String
}

input MemberLikeBlogFilter {
    language: LanguageType!
    types: [BlogType!]!
}

input MemberLikeBlogOrder {
    direction: OrderByDirectionType
    field: BlogLikeOrderType!
}

input MemberLikeBlogPageArgs {
    filter: MemberLikeBlogFilter!
    limit: Int!
    order: MemberLikeBlogOrder!
    page: Int!
}

input MemberLikeSpotFilter {
    language: LanguageType!
    types: [ReservationType!]!
}

input MemberLikeSpotOrder {
    direction: OrderByDirectionType
    field: MemberLikeSpotOrderType!
}

input MemberLikeSpotPageArgs {
    filter: MemberLikeSpotFilter!
    limit: Int!
    order: MemberLikeSpotOrder!
    page: Int!
}

input MemberLikedProxyShopFilter {
    proxyShopId: ID
}

input MemberLikedProxyShopOrder {
    direction: OrderByDirectionType!
    field: MemberLikeProxyShopOrderType!
}

input MemberLikedProxyShopPageInput {
    filter: MemberLikedProxyShopFilter
    limit: Int!
    order: MemberLikedProxyShopOrder
    page: Int!
}

input MemberOrder {
    direction: OrderByDirectionType
    field: BaseOrderType!
}

input MemberPageArgs {
    filter: MemberFilter
    limit: Int!
    order: MemberOrder
    page: Int!
}

input MemberPurchaseFilter {
    status: [ReservationStatusType!]
    types: [ReservationType!]!
}

input MemberPurchasePageArgs {
    filter: MemberPurchaseFilter!
    limit: Int!
    order: ReservationOrder!
    page: Int!
}

input MerchandiseCreateInput {
    brandId: ID!
    divisionSetId: ID!
    enName: String!
    imageUrl: URL!
    koName: String!
    linkedPartnershipInputs: [LinkedPartnershipInput!]
    optionPairs: [OptionPairCreateWithoutMerchandiseInput!]
    purchaseBasePrice: Int!
    purchaseUrl: String
    salesBasePrice: Int!
    type: MerchandiseType!
    weight: Int!
}

input MerchandiseFilter {
    contractId: ID
    createdAt: PeriodInput
    hasUnprocessedQuantity: Boolean
    isActive: Boolean
    partnershipId: ID
    search: String
    type: MerchandiseType
    warehouseId: ID
}

input MerchandiseInAndOutLinkFilter {
    createdAt: PeriodInput
    incomingMerchandise: MerchandiseInAndOutLinkIncomingFilter
    outgoingMerchandise: MerchandiseInAndOutLinkOutgoingFilter
    search: String
    type: MerchandiseInAndOutLinkType
}

input MerchandiseInAndOutLinkIncomingFilter {
    receivedAt: PeriodInput
    status: IncomingMerchandiseStatusType
    type: IncomingMerchandiseType
    warehouseId: ID
}

input MerchandiseInAndOutLinkOrder {
    direction: OrderByDirectionType!
    field: MerchandiseInAndOutLinkOrderType!
}

input MerchandiseInAndOutLinkOutgoingFilter {
    status: OutgoingMerchandiseStatusType
    type: OutgoingMerchandiseType
    warehouseId: ID
}

input MerchandiseInAndOutLinkPageInput {
    filter: MerchandiseInAndOutLinkFilter
    limit: Int!
    order: MerchandiseInAndOutLinkOrder
    page: Int!
}

input MerchandiseOrder {
    direction: OrderByDirectionType!
    field: MerchandiseOrderType!
}

input MerchandisePageInput {
    filter: MerchandiseFilter
    limit: Int!
    order: MerchandiseOrder
    page: Int!
}

input MerchandiseUpdateInput {
    id: ID!
    imageUrl: URL
    purchaseBasePrice: Int
    purchaseUrl: String
    salesBasePrice: Int
}

input MiddleCategoryListArg {
    "default 전체 middle category"
    brandId: ID
    "default 전체기간"
    createdAt: PeriodInput
    "현재 이벤트가 진행중인 매대를 출력하는 필터, null일떄에는 모든 매대에 대해 브랜드를 가져온다"
    hasEvent: Boolean
    language: LanguageType!
    "default 전체 리스트"
    limit: Int
}

input MostViewedProxyShopsArgs {
    currency: CurrencyType!
    language: LanguageType!
    period: PeriodInput!
    size: Int!
}

input MoveMerchandiseToOtherWarehouseInput {
    merchandiseId: ID!
    quantity: Int!
    sourceWarehouseId: ID!
    targetWarehouseId: ID!
}

input MultiSearchArgs {
    currency: CurrencyType!
    "default: 200, max: 1000"
    excerptLength: Int = 200
    keyword: String!
    language: LanguageType!
    "default: 6, max: 20"
    limit: Int = 6
}

input NameInput {
    korean: String!
    local: String!
}

input NonSaleOutgoingMerchandiseCreateInput {
    description: String
    merchandiseId: ID!
    quantity: Int!
    saleAmount: Float!
    warehouseId: ID!
}

input NotificationFilter {
    isRead: Boolean
    search: String
    type: NotificationType
}

input NotificationOrder {
    direction: OrderByDirectionType!
    field: NotificationOrderType!
}

input NotificationPageArgs {
    filter: NotificationFilter
    limit: Int!
    order: NotificationOrder
    page: Int!
}

input OptionPairCreateWithoutMerchandiseInput {
    nameId: ID!
    valueId: ID!
}

input OrderCreateInput {
    currency: CurrencyType!
    language: LanguageType!
    orderedMerchandises: [OrderedMerchandiseInput!]!
    ordererEmail: String!
    ordererName: String!
    ordererPhoneNumber: String!
    ordererSNS: String!
    platform: String!
    recipientEmail: String!
    recipientEnName: String!
    recipientLocalName: String!
    recipientPhoneNumber: String!
    shippingInfo: ShippingInfoInput!
}

input OrderExcelInput {
    createdAt: PeriodInput
    paidDate: PeriodInput
}

input OrderFilter {
    createdAt: PeriodInput
    merchandiseId: ID
    paidDate: PeriodInput
    search: String
    shippingPolicyId: ID
    status: OrderStatusType
    warehouseId: ID
}

input OrderForNonUserInput {
    orderCode: String!
}

input OrderOrder {
    direction: OrderByDirectionType!
    field: OrderOrderType!
}

input OrderPageInput {
    filter: OrderFilter
    limit: Int!
    order: OrderOrder
    page: Int!
}

input OrderRecipientInfoUpdateForNonUserInput {
    code: String!
    recipientEmail: String
    recipientEnName: String
    recipientLocalName: String
    recipientPhoneNumber: String
    shippingAddress: String
    shippingZipcode: String
}

input OrderRecipientInfoUpdateInput {
    id: ID!
    recipientEmail: String
    recipientEnName: String
    recipientLocalName: String
    recipientPhoneNumber: String
    shippingAddress: String
    shippingZipcode: String
}

input OrderShippingFilter {
    createdAt: PeriodInput
    hasUnprocessedStatus: Boolean
    isRocket: Boolean
    merchandiseId: ID
    paidDate: PeriodInput
    search: String
    status: OrderShippingStatusType
    warehouseId: ID
}

input OrderShippingForNonUserInput {
    orderShippingCode: String!
}

input OrderShippingOrder {
    direction: OrderByDirectionType!
    field: OrderShippingOrderFieldType!
}

input OrderShippingPageArgs {
    filter: OrderShippingFilter
    limit: Int!
    order: OrderShippingOrder
    page: Int!
}

input OrderUpdateInput {
    description: String
    id: ID!
    shippingDescription: String
}

input OrderedMerchandiseInput {
    proxyShopHasMerchandiseId: ID!
    "필수 값이 될 예정"
    proxyShopId: ID
    quantity: Int!
}

input OutgoingMerchandiseFilter {
    createdAt: PeriodInput
    linkedIncomingFilter: LinkedIncomingFilter
    merchandiseType: MerchandiseType
    search: String
    status: OutgoingMerchandiseStatusType
    type: OutgoingMerchandiseType
    warehouseId: ID
}

input OutgoingMerchandiseOrder {
    direction: OrderByDirectionType!
    field: OutgoingMerchandiseOrderType!
}

input OutgoingMerchandisePageInput {
    filter: OutgoingMerchandiseFilter
    limit: Int!
    order: OutgoingMerchandiseOrder
    page: Int!
}

input OverwriteDesktopImageToAdvertisementTransArgs {
    advertisementCode: Int!
    desktopImageUrl: URL!
    language: LanguageType!
}

input OverwriteImageToAdvertisementTransArgs {
    advertisementCode: Int!
    imageUrl: URL!
    language: LanguageType!
}

input OverwriteMobileImageToAdvertisementTransArgs {
    advertisementCode: Int!
    language: LanguageType!
    mobileImageUrl: URL!
}

input OverwriteTabletImageToAdvertisementTransArgs {
    advertisementCode: Int!
    language: LanguageType!
    tabletImageUrl: URL!
}

input PartnershipFilter {
    businessType: PartnershipBusinessType
    createdAt: PeriodArgs
    isActive: Boolean
    mainCategory: PartnershipMainCategoryType
    search: String
    subCategory: PartnershipSubCategoryType
}

input PartnershipOrder {
    direction: OrderByDirectionType
    field: PartnershipOrderType!
}

input PartnershipPageArgs {
    filter: PartnershipFilter
    limit: Int!
    order: PartnershipOrder
    page: Int!
}

input PaymentTransactionPageInput {
    limit: Int!
    page: Int!
}

input PercentRefundPolicyArgs {
    baseDate: Int!
    percent: Int!
}

input PeriodArgs {
    end: Date!
    start: Date!
}

input PeriodInput {
    end: Date!
    start: Date!
}

input PointHistoryFilter {
    currency: CurrencyType!
}

input PointHistoryOrder {
    direction: OrderByDirectionType!
    field: PointHistoryOrderType!
}

input PointHistoryPageArgs {
    filter: PointHistoryFilter!
    limit: Int!
    order: PointHistoryOrder
    page: Int!
}

input PossibleDatesArgs {
    "YYYY-MM"
    date: Date!
    spotCode: Int!
}

input PossibleTimesArgs {
    "YYYY-MM-DD HH:mm:ss"
    date: Date!
    spotCode: Int!
}

input PreSignedUrlArgs {
    code: Int
    domain: FileDomainType!
    filename: String!
}

input PreSignedUrlBrandInput {
    brandId: ID
    fileName: String!
}

input PreSignedUrlForLanguageCourseHasRequiredDocumentTemplateFileArgs {
    "파일명"
    fileName: String!
    "LanguageCourseHasRequiredDocument.id"
    id: ID!
}

"어학당 메인 이미지 변경용 preSignedUrl 획득"
input PreSignedUrlForLanguageCourseMainImageArgs {
    "파일명"
    fileName: String!
    "LanguageCourse.id"
    id: ID!
}

input PreSignedUrlForLanguageCourseRegistrationRequiredDocumentArgs {
    "파일명"
    fileName: String!
    "LanguageCourseRegistration.id"
    id: ID!
}

input PreSignedUrlForMerchandiseInput {
    fileName: String!
}

input PreSignedUrlForRequestMerchandiseQuoteInput {
    fileName: String!
}

input PreSignedUrlProxyShopInput {
    fileName: String!
    proxyShopId: ID!
}

input ProxyShopCategoryCreateInput {
    proxyShopId: ID!
    proxyTagId: ID!
}

input ProxyShopCategoryDeleteInput {
    proxyShopId: ID!
    proxyTagId: ID!
}

input ProxyShopCreateInput {
    brandId: ID!
    categoryIds: [ID!]!
    koTitle: String!
    language: LanguageType!
    localTitle: String!
}

input ProxyShopEventFilter {
    language: LanguageType
    period: PeriodInput
    search: String
    status: ProxyShopEventStatus
    type: ProxyShopEventType
}

input ProxyShopEventOrder {
    direction: OrderByDirectionType!
    field: ProxyShopEventOrderType!
}

input ProxyShopEventPageArgs {
    filter: ProxyShopEventFilter
    limit: Int!
    order: ProxyShopEventOrder
    page: Int!
}

input ProxyShopFilter {
    brandIds: [ID!]
    "유저페이지에서 사용하는 카테고리 필터, OR 조건 적용"
    categoryIds: [ID!]
    "어드민페이지에서 사용하는 카테고리 필터, AND 조건 적용"
    categoryIdsForAdmin: [ID!]
    createdAt: PeriodInput
    hasEvent: Boolean
    isPublish: Boolean
    isRecommend: Boolean
    "빠른 배송인지 아닌지 여부 filter, null일시 모든 상태를 포함(빠른배송, 빠른배송이 아닌 배송)"
    isRocket: Boolean
    language: LanguageType
    merchandiseId: ID
    search: String
}

input ProxyShopHasExcludedShippingPolicyCreateInput {
    proxyShopId: ID!
    shippingPolicyId: ID!
}

input ProxyShopHasExcludedShippingPolicyDeleteInput {
    proxyShopId: ID!
    shippingPolicyId: ID!
}

input ProxyShopHasHashtagCreateInput {
    name: String!
    proxyShopId: ID!
}

input ProxyShopHasHashtagDeleteInput {
    hashtagId: ID!
    proxyShopId: ID!
}

input ProxyShopHasMerchandiseChangePriorityInput {
    proxyShopHasMerchandiseId: ID!
    proxyShopId: ID!
    targetPriority: Int!
}

input ProxyShopHasMerchandiseCreateInput {
    localName: String!
    merchandiseId: ID!
    "원가(할인전 가격)"
    originalPrice: Int
    proxyShopId: ID!
    "판매가(할인가)"
    salePrice: Int!
}

input ProxyShopHasMerchandiseDeleteInput {
    proxyShopHasMerchandiseId: ID!
    proxyShopId: ID!
}

input ProxyShopHasMerchandiseUpdateInput {
    id: ID!
    localName: String
    originalPrice: Int
    salePrice: Int
}

input ProxyShopImageChangePriorityInput {
    proxyShopId: ID!
    proxyShopImageId: ID!
    targetPriority: Int!
}

input ProxyShopImageCreateInput {
    altText: String!
    proxyShopId: ID!
    url: URL!
}

input ProxyShopImageDeleteInput {
    proxyShopId: ID!
    proxyShopImageId: ID!
}

input ProxyShopImageUpdateInput {
    altText: String
    proxyShopImageId: ID!
}

input ProxyShopOrder {
    direction: OrderByDirectionType!
    field: ProxyShopOrderType!
}

input ProxyShopPageInput {
    filter: ProxyShopFilter
    limit: Int!
    order: ProxyShopOrder
    page: Int!
}

input ProxyShopReviewCreateInput {
    content: String!
    "최대 세개만 등록할 수 있습니다."
    images: [ProxyShopReviewImageCreateInput!]
    language: LanguageType
    merchandiseId: ID!
    orderShippingId: ID!
    proxyShopId: ID!
    starRating: Float!
}

input ProxyShopReviewFilter {
    hasImage: Boolean
    merchandiseIds: [ID!]
    proxyShopId: ID
    userId: ID
}

input ProxyShopReviewImageAddInput {
    imageUrl: URL!
    proxyShopReviewId: ID!
}

input ProxyShopReviewImageChangePriorityInput {
    proxyShopReviewId: ID!
    proxyShopReviewImageId: ID!
    targetPriority: Int!
}

input ProxyShopReviewImageCreateInput {
    imageUrl: URL!
    priority: Int!
}

input ProxyShopReviewImageDeleteInput {
    proxyShopReviewId: ID!
    proxyShopReviewImageId: ID!
}

input ProxyShopReviewOrder {
    direction: OrderByDirectionType!
    field: ProxyShopReviewOrderType!
}

input ProxyShopReviewPageInput {
    filter: ProxyShopReviewFilter
    limit: Int!
    order: ProxyShopReviewOrder
    page: Int!
}

input ProxyShopReviewUpdateInput {
    content: String
    proxyShopReviewId: ID!
    starRating: Float
}

input ProxyShopUpdateInput {
    brandId: ID
    content: String
    id: ID!
    koTitle: String
    localTitle: String
    precaution: String
    videoUrl: String
}

input ProxyTagChangePriorityInput {
    proxyTagId: ID!
    targetPriority: Int!
    type: ProxyTagType!
}

input ProxyTagCreateInput {
    imagePath: URL
    translations: [ProxyTagTranslationInput!]!
    type: ProxyTagType!
}

input ProxyTagFilter {
    "브랜드샾 검색 관련 추가 필터, true일시 해당 브랜드가 직구매대에 연결 되어있는 것들만 필터링 한다"
    hasLinkedProxyShop: Boolean
    "이미지가 등록되어있는 브랜드 여부"
    isManaged: Boolean
    isRecommend: Boolean
    language: LanguageType
    name: String
    searchChar: SearchCharacterType
    type: ProxyTagType
}

input ProxyTagOrder {
    direction: OrderByDirectionType!
    field: ProxyTagOrderType!
}

input ProxyTagPageInput {
    filter: ProxyTagFilter
    limit: Int!
    order: ProxyTagOrder
    page: Int!
}

input ProxyTagRelationCreateInput {
    childId: ID!
    parentId: ID!
}

input ProxyTagRelationDeleteInput {
    childId: ID!
    parentId: ID!
}

input ProxyTagTranslationInput {
    language: LanguageType!
    name: String!
}

input ProxyTagUpdateInput {
    id: ID!
    translations: [ProxyTagTranslationInput!]
}

input ReceiveMovedMerchandisesInput {
    outgoingMerchandiseId: ID!
}

input RecommendedBlogsArgs {
    categoryCodes: [Int!]
    cityCategoryCode: Int
    "현재 보고있는 블로그 코드"
    currentBlogCode: Int
    "제외할 블로그 코드 (ex. 현재 보고있는 블로그 코드)"
    excludeBlogCodes: [Int!]
    language: LanguageType!
    "default: 20"
    limitSize: Int = 20
    "default: 5, max: 20"
    size: Int = 5
    types: [BlogType!]
}

input RecommendedProxyShopInput {
    brandId: ID
    categoryId: ID
    currentProxyShopId: ID
    language: LanguageType!
    "default 20"
    limit: Int = 20
}

input RecommendedRelatedProxyShopInput {
    currentProxyShopId: ID!
    "default 10"
    limit: Int = 10
    "default 전체기간"
    period: PeriodInput
}

input RecommendedSpotsArgs {
    categoryCodes: [Int!]
    cityCategoryCode: Int
    "현재 보고있는 스팟 코드"
    currentSpotCode: Int
    "제외할 스팟 코드 (ex. 현재 보고있는 스팟 코드)"
    excludeSpotCodes: [Int!]
    language: LanguageType!
    "default: 20"
    limitSize: Int = 20
    "default: 5, max: 20"
    size: Int = 5
    spotType: [ReservationType!]
}

input RefundReservationArgs {
    amount: Float!
    reservationCode: Int!
}

input RefundReservationForNonUserArgs {
    reservationCode: String!
}

input RegisterFcmTokenInfoArgs {
    fcmToken: String!
    "기기의 기본 언어 값"
    language: LanguageType!
    "user device id"
    udid: String!
}

input RemoveBlogFromSpotArgs {
    blogCode: Int!
    spotCode: Int!
}

input RemoveCurrencyExchangePriceArgs {
    currency: String!
    exchangeCode: Int!
}

input RemoveFileToLanguageCourseRegistrationRequiredDocumentArgs {
    "File.id"
    fileId: ID!
    "LanguageCourseRegistration.id"
    registrationId: ID!
    "LanguageCourseRegistrationRequiredDocument.id"
    registrationRequiredDocumentId: ID!
}

input RemoveHashtagFromLanguageCourseTranslationArgs {
    name: String!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input RemoveIgnoredPushMessageTypeArgs {
    types: [NotificationMessageType!]!
    "user device id"
    udid: String!
}

input RemovePercentRefundPolicyArgs {
    percentRefundPolicyIndex: Int!
    reservationPolicyCode: Int!
}

input RemoveProxyShopFromAdvertisementArgs {
    advertisementCode: Int!
    language: LanguageType!
}

input RemoveRemarkFromReservationPolicyArgs {
    remarkCode: Int!
    reservationPolicyCode: Int!
}

input RemoveRequiredInfoToReservationPolicyArgs {
    requiredInfoCode: Int!
    reservationPolicyCode: Int!
}

input RemoveSpotFromContractArgs {
    contractCode: Int!
    spotCode: Int!
}

input RemoveSpotFromCouponArgs {
    couponCode: Int!
    spotCode: Int!
}

input RemoveSpotFromVoucherTemplateArgs {
    spotCode: Int!
    voucherTemplateCode: Int!
}

input RemoveTagFromAdvertisementArgs {
    advertisementCode: Int!
    tagCode: Int!
}

input RemoveTagToLanguageCourseTranslationInput {
    "LanguageCourseTag.id"
    tagId: ID!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input RemoveTripHashtagFromBlogTransArgs {
    blogTransCode: Int!
    hashtagCode: Int!
}

input RemoveTripHashtagFromSpotTransArgs {
    hashtagCode: Int!
    spotTransCode: Int!
}

input RemoveTypeFromBlogArgs {
    blogCode: Int!
    type: BlogType!
}

input RequestMerchandiseQuoteCreateInput {
    language: LanguageType!
    requestedMerchandiseCreateInputs: [RequestedMerchandiseCreateInput!]!
    userCountry: CountryType!
    userEmail: String!
    userName: String!
    userPhone: String!
    userSNS: String!
}

input RequestMerchandiseQuoteFilter {
    createdAt: PeriodInput
    id: ID
    search: String
    status: RequestMerchandiseQuoteStatusType
}

input RequestMerchandiseQuoteOrder {
    direction: OrderByDirectionType!
    field: RequestMerchandiseQuoteOrderType!
}

input RequestMerchandiseQuotePageInput {
    filter: RequestMerchandiseQuoteFilter
    limit: Int!
    order: RequestMerchandiseQuoteOrder
    page: Int!
}

input RequestMerchandiseQuoteUpdateInput {
    description: String
    id: ID!
}

input RequestResetPasswordArgs {
    email: String!
    language: LanguageType!
    "웹 주소 (ex. https://www.creatrip.com)"
    webHost: String!
}

input RequestedMerchandiseCreateInput {
    images: [RequestedMerchandiseImageCreateInput!]!
    merchandiseName: String!
    merchandiseOption: String!
    quantity: Int!
    relatedUrl: String!
}

input RequestedMerchandiseImageCreateInput {
    imageUrl: URL!
}

input RequiredInfoFilter {
    isDefault: Boolean
    isFix: Boolean
    search: String
}

input RequiredInfoOrder {
    direction: OrderByDirectionType
    field: BaseOrderType!
}

input RequiredInfoPageArgs {
    filter: RequiredInfoFilter
    limit: Int!
    order: RequiredInfoOrder
    page: Int!
}

input ReservationFilter {
    createdAt: PeriodArgs
    paymentDate: PeriodArgs
    reservationDate: PeriodArgs
    search: String
    spotCodes: [Int!]
    status: ReservationStatusType
}

input ReservationForNonUserArgs {
    reservationCode: String!
}

input ReservationInfoCreateInput {
    code: Int!
    koName: String
    name: String
    value: String!
}

input ReservationOrder {
    direction: OrderByDirectionType
    field: ReservationOrderType!
}

input ReservationPageArgs {
    filter: ReservationFilter
    limit: Int!
    order: ReservationOrder
    page: Int!
}

input ReservationReviewCreateArgs {
    "댓글 내용"
    content: String!
    "최대 세개만 등록할 수 있습니다."
    images: [SpotReviewImageCreateArgs!]
    language: LanguageType!
    "대댓글 작성시, 부모댓글의 code"
    parentCode: Int
    "pk"
    reservationCode: Int!
    spotCode: Int!
    starRating: Int!
}

input ReservedItemCreateInput {
    koreanName: String
    localName: String
    quantity: Int!
    showName: String
    spotItemCode: Int!
}

input ResetOrderShippingInput {
    orderShippingId: ID!
    orderedMerchandiseIds: [ID!]!
}

input ResetPasswordArgs {
    emailAuthCode: String!
    password: String!
}

input SameNameProxyShopInput {
    koTitle: String!
    language: LanguageType!
}

input SearchBlogArgs {
    filter: SearchBlogFilter!
    limit: Int!
    order: SearchBlogOrder
    page: Int!
}

input SearchBlogFilter {
    categoryCodes: [Int!]
    "default: 200, max: 1000"
    excerptLength: Int = 200
    "어권 별 분리"
    isDefault: Boolean
    "어권 별 분리"
    isMain: Boolean
    "어권 별 분리"
    isRecommend: Boolean
    "mandatory"
    language: LanguageType!
    search: String
    types: [BlogType!]
}

input SearchBlogOrder {
    direction: OrderByDirectionType!
    field: SearchBlogOrderFieldType!
}

input SearchProxyShopArgs {
    filter: SearchProxyShopFilter!
    limit: Int!
    order: SearchProxyShopOrder
    page: Int!
}

input SearchProxyShopFilter {
    currency: CurrencyType!
    "mandatory"
    language: LanguageType!
    search: String
}

input SearchProxyShopOrder {
    direction: OrderByDirectionType!
    field: SearchProxyShopOrderFieldType!
}

input SearchSpotArgs {
    filter: SearchSpotFilter!
    limit: Int!
    order: SearchSpotOrder
    page: Int!
}

input SearchSpotFilter {
    categoryCodes: [Int!]
    currency: CurrencyType!
    geoBoundingBox: GeoBoundingBox
    isRecommend: Boolean
    isReservable: Boolean
    language: LanguageType!
    search: String
    types: [ReservationType!]
}

input SearchSpotOrder {
    direction: OrderByDirectionType!
    field: SearchSpotOrderFieldType!
}

input SearchSuggestArgs {
    key: String!
    language: LanguageType!
    types: [SearchSuggestType!] = []
}

input SelectSpotItemArgs {
    isReservable: Boolean
    isRoot: Boolean
}

input SendSupportMailArgs {
    content: String!
    email: String!
    extraInfo: String
    name: String!
}

input SendTestNotificationArgs {
    language: LanguageType
    message: String!
    messageType: NotificationMessageType!
    relationId: Int!
    title: String!
}

input SetBlogTransToTipArgs {
    blogTransCode: Int!
    tipCode: Int!
}

input SetBrandImageInput {
    brandId: ID!
    imageUrl: URL!
}

input SetCityCategoryToLanguageCourseArgs {
    cityCategoryId: ID!
    "LanguageCourse.id"
    courseId: ID!
}

input SetDetailLocationCategoryToLanguageCourseArgs {
    "LanguageCourse.id"
    courseId: ID!
    detailLocationCategoryId: ID!
}

input SetFaqActiveStatusArgs {
    id: ID!
    status: Boolean!
}

input SetGroupToLanguageCourseRequiredInfoArgs {
    "LanguageCourseRequiredInfoGroup.id"
    groupId: ID!
    "LanguageCourseRequiredInfo.id"
    id: ID!
}

input SetImageToCouponArgs {
    code: Int!
    url: URL!
}

"여대여부 바꾸는 API"
input SetLanguageCourseIsFemaleCollegeStatus {
    "LanguageCourse.id"
    id: ID!
    "isFemaleCollegeStatus"
    status: Boolean!
}

input SetLanguageCourseLikeStatusArgs {
    "LanguageCourse.id"
    id: ID!
    status: Boolean!
}

input SetLanguageCoursePublishStatusArgs {
    id: ID!
    status: Boolean!
}

input SetLanguageCourseRequiredInfoRequiredStatusInput {
    "LanguageCourseRequiredInfo.id"
    id: ID!
    "이 값으로 설정됩니다"
    isRequired: Boolean!
}

input SetMainImageToBlogTransArgs {
    code: Int!
    mainImageUrl: URL!
}

input SetMainImageToLanguageCourseArgs {
    "LanguageCourse.id"
    courseId: ID!
    mainImageUrl: ImageUrl!
}

input SetMainLinkedMerchandiseInput {
    proxyShopId: ID!
    targetLinkedMerchandiseId: ID!
}

input SetMainProxyShopImageInput {
    proxyShopId: ID!
    targetProxyShopImageId: ID!
}

input SetMainSpotImageArgs {
    imageCode: Int!
    spotCode: Int!
}

input SetMainSpotItemArgs {
    itemCode: Int!
    spotCode: Int!
}

input SetMainSpotItemImageArgs {
    imageCode: Int!
    spotItemCode: Int!
}

input SetManagerToCouponArgs {
    code: Int!
    managerCode: Int!
}

input SetManagerToLanguageCourseTranslationArgs {
    managerId: ID!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input SetManagerToPartnershipArgs {
    managerCode: Int!
    partnershipCode: Int!
}

input SetManagerToTipArgs {
    managerCode: Int!
    tipCode: Int!
}

input SetOpeningHoursArgs {
    openingHours: [BusinessHourArgs!]!
    spotCode: Int!
}

input SetPartnerToPartnershipArgs {
    partnerCode: Int!
    partnershipCode: Int!
}

input SetPartnershipToCouponArgs {
    couponCode: Int!
    partnershipCode: Int!
}

input SetPartnershipToLanguageCourseArgs {
    "LanguageCourse.id"
    courseId: ID!
    partnershipId: ID!
}

input SetPrecautionToReservationArgs {
    precaution: String!
    reservationCode: Int!
}

input SetProxyShopRocketStatusInput {
    id: ID!
    isRocket: Boolean!
}

input SetPsdToCouponArgs {
    code: Int!
    url: URL!
}

input SetRequiredDocumentToLanguageCourseTranslationArgs {
    "LanguageCourseRequiredDocument.id"
    documentId: ID!
    status: Boolean!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input SetRequiredInfoToLanguageCourseTranslationArgs {
    infoId: ID!
    status: Boolean!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input SetReservableTimesArgs {
    reservableTimes: [BusinessHourArgs!]!
    reservationPolicyCode: Int!
}

input SetTipImageArgs {
    imageUrl: URL!
    tipCode: Int!
}

input SetVoucherTemplateManagerArgs {
    memberCode: Int!
    voucherTemplateCode: Int!
}

input SetWarehouseActiveStatusInput {
    id: ID!
    isActive: Boolean!
}

input ShippingAddressCreateInput {
    address: String!
    detailAddress: String
    name: String!
    postalCode: String!
    shippingPolicyId: ID!
}

input ShippingInfoInput {
    shippingAddress: String!
    shippingOptionalInfo: String
    shippingPolicyId: ID!
    shippingRequest: String
    shippingZipcode: String!
}

input ShippingPolicyCreateInput {
    cnName: String!
    country: CountryType!
    enName: String!
    hkName: String!
    jpName: String!
    koName: String!
    thName: String!
    twName: String!
    viName: String!
    warehouseId: ID!
}

input ShippingPolicyFilter {
    country: CountryType
    isActive: Boolean
    "전체 배송 정책에서 해당 매대들의 예외 배송정책을 찾아서 제외시켜줌"
    proxyShopIds: [ID!]
    search: String
}

input ShippingPolicyOrder {
    direction: OrderByDirectionType!
    field: ShippingPolicyOrderType!
}

input ShippingPolicyPageInput {
    filter: ShippingPolicyFilter
    limit: Int!
    order: ShippingPolicyOrder
    page: Int!
}

input ShippingPolicyUpdateInput {
    cnName: String
    enName: String
    hkName: String
    id: ID!
    jpName: String
    koName: String
    thName: String
    twName: String
    viName: String
}

input ShippingSiteCreateInput {
    code: String!
    description: String
    firstAddressId: ID!
    fullAddress: String!
    name: String!
    phone: String!
    secondAddressId: ID!
    shippingPolicyId: ID!
    thirdAddressId: ID!
}

input ShippingSiteFilter {
    firstAddressId: ID
    search: String
    secondAddressId: ID
    shippingPolicyId: ID
    thirdAddressId: ID
}

input ShippingSiteOrder {
    direction: OrderByDirectionType!
    field: ShippingSiteOrderType!
}

input ShippingSitePageInput {
    filter: ShippingSiteFilter
    limit: Int!
    order: ShippingSiteOrder
    page: Int!
}

input ShippingSiteUpdateInput {
    code: String
    description: String
    firstAddressId: ID
    fullAddress: String
    id: ID!
    name: String
    phone: String
    secondAddressId: ID
    thirdAddressId: ID
}

input SignInArgs {
    id: String!
    password: String!
}

input SignUpArgs {
    countryCode: String
    countryType: CountryType
    email: String!
    id: String
    language: LanguageType!
    name: String!
    nickname: String!
    password: String!
}

input SocialInfoArgs {
    "Creatrip 타입의 경우엔 로그인을 통해 발급받은 jwt, 타 소셜 타입의 경우에는 소셜 로그인용 token"
    token: String!
    type: SocialType!
}

input SpecialReservableTimeArgs {
    period: PeriodArgs!
    reservableTimes: [BusinessHourArgs!]!
}

input SplitOrderShippingInput {
    orderId: ID!
    "배송 처리 따로 할 상품 IDs"
    orderedMerchandiseIds: [ID!]!
    "상품을 분리 할 주문 배송 ID"
    sourceOrderShippingId: ID!
    "배송 처리를 할 창고 ID"
    warehouseId: ID!
}

input SpotEventFilter {
    period: PeriodArgs
    search: String
    spotCode: Int
    status: SpotEventStatusType
    type: SpotEventType
}

input SpotEventOrder {
    direction: OrderByDirectionType
    field: SpotEventOrderFieldType!
}

input SpotEventPageArgs {
    filter: SpotEventFilter
    limit: Int!
    order: SpotEventOrder
    page: Int!
}

input SpotFilter {
    "OR 조건으로 동작합니다"
    categories: [Int!]
    cityCategory: Int
    isPublish: Boolean
    isRecommend: Boolean
    isReservable: Boolean
    language: LanguageType!
    name: String
    search: String
    types: [ReservationType!]
}

input SpotMostViewedArgs {
    filter: SpotMostViewedFilter!
    limit: Int!
    order: ViewedCountOrder
    page: Int!
}

input SpotMostViewedFilter {
    categoryCodes: [Int!]
    cityCategoryCode: Int
    language: LanguageType!
    period: PeriodArgs!
    size: Int
    types: [ReservationType!]
}

input SpotOrder {
    direction: OrderByDirectionType
    field: SpotOrderType!
}

input SpotPageArgs {
    filter: SpotFilter!
    limit: Int!
    order: SpotOrder
    page: Int!
}

input SpotReviewCreateArgs {
    "댓글 내용"
    content: String!
    "최대 세개만 등록할 수 있습니다."
    images: [SpotReviewImageCreateArgs!]
    language: LanguageType!
    "대댓글 작성시, 부모댓글의 code"
    parentCode: Int
    spotCode: Int!
    starRating: Int!
}

input SpotReviewFilter {
    hasImage: Boolean
    spotCode: Int!
}

input SpotReviewImageAddArgs {
    imageUrl: URL!
    spotReviewCode: Int!
}

input SpotReviewImageCreateArgs {
    imageUrl: URL!
}

input SpotReviewImageDeleteArgs {
    spotReviewCode: Int!
    spotReviewImageCode: Int!
}

input SpotReviewOrder {
    direction: OrderByDirectionType!
    field: SpotReviewOrderType!
}

input SpotReviewPageArgs {
    filter: SpotReviewFilter
    limit: Int!
    order: SpotReviewOrder
    page: Int!
}

input SpotReviewUpdateArgs {
    "댓글 내용"
    content: String!
    language: LanguageType!
    reviewCode: Int!
    starRating: Int
}

input TimePeriodArgs {
    "HH:mm"
    end: String!
    index: Int
    "HH:mm"
    start: String!
}

input TipFilter {
    isActive: Boolean
    language: LanguageType!
    search: String
}

input TipOrder {
    direction: OrderByDirectionType = DESC
    field: TipOrderFieldType = PRIORITY
}

input TipPageArgs {
    filter: TipFilter!
    limit: Int!
    order: TipOrder = {field: PRIORITY, direction: DESC}
    page: Int!
}

input ToggleAdvertisementTransStatusArgs {
    advertisementCode: Int!
    language: LanguageType!
    statusType: AdvertisementTransStatusType!
}

input ToggleBlogTransStatusArgs {
    code: Int!
    statusType: BlogTransStatusType!
}

input ToggleContactStatusArgs {
    code: Int!
    statusType: ContractStatusType!
}

input ToggleExchangeStatusArgs {
    code: Int!
    statusType: ExchangeStatusType!
}

input TogglePartnershipStatusArgs {
    code: Int!
    statusType: PartnershipStatusType!
}

input ToggleRequiredInfoStatusArgs {
    code: Int!
    statusType: RequiredInfoStatusType!
}

input ToggleReservationPolicyStatusArgs {
    code: Int!
    statusType: ReservationPolicyStatusType!
}

input ToggleSpotItemStatusArgs {
    code: Int!
    statusType: SpotItemStatusType!
}

input ToggleSpotStatusArgs {
    code: Int!
    statusType: SpotStatusType!
}

input ToggleSpotTransStatusArgs {
    code: Int!
    statusType: SpotTransStatusType!
}

input TripHashtagFilter {
    isRecommend: Boolean
    language: LanguageType!
    name: String
}

input TripHashtagOrder {
    direction: OrderByDirectionType = DESC
    field: TripHashtagOrderField!
}

input TripHashtagPageArgs {
    filter: TripHashtagFilter!
    limit: Int!
    order: TripHashtagOrder
    page: Int!
}

input UnlinkBannerAndBlogArgs {
    bannerCode: Int!
    blogCode: Int!
}

input UnlinkBannerAndProxyShopArgs {
    bannerCode: Int!
    proxyShopId: ID!
}

input UnlinkBannerAndSpotArgs {
    bannerCode: Int!
    spotCode: Int!
}

input UnlinkCategoryFromBlogArgs {
    blogCode: Int!
    categoryCode: Int!
}

input UnlinkCategoryFromSpotArgs {
    categoryCode: Int!
    spotCode: Int!
}

input UnlinkChildCategoryFromParentArgs {
    childCode: Int!
    parentCode: Int!
}

input UnlinkMerchandiseAndPartnerShipInput {
    contractId: ID!
    merchandiseId: ID!
    partnershipId: ID!
}

input UnlinkProxyShopAndBlogInput {
    blogId: ID!
    proxyShopId: ID!
}

input UnsetManagerFromPartnershipArgs {
    partnershipCode: Int!
}

input UnsetPartnerFromPartnershipArgs {
    partnershipCode: Int!
}

input UpdateAdvertisementArgs {
    advertiserName: String
    code: Int!
    period: PeriodArgs
}

input UpdateAdvertisementTransArgs {
    advertisementCode: Int!
    description: String
    language: LanguageType!
    linkUrl: String
    optionalDescription: String
    "가격 정보 입력"
    priceDescription: Int
    title: String
}

input UpdateBannerArgs {
    advertiserName: String
    bannerCode: Int!
    extraDescription: String
    name: String
    period: PeriodArgs
}

input UpdateCategoryArgs {
    categoryCode: Int!
    translations: [CategoryTransArgs!]!
}

input UpdateCategoryPriorityArgs {
    sourcePriority: Int!
    targetPriority: Int!
    type: CategoryType!
}

input UpdateContractArgs {
    code: Int!
    "YYYY-MM-DD"
    contractEndDate: Date
    "YYYY-MM-DD"
    contractStartDate: Date
    contractType: ContractType
    "default false"
    isAutomaticExtension: Boolean
    "default false"
    isSettlement: Boolean
    "list of day"
    settlementDates: [Int!]
    settlementType: SettlementType
    specialNote: String
}

input UpdateCurrencyExchangePricesArgs {
    currencyExchangePrices: [CurrencyExchangePriceArgs!]!
    exchangeCode: Int!
}

input UpdateDiscountIndividualProxyShopEventArgs {
    eventPrice: Int!
    individualProxyShopEventId: ID!
    proxyShopEventId: ID!
}

input UpdateDiscountIndividualSpotEventArgs {
    baseValue: Int!
    eventCode: Int!
    individualEventCode: Int!
}

input UpdateDiscountSpotEventArgs {
    code: Float!
    description: String
    period: PeriodArgs
}

input UpdateExchangeWithTransArgs {
    address: String
    code: Int!
    translations: [ExchangeTransInput!]
}

input UpdateExpectedArrivalToOrderShippingInput {
    expectedArrival: Date!
    id: ID!
}

input UpdateFaqArgs {
    id: ID!
    mainCategoryId: Int
    middleCategoryId: Int
    translations: [FaqTransArgs!]
}

input UpdateFaqPriorityArgs {
    middleCategoryId: Int!
    sourcePriority: Int!
    targetPriority: Int!
}

input UpdateGetFreeProxyShopEventArgs {
    description: String
    getFree: GetFreeInput
    id: ID!
    limitCount: Int
    period: PeriodInput
}

input UpdateGetFreeSpotEventArgs {
    baseValue: Int
    code: Float!
    description: String
    period: PeriodArgs
    subValue: Int
}

input UpdateGiftIndividualProxyShopEventArgs {
    individualProxyShopEventId: ID!
    minimumOrderQuantity: Int!
    proxyShopEventId: ID!
}

input UpdateGiftProxyShopEventArgs {
    description: String
    eventGift: EventGiftInput
    id: ID!
    limitCount: Int
    period: PeriodInput
}

input UpdateLanguageCourseAddressInfoArgs {
    address: String
    zipcode: String
}

input UpdateLanguageCourseApplicationFeeArgs {
    isActive: Boolean
    "KRW"
    originalPrice: Int
    "KRW"
    sellPrice: Int
}

input UpdateLanguageCourseArgs {
    "과정 구분"
    classType: LanguageCourseClassType
    "기숙사 정보"
    dormitoryInfo: UpdateLanguageCourseDormitoryInfoArgs
    "LanguageCourse.id"
    id: ID!
    "교육 기관"
    instituteType: LanguageCourseInstituteType
}

input UpdateLanguageCourseClassFeeArgs {
    "KRW"
    originalPrice: Int
    "KRW"
    sellPrice: Int
}

input UpdateLanguageCourseDocumentTransArgs {
    description: String
    id: ID!
    name: String
}

input UpdateLanguageCourseDormitoryFeeArgs {
    "LanguageCourseDormitoryFee.id"
    id: ID!
    isActive: Boolean
    "KRW"
    originalPrice: Int
    "KRW"
    sellPrice: Int
}

input UpdateLanguageCourseDormitoryInfoArgs {
    "기숙사 홈페이지"
    homepage: String
    "기숙사 담당자 정보"
    manager: UpdateLanguageCourseDormitoryManagerArgs
}

input UpdateLanguageCourseDormitoryManagerArgs {
    "기숙사 담당자 이메일"
    email: String
    "기숙사 담당자명"
    name: String
    "기숙사 담당자 번호"
    telephone: String
}

input UpdateLanguageCourseDormitoryTranslationArgs {
    "LanguageCourseDormitoryTranslation.id"
    id: ID!
    "기숙사 이름"
    name: String
}

input UpdateLanguageCourseHasRequiredDocumentArgs {
    "LanguageCourseHasRequiredDocument.id"
    courseHasRequiredDocumentId: ID!
    isOnlineAvailable: Boolean!
    "LanguageCourseTranslation.id"
    translationId: ID!
}

input UpdateLanguageCoursePriceInfoArgs {
    applicationFee: UpdateLanguageCourseApplicationFeeArgs
    "LanguageCourse.id"
    id: ID!
    semesters: [UpdateLanguageCourseSemesterPriceArgs!]
}

input UpdateLanguageCourseRequiredDocumentArgs {
    id: ID!
    translations: [UpdateLanguageCourseDocumentTransArgs!]!
}

input UpdateLanguageCourseRequiredInfoArgs {
    "LanguageCourseRequiredInfo.id"
    id: ID!
    translations: [UpdateLanguageCourseRequiredInfoTransArgs!]
    type: LanguageCourseRequiredInfoType
}

input UpdateLanguageCourseRequiredInfoGroupArgs {
    id: ID!
    layoutType: LanguageCourseRequiredInfoGroupLayoutType
    "[표 타입] 최소 입력 개수"
    minimumTableRowCount: Int
    translations: [UpdateLanguageCourseRequiredInfoGroupTransArgs!]
    type: LanguageCourseRequiredInfoGroupType
}

input UpdateLanguageCourseRequiredInfoGroupPriorityArgs {
    "LanguageCourseRequiredInfoGroup.id"
    id: ID!
    targetPriority: Int!
    type: LanguageCourseRequiredInfoGroupType!
}

input UpdateLanguageCourseRequiredInfoGroupTransArgs {
    id: ID!
    name: String
}

input UpdateLanguageCourseRequiredInfoPriorityArgs {
    "LanguageCourseRequiredInfoGroup.id"
    groupId: ID!
    "LanguageCourseRequiredInfo"
    id: ID!
    targetPriority: Int!
}

input UpdateLanguageCourseRequiredInfoTransArgs {
    "설명"
    description: String
    id: ID!
    "질문이름 또는 여부질문"
    name: String
    options: [String!]
    "도움말 혹은 분류도움말(표타입). 리스트 빼고 다 사용"
    placeholder: String
    "도움말2. 기간선택에서만 사용"
    placeholder2: String
}

input UpdateLanguageCourseSemesterArgs {
    coursePeriod: UpdatePeriodArgs
    id: ID!
    name: NameInput
    registrationPeriod: UpdatePeriodArgs
}

input UpdateLanguageCourseSemesterPriceArgs {
    classFee: UpdateLanguageCourseClassFeeArgs
    dormitoryFees: [UpdateLanguageCourseDormitoryFeeArgs!]
    "LanguageCourseSemester.id"
    id: ID!
}

input UpdateLanguageCourseTagInput {
    "LanguageCourseTag.id"
    id: ID!
    translations: [UpdateLanguageCourseTagTranslationInput!]!
}

input UpdateLanguageCourseTagTranslationInput {
    language: LanguageType!
    name: String!
}

input UpdateLanguageCourseTranslationArgs {
    addressInfo: UpdateLanguageCourseAddressInfoArgs
    courseInfo: String
    courseManager: UpdateLanguageCourseTranslationManagerArgs
    homepage: String
    "LanguageCourseTranslation.id"
    id: ID!
    minimumRegisterCourseCount: Int
    semesters: [UpdateLanguageCourseSemesterArgs!]
    surroundingInfo: String
}

input UpdateLanguageCourseTranslationManagerArgs {
    email: String
    name: String
    telephone: String
}

input UpdateLanguageCourseTranslationNameArgs {
    "LanguageCourseTranslation.id"
    id: ID!
    name: String!
}

input UpdateOnlineCouponArgs {
    code: Int!
    description: String
    discountType: CouponDiscountType
    discountValue: Int
    expiredAt: Date
    name: String
}

input UpdateOnsiteCouponArgs {
    code: Int!
    description: String
    discountDescription: String
    expiredAt: Date
    name: String
}

input UpdateOrderBusinessUserInfoInput {
    orderId: ID!
    userBusinessAddress: String!
    userBusinessName: String!
    userBusinessNumber: String!
}

input UpdatePartnerArgs {
    code: Int!
    email: String
    name: String
}

input UpdatePartnershipArgs {
    accountHolder: String
    address: String
    bank: String
    bankAccount: String
    businessItem: String
    businessRegistrationNumber: String
    businessType: PartnershipBusinessType
    code: Int!
    companyName: String
    email: String
    partnerName: String
    phone: String
    representativeName: String
    "업체 정산 담당자 이메일"
    settlementPartnerEmail: String
    "업체 정산 담당자 이름"
    settlementPartnerName: String
    "업체 정산 담당자 연락처"
    settlementPartnerPhone: String
    specialNote: String
}

input UpdatePercentRefundPolicyArgs {
    percentRefundPolicy: PercentRefundPolicyArgs!
    percentRefundPolicyIndex: Int!
    reservationPolicyCode: Int!
}

input UpdatePeriodArgs {
    end: Date
    start: Date
}

input UpdateProxyShopEventArgs {
    description: String
    id: ID!
    limitCount: Int
    period: PeriodInput
}

input UpdateRequiredInfoTransArgs {
    description: String
    language: LanguageType!
    name: String
}

input UpdateRequiredInfoWithTransArgs {
    code: Int!
    option: [String!]
    translations: [UpdateRequiredInfoTransArgs!]
    type: RequiredInfoType
}

input UpdateSpecialReservableTimeArgs {
    specialReservableTime: SpecialReservableTimeArgs!
    specialReservableTimeCode: Int!
}

input UpdateSpotArgs {
    address: String
    code: Int!
    latitude: Float
    longitude: Float
    telephone: String
}

input UpdateSpotImagePriorityArgs {
    imageCode: Int!
    spotCode: Int!
    targetPriority: Int!
}

input UpdateSpotItemArgs {
    code: Int!
    discountPrice: Float
    fee: Float
    originalPrice: Float
    parentCode: Int
    settlementPrice: Float
}

input UpdateSpotItemImagePriorityArgs {
    imageCode: Int!
    spotItemCode: Int!
    targetPriority: Int!
}

input UpdateSpotItemPriorityArgs {
    itemCode: Int!
    spotCode: Int!
    targetParentCode: Int!
    targetPriority: Int!
}

input UpdateTipArgs {
    tipCode: Int!
    title: String!
}

input UpdateTipPriorityArgs {
    from: Int!
    language: LanguageType!
    to: Int!
}

input UpdateUserArgs {
    country: String
    countryType: CountryType
    name: String
    nickname: String
}

input UpdateUserBlogArgs {
    blogCode: Int!
    cityCategoryCode: Int
    content: String
    mainImageUrl: URL
    title: String
}

input UpdateVoucherArgs {
    code: Int!
    description: String
    expiredAt: Date
}

input UpdateVoucherTemplateArgs {
    code: Int!
    name: String
}

input UploadFileArgs {
    name: String!
    url: ImageUrl!
}

input UploadFileToLanguageCourseRegistrationRequiredDocumentArgs {
    "LanguageCourseHasRequiredDocument.id"
    courseHasDocumentId: ID!
    file: UploadFileArgs!
    "LanguageCourseRegistration.id"
    registrationId: ID!
}

input UploadImageToBannerArgs {
    bannerCode: Int!
    imageUrl: URL!
}

input UploadImageToRequiredInfoArgs {
    imageUrl: URL!
    requiredInfoCode: Int!
}

input UploadTemplateFileToLanguageCourseHasRequiredDocumentArgs {
    file: UploadFileArgs!
    "LanguageCourseHasRequiredDocument.id"
    id: ID!
}

input UpsertBlogTransArgs {
    blogCode: Int!
    content: String
    description: String
    language: LanguageType!
    subtitle: String
    title: String
}

input UpsertLanguageCourseDormitoryTranslationInput {
    "LanguageCourseDormitory.id"
    dormitoryId: ID!
    language: LanguageType!
    name: String!
}

input UpsertReservationPolicyArgs {
    availableDaysAfterNow: Int
    deliveryFee: Int
    duration: Int
    maxOrderCount: Int
    minOrderAmount: Int
    minOrderCount: Int
    noticeEmail: String
    outsideUrl: String
    paymentTimeOutSecond: Int
    refundPolicyList: String
    spotCode: Int!
    type: ReservationType
    unableDaysBeforeNow: Int
}

input UpsertSpotItemTransArgs {
    description: String
    language: LanguageType!
    name: String
    spotItemCode: Int!
}

input UpsertSpotTransArgs {
    language: LanguageType!
    moreInformation: String
    name: String
    precautions: String
    searchTitle: String
    spotCode: Int!
    subTitle: String
    titlePrice: String
    titlePricePolicy: String
}

input UseVoucherArgs {
    code: Int!
    description: String!
}

input ViewedCountOrder {
    direction: OrderByDirectionType!
    field: ViewedCountOrderType!
}

input VoucherFilter {
    isUsed: Boolean
    voucherTemplateCode: Float
}

input VoucherOrder {
    direction: OrderByDirectionType
    field: VoucherOrderType!
}

input VoucherPageArgs {
    filter: VoucherFilter
    limit: Int!
    order: VoucherOrder
    page: Int!
}

input VoucherTemplateFilter {
    search: String
}

input VoucherTemplateOrder {
    direction: OrderByDirectionType
    field: VoucherTemplateOrderType!
}

input VoucherTemplatePageArgs {
    filter: VoucherTemplateFilter
    limit: Int!
    order: VoucherTemplateOrder
    page: Int!
}

input WarehouseCreateInput {
    address: String!
    country: CountryType!
    managerEmail: String!
    managerId: ID!
    managerPhoneNumber: String!
    name: String!
    zipcode: String!
}

input WarehouseFilter {
    country: CountryType
    isActive: Boolean
    search: String
}

input WarehouseOrder {
    direction: OrderByDirectionType!
    field: WarehouseOrderType!
}

input WarehousePageInput {
    filter: WarehouseFilter
    limit: Int!
    order: WarehouseOrder
    page: Int!
}

input WarehouseUpdateInput {
    address: String
    id: ID!
    managerEmail: String
    managerId: ID
    managerPhoneNumber: String
    name: String
    zipcode: String
}

input WatchTogetherBlogsArgs {
    blogCode: Float!
    language: LanguageType!
}

input WatchTogetherSpotsArgs {
    language: LanguageType!
    spotCode: Float!
}
